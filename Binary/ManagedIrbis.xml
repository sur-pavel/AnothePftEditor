<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManagedIrbis</name>
    </assembly>
    <members>
        <member name="T:ManagedIrbis.Authentication.AbstractAuthenticator">
            <summary>
            Credentials.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Authentication.AbstractAuthenticator.Authenticate(ManagedIrbis.Authentication.Credentials)">
            <summary>
            Authenticate given user according provided role.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Authentication.AbstractAuthenticator.GetContext(ManagedIrbis.Authentication.AuthenticationResult)">
            <summary>
            Get or create context for authenticated user.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Authentication.AuthenticationResult">
            <summary>
            Credentials.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Authentication.AuthenticationResult.Success">
            <summary>
            Successfull?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Authentication.AuthenticationResult.ErrorMessage">
            <summary>
            Error message (if any).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Authentication.Credentials">
            <summary>
            Credentials.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Authentication.Credentials.Hostname">
            <summary>
            Hostname.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Authentication.Credentials.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Authentication.Credentials.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Authentication.Credentials.Role">
            <summary>
            Role.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Authentication.UserContext">
            <summary>
            User context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Batch.BatchAccessor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchAccessor.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchAccessor.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchAccessor.ThrowIfEmptyRecord(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Throw <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"/>
            if the record is empty.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchAccessor.ReadRecords(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Read multiple records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchAccessor.ReadRecords``1(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Func{ManagedIrbis.MarcRecord,``0})">
            <summary>
            Read and transform multiple records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchAccessor.ThrowOnEmptyRecord">
            <summary>
            Throw <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"/>
            when empty record received/decoded.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchAccessor.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Batch.BatchRecordFormatter">
            <summary>
            Batch formatter for <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.#ctor(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.#ctor(System.String,System.String,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.Interval(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Read interval of records
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.FormatAll">
            <summary>
            Считывает все записи сразу.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.Search(ManagedIrbis.IrbisConnection,System.String,System.String,System.String,System.Int32)">
            <summary>
            Search and format records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.WholeDatabase(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32)">
            <summary>
            Format whole database
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordFormatter.GetEnumerator">
            <inheritdoc cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordFormatter.BatchRead">
            <summary>
            Raised on batch reading.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordFormatter.Exception">
            <summary>
            Raised when exception occurs.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.BatchSize">
            <summary>
            Batch size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.RecordsFormatted">
            <summary>
            Total number of records formatted.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordFormatter.TotalRecords">
            <summary>
            Number of records to format.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Batch.BatchRecordReader">
            <summary>
            Batch reader for <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.Interval(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Read interval of records
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.Interval(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Action{ManagedIrbis.Batch.BatchRecordReader})">
            <summary>
            Read interval of records
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.ReadAll">
            <summary>
            Считывает все записи сразу.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.ReadAll(System.Boolean)">
            <summary>
            Считывает все записи сразу.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.Search(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32)">
            <summary>
            Search and read records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.Search(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32,System.Action{ManagedIrbis.Batch.BatchRecordReader})">
            <summary>
            Search and read records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.WholeDatabase(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Read whole database
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.WholeDatabase(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Action{ManagedIrbis.Batch.BatchRecordReader})">
            <summary>
            Read whole database
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.WholeDatabase(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Boolean,System.Action{ManagedIrbis.Batch.BatchRecordReader})">
            <summary>
            Read whole database
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordReader.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordReader.BatchRead">
            <summary>
            Raised on batch reading.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordReader.Exception">
            <summary>
            Raised when exception occurs.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordReader.ReadComplete">
            <summary>
            Raised when all data read.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.BatchSize">
            <summary>
            Batch size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.OmitDeletedRecords">
            <summary>
            Omit deleted records?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.RecordsRead">
            <summary>
            Total number of records read.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordReader.TotalRecords">
            <summary>
            Number of records to read.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Batch.BatchRecordWriter">
            <summary>
            Batch writer for <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.MarcRecord})">
            <summary>
            Add many records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.Append(ManagedIrbis.MarcRecord)">
            <summary>
            Append one record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.Flush">
            <summary>
            Flush the buffer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchRecordWriter.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="E:ManagedIrbis.Batch.BatchRecordWriter.BatchWrite">
            <summary>
            Raised on batch write.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.Actualize">
            <summary>
            Actualize records when writing.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.Capacity">
            <summary>
            Capacity.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchRecordWriter.RecordsWritten">
            <summary>
            Total number of records written.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Batch.BatchSearcher">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Batch.BatchSearcher.DefaultBatchSize">
            <summary>
            Default batch size.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchSearcher.#ctor(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchSearcher.BuildExpression(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Build search query from specified terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchSearcher.Search(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Search for specified terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Batch.BatchSearcher.SearchRead(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Search for specified terms.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchSearcher.BatchSize">
            <summary>
            Batch size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchSearcher.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchSearcher.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchSearcher.Operation">
            <summary>
            Operation.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Batch.BatchSearcher.Prefix">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioContext.#ctor(ManagedIrbis.Biblio.BiblioDocument,ManagedIrbis.Client.IrbisProvider,AM.Text.Output.AbstractOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioContext.FindRecord(System.Int32)">
            <summary>
            Find the record with specified MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioContext.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioContext.Processor">
            <summary>
            Processor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioContext.Document">
            <summary>
            Document.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioContext.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioContext.Log">
            <summary>
            Log.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioContext.ItemCount">
            <summary>
            Count of <see cref="T:ManagedIrbis.Biblio.BiblioItem"/>s.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioContext.Records">
            <summary>
            All the gathered records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioContext.BadRecords">
            <summary>
            Bad records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioContext.ReportContext">
            <summary>
            Context for report.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioUtility.AddTrailingDot(System.String)">
            <summary>
            Add trailing dot to every line in the text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.ChapterWithErrors">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioChapter">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.IAttributable">
            <summary>
            Object with attributes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.IAttributable.Attributes">
            <summary>
            Attributes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.GetProperty``2(System.Func{``0,``1})">
            <summary>
            Get property value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.RenderChildren(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Render children chapters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.RenderTitle(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Render the chapter title.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.BuildDictionary(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Build dictionaries.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Build <see cref="T:ManagedIrbis.Biblio.BiblioItem"/>s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.GatherTerms(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Gather terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.GatherRecords(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Gather records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.Initialize(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Initialize the chapter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.NumberItems(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Number items.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Render the chapter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.Walk(System.Action{ManagedIrbis.Biblio.BiblioChapter})">
            <summary>
            Walk over the chapter and its children.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioChapter.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioChapter.Active">
            <summary>
            Whether the chapter is active?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioChapter.Attributes">
            <inheritdoc cref="P:ManagedIrbis.Reports.IAttributable.Attributes"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioChapter.Children">
            <summary>
            Children chapters.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioChapter.Title">
            <summary>
            Title of the chapter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioChapter.Parent">
            <summary>
            Parent chapter (if any).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioChapter.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioChapter.IsServiceChapter">
            <summary>
            Whether the chapter is for service purpose?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioChapter.Settings">
            <summary>
            Special settings associated with the chapter
            and its children.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithErrors.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.ChapterWithStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithStatistics.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithStatistics.IsServiceChapter">
            <inheritdoc cref="P:ManagedIrbis.Biblio.BiblioChapter.IsServiceChapter"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.CumulatingSubChapter">
            <summary>
            Сводное описание многотомного издания.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.MenuSubChapter">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.ChapterWithRecords">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithRecords.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithRecords.FormatRecords(ManagedIrbis.Biblio.BiblioContext,System.Int32[],System.String)">
            <summary>
            Format records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithRecords.FormatRecords(ManagedIrbis.Biblio.BiblioContext,System.String)">
            <summary>
            Format records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithRecords.Records">
            <summary>
            Records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithRecords.Duplicates">
            <summary>
            Duplicates.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuSubChapter.GetDescriptionFormat">
            <summary>
            Get description format from chapter hierarchy.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuSubChapter.RenderDuplicates(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Render duplicates.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuSubChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuSubChapter.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuSubChapter.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuSubChapter.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuSubChapter.MainChapter">
            <summary>
            Main chapter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuSubChapter.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuSubChapter.IsServiceChapter">
            <inheritdoc cref="P:ManagedIrbis.Biblio.BiblioChapter.IsServiceChapter"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.CumulatingSubChapter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.CumulatingSubChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.CumulatingSubChapter.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.CumulatingSubChapter.Groups">
            <summary>
            Groups.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.CumulatingSubChapter.Multivolume">
            <summary>
            Multivolume document.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.CumulatingSubChapter.Multivolume.Header">
            <summary>
            Header part.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.CumulatingSubChapter.Multivolume.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.CumulatingSubChapter.Multivolume.Item">
            <summary>
            Item.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.GroupingSubChapter">
            <summary>
            Группировка документов, например, в авторские комплексы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.GroupingSubChapter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.GroupingSubChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.MenuSubChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.GroupingSubChapter.NumberItems(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.NumberItems(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.GroupingSubChapter.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.MenuSubChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.GroupingSubChapter.Groups">
            <summary>
            Groups.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.GroupingSubChapter.BookGroup">
            <summary>
            Group of books.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.GroupingSubChapter.BookGroup.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.GroupingSubChapter.BookGroup.OtherGroup">
            <summary>
            Group for "other" records.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.MenuChapter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuChapter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuChapter.GatherRecords(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.GatherRecords(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuChapter.Initialize(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Initialize(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.MenuChapter.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.LeafOnly">
            <summary>
            Leaf nodes only can contain records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.MenuName">
            <summary>
            Menu name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.OrderBy">
            <summary>
            Order.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.RecordSelector">
            <summary>
            Record selector.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.SearchExpression">
            <summary>
            Search expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.TitleFormat">
            <summary>
            Title format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.Records">
            <summary>
            Records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.MenuSettings">
            <summary>
            List of settings.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.MenuChapter.IsServiceChapter">
            <inheritdoc cref="P:ManagedIrbis.Biblio.BiblioChapter.IsServiceChapter"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.SimpleChapter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.SimpleChapter.GetDescriptionFormat">
            <summary>
            Get description format from chapter hierarchy.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.SimpleChapter.GetOrderFormat">
            <summary>
            Get description format from chapter hierarchy.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.SimpleChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.BuildItems(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.SimpleChapter.GatherRecords(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.GatherRecords(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.SimpleChapter.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.SimpleChapter.Filter">
            <summary>
            Filter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.SimpleChapter.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.SimpleChapter.Order">
            <summary>
            Order.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDictionary.Add(System.String,System.Int32)">
            <summary>
            Add title and reference.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDictionary.Dump(AM.Text.Output.AbstractOutput)">
            <summary>
            Dump the dictionary.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDictionary.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.DictionaryEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.DictionaryEntry.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.DictionaryEntry.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.DictionaryEntry.Title">
            <summary>
            Title.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.DictionaryEntry.References">
            <summary>
            List of references.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.TermCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.TermCollection.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioFilter.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioFilter.FormatExpression">
            <summary>
            Expression for record formatting.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioFilter.SelectExpression">
            <summary>
            Expression for record selection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioFilter.SortExpression">
            <summary>
            Expression for record sorting.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioItem.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioItem.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioItem.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioItem.Chapter">
            <summary>
            Chapter the item belongs to.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioItem.Number">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioItem.Record">
            <summary>
            Record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioItem.Description">
            <summary>
            Bibliographical description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioItem.Order">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioItem.Terms">
            <summary>
            Terms.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioItem.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioTerm">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioTerm.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioTerm.Dictionary">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioTerm.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioTerm.Order">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioTerm.Item">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioDocument">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.BuildDictionaries(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Build dictionaries.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.BuildItems(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Build items.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.GatherRecords(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Gather records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.GatherTerms(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Gather terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.Initialize(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Initialize the document.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.LoadFile(System.String)">
            <summary>
            Load the file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.NumberItems(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Number items.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.RenderItems(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Render items.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioDocument.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioDocument.Chapters">
            <summary>
            Chapters.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.BiblioProcessor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.#ctor(ManagedIrbis.Reports.ReportOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.BildDictionaries(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.BildItems(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.FinalRender(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.GatherRecords(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Gather records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.GatherTerms(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Gather terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.NumberItems(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Number items.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.RenderReport(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.AcquireFormatter(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Get formatter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.BuildDocument(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            Build document.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.GetText(ManagedIrbis.Biblio.BiblioContext,System.String)">
            <summary>
            Get text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.Initialize(ManagedIrbis.Biblio.BiblioContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.BiblioProcessor.ReleaseFormatter(ManagedIrbis.Biblio.BiblioContext,ManagedIrbis.Pft.IPftFormatter)">
            <summary>
            Release the formatter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioProcessor.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.BiblioProcessor.Report">
            <summary>
            Report.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.ChapterCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterCollection.#ctor(ManagedIrbis.Biblio.BiblioChapter)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterCollection.InsertItem(System.Int32,ManagedIrbis.Biblio.BiblioChapter)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterCollection.SetItem(System.Int32,ManagedIrbis.Biblio.BiblioChapter)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterCollection.ClearItems">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.ClearItems"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterCollection.RemoveItem(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterCollection.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterCollection.Parent">
            <summary>
            Parent.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.ChapterWithDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithDictionary.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithDictionary.BuildDictionary(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.BuildDictionary(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithDictionary.GatherTerms(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.GatherTerms(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithDictionary.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithDictionary.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithDictionary.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithDictionary.Terms">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithDictionary.OrderByClause">
            <summary>
            OrderBy expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithDictionary.SelectClause">
            <summary>
            Select expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithDictionary.ExcludeList">
            <summary>
            Entries to exclude.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithDictionary.IsServiceChapter">
            <inheritdoc cref="P:ManagedIrbis.Biblio.BiblioChapter.IsServiceChapter"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.ChapterWithText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ChapterWithText.Render(ManagedIrbis.Biblio.BiblioContext)">
            <inheritdoc cref="M:ManagedIrbis.Biblio.BiblioChapter.Render(ManagedIrbis.Biblio.BiblioContext)"/>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithText.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.ChapterWithText.IsServiceChapter">
            <inheritdoc cref="P:ManagedIrbis.Biblio.BiblioChapter.IsServiceChapter"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.ItemCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ItemCollection.SortByOrder">
            <summary>
            Sort items by <see cref="P:ManagedIrbis.Biblio.BiblioItem.Order"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.ItemCollection.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.RecordCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.RecordCollection.SortRecords">
            <summary>
            Sort the records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.RecordCollection.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.SpecialSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.SpecialSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.SpecialSettings.GetSetting(System.String)">
            <summary>
            Get setting with specified name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.SpecialSettings.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Biblio.SpecialSettings.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.SpecialSettings.SpecialSettingsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc cref="M:Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.SpecialSettings.SpecialSettingsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc cref="M:Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)"/>
        </member>
        <member name="M:ManagedIrbis.Biblio.SpecialSettings.SpecialSettingsConverter.CanConvert(System.Type)">
            <inheritdoc cref="M:Newtonsoft.Json.JsonConverter.CanConvert(System.Type)"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.TermComparer">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Biblio.TermComparer.Numeric">
            <summary>
            Numeric comparer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.TermComparer.Numeric.Compare(ManagedIrbis.Biblio.BiblioTerm,ManagedIrbis.Biblio.BiblioTerm)">
            <inheritdoc cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
        </member>
        <member name="T:ManagedIrbis.Biblio.TermComparer.Trivial">
            <summary>
            Trivial comparer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Biblio.TermComparer.Trivial.Compare(ManagedIrbis.Biblio.BiblioTerm,ManagedIrbis.Biblio.BiblioTerm)">
            <inheritdoc cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
        </member>
        <member name="T:ManagedIrbis.Client.ConnectedFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.IPftFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.IPftFormatter.FormatRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Format the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.IPftFormatter.FormatRecord(System.Int32)">
            <summary>
            Format the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.IPftFormatter.FormatRecords(System.Int32[])">
            <summary>
            Format some records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.IPftFormatter.ParseProgram(System.String)">
            <summary>
            Parse the program.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.IPftFormatter.SupportsExtendedSyntax">
            <summary>
            Whether the formatter supports the extended syntax.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedFormatter.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedFormatter.FormatRecord(ManagedIrbis.MarcRecord)">
            <inheritdoc cref="M:ManagedIrbis.Pft.IPftFormatter.FormatRecord(ManagedIrbis.MarcRecord)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedFormatter.FormatRecord(System.Int32)">
            <inheritdoc cref="M:ManagedIrbis.Pft.IPftFormatter.FormatRecord(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedFormatter.FormatRecords(System.Int32[])">
            <inheritdoc cref="M:ManagedIrbis.Pft.IPftFormatter.FormatRecords(System.Int32[])"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedFormatter.ParseProgram(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Pft.IPftFormatter.ParseProgram(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedFormatter.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Client.ConnectedFormatter.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ConnectedFormatter.Source">
            <summary>
            Format source.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ConnectedFormatter.SupportsExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.IPftFormatter.SupportsExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Fields.AuthorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.AuthorInfo.EmptyArray">
            <summary>
            Empty array of the <see cref="T:ManagedIrbis.Fields.AuthorInfo"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ApplyToField(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.AuthorInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ApplyToField700(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.AuthorInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ApplyToField600(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.AuthorInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ApplyToField330(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.AuthorInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ApplyToField454(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.AuthorInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ApplyToField481(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.AuthorInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ApplyOneAuthor(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Apply the info to one of authors.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ExtractFamilyName(System.String)">
            <summary>
            Extract family name from the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ParseRecord(ManagedIrbis.MarcRecord,System.String[])">
            <summary>
            Parse the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ParseField(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ParseField700(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ParseField600(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ParseField330(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ParseField454(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ParseField481(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ParseOneAuthor(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Parse one of the authors.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ToField700(System.String)">
            <summary>
            Transform back to field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.AuthorInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.AllKnownTags">
            <summary>
            Known tags.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.KnownTags1">
            <summary>
            Known tags.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.KnownTags2">
            <summary>
            Known tags.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.KnownTags3">
            <summary>
            Known tags.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.KnownTags4">
            <summary>
            Known tags.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.KnownTags5">
            <summary>
            Known tags.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.FamilyName">
            <summary>
            Фамилия. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.Initials">
            <summary>
            Инициалы (сокращение). Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.FullName">
            <summary>
            Расширение инициалов (имя и отчество). Подполе g.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.CantBeInverted">
            <summary>
            Инвертирование имени недопустимо? Подполе 9.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.Postfix">
            <summary>
            Неотъемлемая часть имени (отец, сын, младший, старший
            и т. п.). Подполе 1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.Appendix">
            <summary>
            Дополнения к имени кроме дат (род деятельности, звание,
            титул и т. д.). Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.Number">
            <summary>
            Династический номер (римские цифры). Подполе d.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.Dates">
            <summary>
            Даты жизни. Подполе f.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.Variant">
            <summary>
            Разночтение фамилии. Подполе r.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.WorkPlace">
            <summary>
            Место работы автора. Подполе p.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.AuthorInfo.Field">
            <summary>
            Associated field.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.BinaryResource">
            <summary>
            Binary resource in field 953.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.BinaryResource.Tag">
            <summary>
            Default tag for binary resources.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Decode">
            <summary>
            Decode the resource.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Encode(System.Byte[])">
            <summary>
            Encode the resource.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parse field 953.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Parse fields 953 of the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.BinaryResource.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Parse fields 953 of the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.BinaryResource.Kind">
            <summary>
            Kind of resource. Subfield a.
            </summary>
            <remarks>For example, "jpg".</remarks>
        </member>
        <member name="P:ManagedIrbis.Fields.BinaryResource.Resource">
            <summary>
            Percent-encoded resource. Subfield b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.BinaryResource.Title">
            <summary>
            Title of resource. Subfield t.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.BinaryResource.View">
            <summary>
            View method. Subfield p.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.CatalogingRules">
            <summary>
            Правила каталогизации в соответствии с 919g.mnu.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CatalogingRules.AACR2">
            <summary>
            Anglo-American cataloguing rules.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CatalogingRules.BDRB">
            <summary>
            Library of Congress (USA).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CatalogingRules.PSBO">
            <summary>
            Российские "Правила составления библиографического описания".
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CatalogingRules.RCR">
            <summary>
            Российские "Правила каталогизации" (РПК).
            (Москва, 2005).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.CharacterSetCode">
            <summary>
            Наборы символов в соответствии с gr.mnu.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.BasicLatin">
            <summary>
            Основной латинский набор.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.BasicCyrillic">
            <summary>
            Основной кириллический набор.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.ExtendedLatin">
            <summary>
            Расширенный латинский набор.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.ExtendedCyrillic">
            <summary>
            Расширенный кириллический набор.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.Greek">
            <summary>
            Греческий набор.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.African">
            <summary>
            Набор символов африканских языков.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.Georgian">
            <summary>
            Набор символов грузинского алфавита.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.Hebrew1">
            <summary>
            Набор символов иврита(таблица 1).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.Hebrew2">
            <summary>
            Набор символов иврита(таблица 2).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.ISO10646">
            <summary>
            ISO 10646 (Unicode).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.CP866">
            <summary>
            Code Page 866 (MSDOS russian).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.WIN1251">
            <summary>
            WIN 1251 (Windows russian).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CharacterSetCode.KOI8">
            <summary>
            KOI-8 (Unix russian).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.CodesInfo">
            <summary>
            Коды (поле 900).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CodesInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CodesInfo.ToField">
            <summary>
            Transform back to field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentType">
            <summary>
            Тип документа. Подполе t.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentKind">
            <summary>
            Вид документа. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter1">
            <summary>
            Характер документа. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter2">
            <summary>
            Характер документа. Подполе 2.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter3">
            <summary>
            Характер документа. Подполе 3.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter4">
            <summary>
            Характер документа. Подполе 4.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter5">
            <summary>
            Характер документа. Подполе 5.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.DocumentCharacter6">
            <summary>
            Характер документа. Подполе 6.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.PurposeCode1">
            <summary>
            Код целевого назначения. Подполе x.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.PurposeCode2">
            <summary>
            Код целевого назначения. Подполе y.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.PurposeCode3">
            <summary>
            Код целевого назначения. Подполе 9.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CodesInfo.AgeRestrictions">
            <summary>
            Возрастные ограничения. Подполе z.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.CollectiveInfo">
            <summary>
            Коллективный (в т. ч. временный) автор.
            Раскладка полей 710, 711, 962, 972.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.CollectiveInfo.EmptyArray">
            <summary>
            Empty array of the <see cref="T:ManagedIrbis.Fields.CollectiveInfo"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CollectiveInfo.ApplyToField(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.CollectiveInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CollectiveInfo.ParseRecord(ManagedIrbis.MarcRecord,System.String[])">
            <summary>
            Parse the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CollectiveInfo.ParseField(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CollectiveInfo.ToField(System.String)">
            <summary>
            Convert <see cref="T:ManagedIrbis.Fields.CollectiveInfo"/>
            to <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.CollectiveInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.KnownTags">
            <summary>
            Known tags.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Title">
            <summary>
            Наименование. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Country">
            <summary>
            Страна. Подполе s.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Abbreviation">
            <summary>
            Аббревиатура. Подполе r.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Number">
            <summary>
            Номер. Подполе n.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Date">
            <summary>
            Дата проведения мероприятия. Подполе f.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.City1">
            <summary>
            Город. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Department">
            <summary>
            Подразделение. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Characteristic">
            <summary>
            Характерное название подразделения. Подполе x.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Gost">
            <summary>
            Сокращение по ГОСТ. Подполе 7.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.CollectiveInfo.Field">
            <summary>
            Associated field.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.ExemplarInfo">
            <summary>
            Информация об экземпляре (поле 910).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarInfo.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarInfo.ExemplarTag">
            <summary>
            Тег полей, содержащих сведения об экземплярах.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parses the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи на экземпляры.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи на экземпляры.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.ToField">
            <summary>
            Преобразование экземпляра обратно в поле записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.CompareNumbers(ManagedIrbis.Fields.ExemplarInfo,ManagedIrbis.Fields.ExemplarInfo)">
            <summary>
            Compares two specified numbers.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfo.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Id">
            <summary>
            Identifier for LiteDB.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Status">
            <summary>
            Статус. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Number">
            <summary>
            Инвентарный номер. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Date">
            <summary>
            Дата поступления. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Place">
            <summary>
            Место хранения. Подполе d.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Collection">
            <summary>
            Наименование коллекции. Подполе q.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.ShelfIndex">
            <summary>
            Расстановочный шифр. Подполе r.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Price">
            <summary>
            Цена экземпляра. Подполе e.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Barcode">
            <summary>
            Штрих-код/радиометка. Подполе h.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Amount">
            <summary>
            Число экземпляров. Подполе 1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Purpose">
            <summary>
            Специальное назначение фонда. Подполе t.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Coefficient">
            <summary>
            Коэффициент многоразового использования. Подполе =.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.OffBalance">
            <summary>
            Экземпляры не на баланс. Подполе 4.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.KsuNumber1">
            <summary>
            Номер записи КСУ. Подполе u.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.ActNumber1">
            <summary>
            Номер акта. Подполе y.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Channel">
            <summary>
            Канал поступления. Подполе f.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.OnHand">
            <summary>
            Число выданных экземпляров. Подполе 2.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.ActNumber2">
            <summary>
            Номер акта списания. Подполе v.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.WriteOff">
            <summary>
            Количество списываемых экземпляров. Подполе x.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Completion">
            <summary>
            Количество экземпляров для докомплектования. Подполе k.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.ActNumber3">
            <summary>
            Номер акта передачи в другое подразделение. Подполе w.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Moving">
            <summary>
            Количество передаваемых экземпляров. Подполе z.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.NewPlace">
            <summary>
            Нове место хранения. Подполе m.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.CheckedDate">
            <summary>
            Дата проверки фонда. Подполе s.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.CheckedAmount">
            <summary>
            Число проверенных экземпляров. Подполе 0.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.RealPlace">
            <summary>
            Реальное место нахождения книги. Подполе !.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.BindingIndex">
            <summary>
            Шифр подшивки. Подполе p.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.BindingNumber">
            <summary>
            Инвентарный номер подшивки. Подполе i.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Year">
            <summary>
            Год издания. Берётся не из подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.OtherSubFields">
            <summary>
            Прочие подполя, не попавшие в вышеперечисленные.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Mfn">
            <summary>
            MFN записи, из которой заимствован экземпляр.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Description">
            <summary>
            Краткое библиографическое описание экземпляра.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Bbk">
            <summary>
            ББК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Issue">
            <summary>
            Номер выпуска (для журналов).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.SequentialNumber">
            <summary>
            Номер по порядку (для списков).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.OrderingData">
            <summary>
            Информация для упорядочения в списках.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Marked">
            <summary>
            Флаг.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.Record">
            <summary>
            Record for just in case.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.ExemplarInfoComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfoComparer.ByDescription">
            <summary>
            Compare <see cref="T:ManagedIrbis.Fields.ExemplarInfo"/>
            by <see cref="P:ManagedIrbis.Fields.ExemplarInfo.Description"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfoComparer.ByNumber">
            <summary>
            Compare <see cref="T:ManagedIrbis.Fields.ExemplarInfo"/>
            by <see cref="P:ManagedIrbis.Fields.ExemplarInfo.Number"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfoComparer.ByDescriptionComparer.Compare(ManagedIrbis.Fields.ExemplarInfo,ManagedIrbis.Fields.ExemplarInfo)">
            <inheritdoc cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarInfoComparer.ByNumberComparer.Compare(ManagedIrbis.Fields.ExemplarInfo,ManagedIrbis.Fields.ExemplarInfo)">
            <inheritdoc cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
        </member>
        <member name="T:ManagedIrbis.Fields.ExemplarManager">
            <summary>
            Manages exemplars of the books/magazines etc.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.#ctor(ManagedIrbis.IrbisConnection,AM.Text.Output.AbstractOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Add(ManagedIrbis.Fields.ExemplarInfo)">
            <summary>
            Add given exemplar to the collection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.Fields.ExemplarInfo})">
            <summary>
            Add many.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Clear">
            <summary>
            Clear the list of exemplars.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.GetDescription(ManagedIrbis.MarcRecord)">
            <summary>
            Get bibliographic description.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.GetDescription(ManagedIrbis.MarcRecord,ManagedIrbis.Fields.ExemplarInfo)">
            <summary>
            Get bibliographic description.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Extend(ManagedIrbis.Fields.ExemplarInfo,ManagedIrbis.MarcRecord)">
            <summary>
            Extend info.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Find(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.FromRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Parses the record for exemplars.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.IsNewspaper(ManagedIrbis.MarcRecord)">
            <summary>
            Determines whether the record is newspaper/magazine
            or not.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.ListPlaces">
            <summary>
            List library places.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.LoadFromFile(System.String)">
            <summary>
            Load from file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Read(System.String)">
            <summary>
            Reads exemplar for given number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.ReadExtend(System.String)">
            <summary>
            Reads exemplar for given number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.ReadConfiguration(System.String,System.Text.Encoding)">
            <summary>
            Read configuration.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.SaveConfiguration(System.String,System.Text.Encoding)">
            <summary>
            Save the configuration.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.SaveToFile(System.String)">
            <summary>
            Save to the file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.ReadRange(System.String,System.String)">
            <summary>
            Read many.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.Remove(System.String)">
            <summary>
            Remove
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.WriteLine(System.String,System.Object[])">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExemplarManager.WriteDelimiter">
            <summary>
            Write delimiter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.Connection">
            <summary>
            Client connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.Format">
            <summary>
            Brief format name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.List">
            <summary>
            List of exemplars.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExemplarManager.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.ExemplarStatus">
            <summary>
            Status of book exemplar.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Free">
            <summary>
            Free.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Loan">
            <summary>
            Loan.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Wait">
            <summary>
            Wait.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Bindery">
            <summary>
            In bindery.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Lost">
            <summary>
            Lost.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.NotAvailable">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.WrittenOff">
            <summary>
            Written off.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.OnTheWay">
            <summary>
            On the way.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Reserved">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.BiblioNet">
            <summary>
            BiblioNet.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Bound">
            <summary>
            Bound.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Reproduction">
            <summary>
            Reproduction.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExemplarStatus.Summary">
            <summary>
            Summary.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.ExternalResource">
            <summary>
            Данные о внешнем ресурсе (поле 951).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExternalResource.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ExternalResource.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parse the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.ToField">
            <summary>
            Превращение обратно в поле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.AM#Runtime#IHandmadeSerializable#RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.AM#Runtime#IHandmadeSerializable#SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Fields.ExternalResource.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.FileName">
            <summary>
            Имя файла. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Url">
            <summary>
            URL. Подполе i.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Description">
            <summary>
            Текст для ссылки. Подполе t.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.FileCount">
            <summary>
            Количество файлов. Подполе n.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.NameTemplate">
            <summary>
            Имя-шаблон первого файла. Подполе m.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.FileType">
            <summary>
            Тип внешнего файла. Подполе h.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Textbook">
            <summary>
            Признак электронного учебника. Подполе k.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.AccessLevel">
            <summary>
            Уровень доступа по категориям пользователей. Подполе d.
            Оно же - дата начала предоставления информации.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.LanOnly">
            <summary>
            Доступен только в ЛВС. Подполе l.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.InputDate">
            <summary>
            Дата ввода информации. Подполе 1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.FileSize">
            <summary>
            Размер файла. Подполе 2.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Number">
            <summary>
            Номер источника копии. Подполе 3.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.LastCheck">
            <summary>
            Дата последней проверки доступности. Подполе 5.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.ImageSize">
            <summary>
            Размеры изображения в пикселах. Подполе 6.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Issn">
            <summary>
            ISSN. Подполе X.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Form">
            <summary>
            Форма представления. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Provider">
            <summary>
            Код поставщика информации. Подполе f.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Price">
            <summary>
            Цена. Подполе e.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Index">
            <summary>
            Шифр в БД. Подполе w.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.Remarks">
            <summary>
            Примечания в свободной форме. Подполе p.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.System">
            <summary>
            Электронная библиотечная система. Подполе s.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ExternalResource.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.FieldFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.#ctor(ManagedIrbis.Client.IrbisProvider,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.AllFields(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Whether all fields satisfy the condition.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.AnyField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Whether any field satisfy the condition.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.CheckField(ManagedIrbis.RecordField)">
            <summary>
            Check the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.FilterFields(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Filter records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.FilterRecords(System.Collections.Generic.IEnumerable{ManagedIrbis.MarcRecord})">
            <summary>
            Filter records by field specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.First(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Find first satisfying field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.Last(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Find last satisfying field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.FieldFilter.SetProgram(System.String)">
            <summary>
            Set filter program.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.FieldFilter.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.FieldFilter.Formatter">
            <summary>
            Formatter.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.HeadingInfo">
            <summary>
            Предметная рубрика, поле 606.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.HeadingInfo.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.HeadingInfo.ApplyToField(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.HeadingInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.HeadingInfo.ParseField(ManagedIrbis.RecordField)">
            <summary>
            Parse the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.HeadingInfo.ParseRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Parse the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.HeadingInfo.ToField">
            <summary>
            Convert <see cref="T:ManagedIrbis.Fields.HeadingInfo"/>
            to <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.HeadingInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.Title">
            <summary>
            Предметный заголовок. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.Subtitle1">
            <summary>
            Первый подзаголовок. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.Subtitle2">
            <summary>
            Второй подзаголовок. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.Subtitle3">
            <summary>
            Третий подзаголовок. Подполе d.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.GeographicalSubtitle1">
            <summary>
            Географический подзаголовок. Подполе g.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.GeographicalSubtitle2">
            <summary>
            Географический подзаголовок. Подполе e.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.GeographicalSubtitle3">
            <summary>
            Географический подзаголовок. Подполе o.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.ChronologicalSubtitle">
            <summary>
            Хронологический подзаголовок. Подполе h.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.Aspect">
            <summary>
            Формальный подзаголовок (аспект). Подполе 9.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.HeadingInfo.Field">
            <summary>
            Associated field.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.ImprintInfo">
            <summary>
            Выходные данные, поле 210.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ImprintInfo.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.ImprintInfo.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parse the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ShouldSerializePublisher">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.ImprintInfo.Publisher"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ShouldSerializePrintedPublisher">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.ImprintInfo.PrintedPublisher"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ShouldSerializeCity1">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.ImprintInfo.City1"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ShouldSerializeCity2">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.ImprintInfo.City2"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ShouldSerializeCity3">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.ImprintInfo.City3"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ShouldSerializeYear">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.ImprintInfo.Year"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ShouldSerializePlace">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.ImprintInfo.Place"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ShouldSerializePrintingHouse">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.ImprintInfo.PrintingHouse"/> field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ToField">
            <summary>
            Превращение обратно в поле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.AM#Runtime#IHandmadeSerializable#RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.AM#Runtime#IHandmadeSerializable#SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.ImprintInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.ImprintInfo.Publisher">
            <summary>
            Издательство (издающая организация), подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ImprintInfo.PrintedPublisher">
            <summary>
            Издательство на издании, подполе l.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ImprintInfo.City1">
            <summary>
            Город1, подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ImprintInfo.City2">
            <summary>
            Город2, подполе x.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ImprintInfo.City3">
            <summary>
            Город3, подполе y.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ImprintInfo.Year">
            <summary>
            Год издания, подполе d.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ImprintInfo.Place">
            <summary>
            Место печати, подполе 1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.ImprintInfo.PrintingHouse">
            <summary>
            Типография, подполе t.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.IsbnInfo">
            <summary>
            ISBN и цена, поле 10.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.IsbnInfo.KnownCodes">
            <summary>
            Known codes.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.IsbnInfo.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.IsbnInfo.ApplyToField(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.IsbnInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.IsbnInfo.ParseRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Parse the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.IsbnInfo.ParseField(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.IsbnInfo.ToField">
            <summary>
            Transform back to field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.IsbnInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.IsbnInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.IsbnInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.IsbnInfo.Isbn">
            <summary>
            ISBN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.IsbnInfo.Refinement">
            <summary>
            Уточнение. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.IsbnInfo.Erroneous">
            <summary>
            Ошибочный ISBN. Подполе z.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.IsbnInfo.Price">
            <summary>
            Цена общая для всех экземпляров. Подполе d.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.IsbnInfo.Currency">
            <summary>
            Обозначение валюты. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.IsbnInfo.Field">
            <summary>
            Associated field.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.LanguageCode">
            <summary>
            Коды языков в соответствии с jz.mnu.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.English">
            <summary>
            Английский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Belorussian">
            <summary>
            Белорусский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Buryat">
            <summary>
            Бурятский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Spanish">
            <summary>
            Испанский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Italian">
            <summary>
            Итальянский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Kazakh">
            <summary>
            Казахский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Chinese">
            <summary>
            Китайский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Korean">
            <summary>
            Корейский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Latin">
            <summary>
            Латинский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Multilanguage">
            <summary>
            Многоязычное издание.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Undefined">
            <summary>
            Не определено.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.German">
            <summary>
            Немецкий.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Polish">
            <summary>
            Польский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Portuguese">
            <summary>
            Португальский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Rumanian">
            <summary>
            Румынский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Russian">
            <summary>
            Русский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Tartarian">
            <summary>
            Татарский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Ukrainian">
            <summary>
            Украинский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.French">
            <summary>
            Французский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Hindi">
            <summary>
            Хинди.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Czech">
            <summary>
            Чешский.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageCode.Japanese">
            <summary>
            Японский.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.LanguageInfo">
            <summary>
            Язык документа (дополнительные данные). Поле 919.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageInfo.KnownCodes">
            <summary>
            Known codes.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.LanguageInfo.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.CatalogingLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.CatalogingRules">
            <summary>
            
            </summary>
            <remarks>See
            <see cref="T:ManagedIrbis.Fields.CatalogingRules"/> class.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.CharacterSet">
            <summary>
            
            </summary>
            <remarks>See <see cref="T:ManagedIrbis.Fields.CharacterSetCode"/> class.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.TitleCharacterSet">
            <summary>
            
            </summary>
            <remarks>See <see cref="T:ManagedIrbis.Fields.TitleCharacterSet"/> class.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.IntermediateTranslationLanguage">
            <summary>
            
            </summary>
            <remarks>See <see cref="T:ManagedIrbis.Fields.LanguageCode"/> class.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.OriginalLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.TocLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.TitlePageLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.MainTitleLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.LanguageInfo.AccompanyingMaterialLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.PartInfo">
            <summary>
            Выпуск, часть. Поле 923.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.PartInfo.KnownCodes">
            <summary>
            Known codes.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.PartInfo.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PartInfo.ApplyToField(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.PartInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PartInfo.ParseRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Parse the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PartInfo.ParseField(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PartInfo.ToField">
            <summary>
            Transform back to field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PartInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.PartInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.PartInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.PartInfo.SecondLevelNumber">
            <summary>
            Обозначение и № 2-ой единицы деления (Выпуск). Подполе h.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PartInfo.SecondLevelTitle">
            <summary>
            Заглавие 2-ой единицы деления (Выпуск). Подполе i.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PartInfo.ThirdLevelNumber">
            <summary>
            Обозначение и № 3-ей единицы деления (Часть). Подполе k.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PartInfo.ThirdLevelTitle">
            <summary>
            Заглавие 3-ей единицы деления (Часть). Подполе l.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PartInfo.Role">
            <summary>
            Роль (как выводить в словарь?). Подполе u.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PartInfo.Field">
            <summary>
            Associated field.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.PersonaliaInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.PersonaliaInfo.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PersonaliaInfo.ApplyToField(ManagedIrbis.RecordField)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Fields.PersonaliaInfo"/>
            to the <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PersonaliaInfo.ParseRecord(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Parse the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PersonaliaInfo.ParseField(ManagedIrbis.RecordField)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PersonaliaInfo.ToField">
            <summary>
            Convert <see cref="T:ManagedIrbis.Fields.PersonaliaInfo"/>
            to <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.PersonaliaInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.DataKind">
            <summary>
            Вид данных. Подполе ).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Text">
            <summary>
            Текст. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Name">
            <summary>
            Фамилия, инициалы. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Extension">
            <summary>
            Расширение инициалов. Подполе g.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.CantBeInverted">
            <summary>
            Инвертирование имени недопустимо? Подполе 9.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Postfix">
            <summary>
            Неотъемлемая часть имени (отец, сын, младший, старший
            и т. п.). Подполе 1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Appendix">
            <summary>
            Дополнения к имени кроме дат (род деятельности, звание,
            титул и т. д.). Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Number">
            <summary>
            Династический номер (римские цифры). Подполе d.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Dates">
            <summary>
            Даты жизни. Подполе f.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Variant">
            <summary>
            Разночтение фамилии. Подполе r.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.WorkPlace">
            <summary>
            Место работы автора. Подполе p.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.PersonaliaInfo.Field">
            <summary>
            Associated field.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.QuantitativeCharacteristics">
            <summary>
            Количественные характеристики, поле 215.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.QuantitativeCharacteristics.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.QuantitativeCharacteristics.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parse the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeVolume">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Volume"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeUnit">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Unit"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeIllustrations1">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Illustrations1"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeIllustrations2">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Illustrations2"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeIllustrations3">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Illustrations3"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeIllustrations4">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Illustrations4"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeAccompanyingMaterial1">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.AccompanyingMaterial1"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeAccompanyingMaterial2">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.AccompanyingMaterial2"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeSize">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Size"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializePackaging">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Packaging"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ShouldSerializeNumberOfCopies">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.QuantitativeCharacteristics.NumberOfCopies"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ToField">
            <summary>
            Превращение обратно в поле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.AM#Runtime#IHandmadeSerializable#RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.AM#Runtime#IHandmadeSerializable#SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.QuantitativeCharacteristics.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Volume">
            <summary>
            Объем (цифры), подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Unit">
            <summary>
            Единица измерения, подполе 1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Illustrations1">
            <summary>
            Иллюстрации, подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Illustrations2">
            <summary>
            Иллюстрации, подполе 0.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Illustrations3">
            <summary>
            Иллюстрации, подполе 7.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Illustrations4">
            <summary>
            Иллюстрации, подполе 8.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.AccompanyingMaterial1">
            <summary>
            Сопроводительный материал, подполе e.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.AccompanyingMaterial2">
            <summary>
            Сопроводительный материал, подполе 2.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Size">
            <summary>
            Размер текстовых материалов, нот, карт, подполе d.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.Packaging">
            <summary>
            Вид упаковки (в переплете и др.), подполе 3.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.QuantitativeCharacteristics.NumberOfCopies">
            <summary>
            Тираж (цифры), подполе x.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.RevisionInfo">
            <summary>
            Данные о редактировании записи (поле 907).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.RevisionInfo.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.RevisionInfo.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Parse the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.ShouldSerializeDate">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.RevisionInfo.Date"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.ShouldSerializeName">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.RevisionInfo.Name"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.ShouldSerializeStage">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.RevisionInfo.Stage"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.ToField">
            <summary>
            Превращение обратно в поле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.RevisionInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.RevisionInfo.Stage">
            <summary>
            Этап работы. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.RevisionInfo.Date">
            <summary>
            Дата. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.RevisionInfo.Name">
            <summary>
            ФИО оператора. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.RevisionInfo.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.TitleCharacterSet">
            <summary>
            Графика заглавия согласно grz.mnu.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Latin">
            <summary>
            Латинская.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Cyrillic">
            <summary>
            Кириллическая.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.JapaneseUndefined">
            <summary>
            Японская неопределенная.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.JapaneseKanji">
            <summary>
            Японская - канджи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.JapaneseKana">
            <summary>
            Японская - кана.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Chinese">
            <summary>
            Китайская.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Arab">
            <summary>
            Арабская.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Greek">
            <summary>
            Греческая.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Hebrew">
            <summary>
            Иврит.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Thai">
            <summary>
            Тайская.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Devanagari">
            <summary>
            Девангари.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Korean">
            <summary>
            Корейская.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Tamil">
            <summary>
            Тамильская.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Georgian">
            <summary>
            Грузинская.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Armenian">
            <summary>
            Армянская.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleCharacterSet.Other">
            <summary>
            Другая.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fields.TitleInfo">
            <summary>
            Сведения о заглавии, поле 200.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleInfo.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fields.TitleInfo.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parse the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ShouldSerializeFirstResponsibility">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.TitleInfo.FirstResponsibility"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ShouldSerializeGeneral">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.TitleInfo.General"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ShouldSerializeOtherResponsibility">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.TitleInfo.OtherResponsibility"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ShouldSerializeTitle">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.TitleInfo.Title"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ShouldSerializeSpecific">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.TitleInfo.Specific"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ShouldSerializeSubtitle">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.TitleInfo.Subtitle"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ShouldSerializeVolumeNumber">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Fields.TitleInfo.VolumeNumber"/> field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ToField">
            <summary>
            Превращение обратно в поле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.AM#Runtime#IHandmadeSerializable#RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.AM#Runtime#IHandmadeSerializable#SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Fields.TitleInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Fields.TitleInfo.VolumeNumber">
            <summary>
            Обозначение и номер тома. Подполе v.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.TitleInfo.Title">
            <summary>
            Заглавие.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.TitleInfo.Specific">
            <summary>
            Нехарактерное заглавие. Подполе u.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.TitleInfo.General">
            <summary>
            Общее обозначение материала. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.TitleInfo.Subtitle">
            <summary>
            Сведения, относящиеся к заглавию. Подполе e.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.TitleInfo.FirstResponsibility">
            <summary>
            Первые сведения об ответственности. Подполе f.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.TitleInfo.OtherResponsibility">
            <summary>
            Последующие сведения об ответственности. Подполе g.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fields.TitleInfo.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblAdd">
            <summary>
            Добавление нового повторения поля или подполя
            в заданное существующее поле.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.GblNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNode.OnAfterExecution(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Called after node execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNode.OnBeforeExecution(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Called before node execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNode.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.GblNode.Parent">
            <summary>
            Parent node (if any).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.GblNode.Parameter1">
            <summary>
            Первый параметр, как правило, спецификация поля/подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.GblNode.Parameter2">
            <summary>
            Второй параметр, как правило, спецификация повторения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.GblNode.Format1">
            <summary>
            Первый формат, например, выражение для замены.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.GblNode.Format2">
            <summary>
            Второй формат, например, заменяющее выражение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblAdd.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblAdd.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblAdd.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblAll">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblAll.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblAll.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblAll.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblCha">
            <summary>
            Замена данных в поле или в подполе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblCha.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblCha.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblCha.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblChac">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblChac.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblChac.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblChac.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblCorrec">
            <summary>
            Из текущей записи, вызывает на корректировку другие записи,
            отобранные по поисковым терминам из текущей или другой,
            доступной в системе, базы данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblCorrec.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblCorrec.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblCorrec.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblCorrec.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.Ast.GblCorrec.Children">
            <summary>
            Children nodes.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblDel">
            <summary>
            Удаляет поле или подполе в поле.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblDel.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblDel.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblDel.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblDelr">
            <summary>
            Удаляет записи, поданные на корректировку.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblDelr.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblDelr.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblDelr.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblEmpty">
            <summary>
            Очищает (опустошает) текущую запись.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblEmpty.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblEmpty.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblEmpty.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblIf">
            <summary>
            Условный оператор.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblIf.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblIf.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblIf.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblIf.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.Ast.GblIf.Children">
            <summary>
            Children nodes (THEN branch).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblNewMfn">
            <summary>
            Создает новую запись в текущей или другой базе данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblNewMfn.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblNewMfn.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblNewMfn.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblNewMfn.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.Ast.GblNewMfn.Children">
            <summary>
            Children nodes.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblNop">
            <summary>
            Комментарий.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblNop.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblNop.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblNop.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblPutLog">
            <summary>
            Формирование пользовательского протокола.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblPutLog.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblPutLog.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblPutLog.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblRep">
            <summary>
            Замена целиком поля или подполя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblRep.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblRep.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblRep.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblRepeat">
            <summary>
            Операторы REPEAT-UNTIL организуют цикл выполнения группы операторов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblRepeat.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblRepeat.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblRepeat.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblRepeat.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.Ast.GblRepeat.Children">
            <summary>
            Children nodes.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblUndel">
            <summary>
            Восстановление данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblUndel.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblUndel.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblUndel.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.Ast.GblUndor">
            <summary>
            Переход к одной из предыдущих копий записи (откат).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.Infrastructure.Ast.GblUndor.Mnemonic">
            <summary>
            Command mnemonic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblUndor.Execute(ManagedIrbis.Gbl.Infrastructure.GblContext)">
            <summary>
            Execute the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.Ast.GblUndor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.GblContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.Infrastructure.GblNodeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNodeCollection.#ctor(ManagedIrbis.Gbl.Infrastructure.GblNode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNodeCollection.ClearItems">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.ClearItems"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNodeCollection.InsertItem(System.Int32,ManagedIrbis.Gbl.Infrastructure.GblNode)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNodeCollection.SetItem(System.Int32,ManagedIrbis.Gbl.Infrastructure.GblNode)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNodeCollection.RemoveItem(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.Infrastructure.GblNodeCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Gbl.Infrastructure.GblNodeCollection.Parent">
            <summary>
            Parent node.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfActualIf">
            <summary>
            Актуализация словаря
            </summary>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.IbfNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.OnAfterExecution(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <summary>
            Called after node execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.OnBeforeExecution(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <summary>
            Called before node execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfActualIf.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfAutoAsk">
            <summary>
            Установка интервала опроса состояния БД (в сек.).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfAutoAsk.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfClearDb">
            <summary>
            Опустошение базы данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfClearDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfCloseDb">
            <summary>
            Закрытие базы данных.
            </summary>
            <remarks>
            В клиентском "Администраторе" команда не поддерживается.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfCloseDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfCopyDb">
            <summary>
            Копирование данных из одной базы в другую.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfCopyDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfCopyMf">
            <summary>
            Копирование файла документов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfCopyMf.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfDeleteDb">
            <summary>
            Удаление базы данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfDeleteDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfDiagnosIf">
            <summary>
            Диагностика файла словаря.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfDiagnosIf.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfDiagnosMf">
            <summary>
            Диагностика файла документов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfDiagnosMf.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfExit">
            <summary>
            Завершение обработки IBF- файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfExit.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfExportDb">
            <summary>
            Экспорт записей из базы данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfExportDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfGlobal">
            <summary>
            Глобальная корректировка.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfGlobal.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfImportDb">
            <summary>
            Импорт записей в базу данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfImportDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLoadIf0">
            <summary>
            Создать словарь заново - только отбор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLoadIf0.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLoadIf1">
            <summary>
            Создать словарь заново - только сортировка.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLoadIf1.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLoadIf2">
            <summary>
            Создать словарь заново - только загрузка.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLoadIf2.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLoadIfComplete">
            <summary>
            Создать словарь заново - полностью.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLoadIfComplete.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLockDb">
            <summary>
            Монопольная блокировка базы данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfLockDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfNewDb">
            <summary>
            Создание новой базы данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfNewDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfOpenDb">
            <summary>
            Открытие существующей базы данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfOpenDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfOperandSep">
            <summary>
            Символ-разделитель операндов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfOperandSep.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfPrint">
            <summary>
            Вывод документов на печать.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfPrint.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfReorgIf">
            <summary>
            Реорганизация словаря.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfReorgIf.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfReorgMf">
            <summary>
            Реорганизация файла документов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfReorgMf.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfRestoreMf">
            <summary>
            Восстановление файла документов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfRestoreMf.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfSearch">
            <summary>
            Поиск и отбор записей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfSearch.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfSilence">
            <summary>
            Режим игнорирования ошибок.
            </summary>
            <remarks>
            Пакетное задание продолжает выполняться
            при ошибочном завершении очередной команды.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfSilence.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfStat">
            <summary>
            Статистика по базе данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfStat.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfStatF">
            <summary>
            Статистическая форма.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfStatF.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfUnlockDb">
            <summary>
            Снятие блокировки базы данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfUnlockDb.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfUnlockRecord">
            <summary>
            Снятие блокировки с отдельной записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfUnlockRecord.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.Ast.IbfUnLockRecordAll">
            <summary>
            Снятие блокировки со всех заблокированных записей
            в базе данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.Ast.IbfUnLockRecordAll.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)">
            <inheritdoc cref="M:ManagedIrbis.Ibf.Infrastructure.IbfNode.Execute(ManagedIrbis.Ibf.Infrastructure.IbfContext)"/>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.IbfContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.IbfContext.#ctor(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Ibf.Infrastructure.IbfContext.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Ibf.Infrastructure.IbfExitException">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisException">
            <summary>
            Исключения, специфичные для библиотеки
            ManagedClient
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.#ctor(System.Int32)">
            <summary>
            Конструктор с кодом ошибки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.#ctor(System.String)">
            <summary>
            Конструктор с готовым сообщением
            об ошибке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор для десериализации.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.GetErrorDescription(ManagedIrbis.IrbisException)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.GetErrorDescription(ManagedIrbis.Infrastructure.IrbisReturnCode)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.GetErrorDescription(System.Int32)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.IrbisException.ErrorCode">
            <summary>
            Код возврата (код ошибки)
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.IbfExitException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.IbfExitException.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.IbfExitException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Ibf.Infrastructure.IbfExitException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.CompilerProxy">
            <summary>
            Хак для загрузки сборки в другом домене.
            </summary>
            <remarks>
            Borrowed from https://stackoverflow.com/questions/658498/how-to-load-an-assembly-to-appdomain-with-all-references-recursively
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.CompilerProxy.LoadAssembly(System.String)">
            <summary>
            Load the assembly.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.IndexInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.IndexInfo.#ctor(ManagedIrbis.Pft.Infrastructure.IndexSpecification,System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.IndexInfo.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.IndexInfo.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.IndexInfo.Specification">
            <summary>
            Specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.IndexInfo.Id">
            <summary>
            Identifier.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.IndexInfo.Reference">
            <summary>
            Reference.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.IndexDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.RemoteFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.RemoteFormatter.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.RemoteFormatter.GetFormatter(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Get formatter instance.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.RemoteFormatter.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.RemoteFormatter.Counter">
            <summary>
            Counter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.RemoteFormatter.Domain">
            <summary>
            Domain
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.RemoteFormatter.Assembly">
            <summary>
            Assembly.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.RemoteFormatter.FormatterType">
            <summary>
            Formatter type.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.ExternalPftCache">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.AST">
            <summary>
            Serialized AST file extension.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.DLL">
            <summary>
            DLL file extension.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.AddDll(System.String,System.Byte[])">
            <summary>
            Add DLL with compiled PFT.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.AddSerializedPft(System.String,System.Byte[])">
            <summary>
            Add serialized PFT.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.ComputeFileName(System.String)">
            <summary>
            Compute file name for given script.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.ComputePath(System.String)">
            <summary>
            Compute full file name for given script.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.GetDefaultRootDirectory">
            <summary>
            </summary>
            Get path of default cache root directory.
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.GetDll(System.String)">
            <summary>
            Get DLL for specified script.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.GetPath(System.String,System.String)">
            <summary>
            Get supposed path for specified script.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.GetSerializedPft(System.String)">
            <summary>
            Get serialized PFT for the script.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.SetRootDirectory(System.String)">
            <summary>
            Set root directory.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.ExternalPftCache.RootDirectory">
            <summary>
            Root directory.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Caching.IrbisCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Caching.MenuCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Caching.MenuCache.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.MenuCache.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.MenuCache.RequestCount">
            <summary>
            Request count.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Caching.RecordCache">
            <summary>
            Cache of <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Caching.RecordCache.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.RecordCache.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.RecordCache.RequestCount">
            <summary>
            Request count.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Caching.TextCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Caching.TextCache.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.TextCache.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Caching.TextCache.RequestCount">
            <summary>
            Request count.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.AbstractIniSection">
            <summary>
            Section of client INI-file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AbstractIniSection.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AbstractIniSection.#ctor(AM.IO.IniFile,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AbstractIniSection.#ctor(AM.IO.IniFile.Section)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AbstractIniSection.Clear">
            <summary>
            Clear the section.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AbstractIniSection.GetBoolean(System.String,System.String)">
            <summary>
            Get boolean value
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AbstractIniSection.SetBoolean(System.String,System.Boolean)">
            <summary>
            Set boolean value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AbstractIniSection.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Client.AbstractIniSection.Section">
            <summary>
            INI file section.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.CatalogDelta">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.CatalogDelta.Create(ManagedIrbis.Client.CatalogState,ManagedIrbis.Client.CatalogState)">
            <summary>
            Create delta for two catalog states.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.CatalogDelta.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Client.CatalogDelta.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Client.CatalogDelta.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogDelta.Id">
            <summary>
            Identifier for LiteDB.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogDelta.FirstDate">
            <summary>
            First date.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogDelta.SecondDate">
            <summary>
            Second date.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogDelta.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogDelta.NewRecords">
            <summary>
            New records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogDelta.DeletedRecords">
            <summary>
            Deleted records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogDelta.AlteredRecords">
            <summary>
            Altered records.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.CatalogState">
            <summary>
            State of the catalog.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.CatalogState.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Client.CatalogState.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogState.Id">
            <summary>
            Identifier for LiteDB.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogState.Date">
            <summary>
            Date.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogState.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogState.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogState.Records">
            <summary>
            Records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.CatalogState.LogicallyDeleted">
            <summary>
            Logically deleted records.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.ClientLM">
            <summary>
            Client LM.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.ClientLM.DefaultSalt">
            <summary>
            Default salt.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ClientLM.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ClientLM.#ctor(System.Text.Encoding,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="encoding"></param>
            <param name="salt"></param>
        </member>
        <member name="M:ManagedIrbis.Client.ClientLM.CheckHash(AM.IO.IniFile)">
            <summary>
            Check hash for the INI-file
            (both IRBIS32 and IRBIS64).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ClientLM.ComputeHash(System.String)">
            <summary>
            Compute hash for the text
            (both IRBIS32 and IRBIS64).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientLM.Encoding">
            <summary>
            Encoding.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientLM.Salt">
            <summary>
            Salt.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.ClientRunner">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ClientRunner.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ClientRunner.RunClient(System.Boolean)">
            <summary>
            Run the client and optionally wait for it.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientRunner.Database">
            <summary>
            Database name (required if <see cref="P:ManagedIrbis.Client.ClientRunner.UserName"/>
            and <see cref="P:ManagedIrbis.Client.ClientRunner.Password"/> are specified).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientRunner.Executable">
            <summary>
            Executable file name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientRunner.IniFileName">
            <summary>
            INI-file name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientRunner.Mfn">
            <summary>
            Current MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientRunner.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientRunner.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ClientRunner.WorkingDirectory">
            <summary>
            Working directory.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.ContextIniSection">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.ContextIniSection.SectionName">
            <summary>
            Section name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ContextIniSection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ContextIniSection.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ContextIniSection.#ctor(AM.IO.IniFile.Section)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ContextIniSection.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ContextIniSection.DisplayFormat">
            <summary>
            Display format description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ContextIniSection.Mfn">
            <summary>
            Current MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ContextIniSection.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ContextIniSection.Query">
            <summary>
            Query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ContextIniSection.SearchPrefix">
            <summary>
            Search prefix.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ContextIniSection.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ContextIniSection.Worksheet">
            <summary>
            Worksheet code.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.DesktopIniSection">
            <summary>
            
            </summary>
            <remarks>
            Находится в клиентском INI-файле cirbisc.ini.
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Client.DesktopIniSection.SectionName">
            <summary>
            Section name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.DesktopIniSection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.DesktopIniSection.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.DesktopIniSection.#ctor(AM.IO.IniFile.Section)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.AutoService">
            <summary>
            Use auto service?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.DBContext">
            <summary>
            Show database context panel?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.DBContextFloating">
            <summary>
            Database context panel is floating?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.DBOpen">
            <summary>
            DBOpen panel visible?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.DBOpenFloating">
            <summary>
            Whether DBOpen panel is floating?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.Entry">
            <summary>
            Show the entry panel?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.EntryFloating">
            <summary>
            Entry panel is floating?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.MainMenu">
            <summary>
            Show then main menu?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.MainMenuFloating">
            <summary>
            Main menu is floating panel?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.Search">
            <summary>
            Show the search panel?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.SearchFloating">
            <summary>
            Whether the search panel is floating?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.Spelling">
            <summary>
            Use spelling engine?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.UserMode">
            <summary>
            Show the user mode panel?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DesktopIniSection.UserModeFloating">
            <summary>
            Whether the user mode panel is floating?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.DisplayIniSection">
            <summary>
            
            </summary>
            <remarks>
            Находится в серверном INI-файле irbisc.ini.
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Client.DisplayIniSection.SectionName">
            <summary>
            Section name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.DisplayIniSection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.DisplayIniSection.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.DisplayIniSection.#ctor(AM.IO.IniFile.Section)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DisplayIniSection.MaxBriefPortion">
            <summary>
            Размер порции для показа кратких описаний.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.DisplayIniSection.MaxMarked">
            <summary>
            Максимальное количество отмеченных документов.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.EntryIniSection">
            <summary>
            
            </summary>
            <remarks>
            Находится в серверном INI-файле irbisc.ini.
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Client.EntryIniSection.SectionName">
            <summary>
            Section name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.EntryIniSection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.EntryIniSection.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.EntryIniSection.#ctor(AM.IO.IniFile.Section)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.EntryIniSection.DbnFlc">
            <summary>
            Имя формата для ФЛК документа в целом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.EntryIniSection.RecordUpdate">
            <summary>
            Признак автоматической актуализации записей
            при корректировке.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.IrbisProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.AcquireFormatter">
            <summary>
            Acquire formatter instance.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.Configure(System.String)">
            <summary>
            Configure the provider.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ExactSearchLinks(System.String)">
            <summary>
            Exact search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ExactSearchTrimLinks(System.String,System.Int32)">
            <summary>
            Exact search with trim.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.FileExist(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            File exist?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.FormatRecord(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Format given record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.FormatRecords(System.Int32[],System.String)">
            <summary>
            Format records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.GetAlphabetTable">
            <summary>
            Get alphabet table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.GetCatalogState(System.String)">
            <summary>
            Get catalog state for specified database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.GetGeneration">
            <summary>
            Get generation of the provider.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.GetMaxMfn">
            <summary>
            Get maximal MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.GetUserIniFile">
            <summary>
            Get user server INI-file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ListDatabases">
            <summary>
            List databases.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ReadFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ReadIniFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read INI-file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ReadMenuFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read MNU file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ReadRecord(System.Int32)">
            <summary>
            Read record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ReadRecordVersion(System.Int32,System.Int32)">
            <summary>
            Read record version.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ReadSearchScenarios">
            <summary>
            Read search scenarios for the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ReadTerms(ManagedIrbis.Search.TermParameters)">
            <summary>
            Read terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.Reconnect">
            <summary>
            Reconnect.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.ReleaseFormatter(ManagedIrbis.Pft.IPftFormatter)">
            <summary>
            Release the formatter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.Search(System.String)">
            <summary>
            Search records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.WriteRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Write the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.IrbisProvider.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Client.IrbisProvider.BusyState">
            <summary>
            Get busy state for the provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.IrbisProvider.Connected">
            <summary>
            Connected?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.IrbisProvider.Database">
            <summary>
            Current database.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.IrbisProvider.Services">
            <summary>
            Additional services.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.Alias.Name">
            <summary>
            Name of the alias.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.Alias.Value">
            <summary>
            Value of the alias.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.AliasManager">
            <summary>
            Aliases for databases/servers.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AliasManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AliasManager.Clear">
            <summary>
            Clear the table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AliasManager.FromFile(System.String)">
            <summary>
            Read file and create <see cref="T:ManagedIrbis.Client.AliasManager"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AliasManager.Get(System.String)">
            <summary>
            Get alias value if exists.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AliasManager.ListAliases">
            <summary>
            List aliases.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AliasManager.SaveToFile(System.String)">
            <summary>
            Save aliases to file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.AliasManager.Set(System.String,System.String)">
            <summary>
            Add new or modify existing alias.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.ConnectedClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.Connect">
            <summary>
            Connect.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.Disconnect">
            <summary>
            Disconnect.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.ParseConnectionString(System.String)">
            <summary>
            Parse connection string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.AcquireFormatter">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.AcquireFormatter"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.Configure(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.Configure(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.ExactSearchLinks(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ExactSearchLinks(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.FormatRecord(ManagedIrbis.MarcRecord,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.FormatRecord(ManagedIrbis.MarcRecord,System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.FormatRecords(System.Int32[],System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.FormatRecords(System.Int32[],System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.GetCatalogState(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.GetCatalogState(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.GetMaxMfn">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.GetMaxMfn"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.ReadRecord(System.Int32)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReadRecord(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.ReadMenuFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReadMenuFile(ManagedIrbis.Infrastructure.FileSpecification)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.ReadTerms(ManagedIrbis.Search.TermParameters)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReadTerms(ManagedIrbis.Search.TermParameters)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.Reconnect">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.Reconnect"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.ReleaseFormatter(ManagedIrbis.Pft.IPftFormatter)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReleaseFormatter(ManagedIrbis.Pft.IPftFormatter)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.Search(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.Search(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.WriteRecord(ManagedIrbis.MarcRecord)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.WriteRecord(ManagedIrbis.MarcRecord)"/>
        </member>
        <member name="M:ManagedIrbis.Client.ConnectedClient.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Client.ConnectedClient.BusyState">
            <inheritdoc cref="P:ManagedIrbis.Client.IrbisProvider.BusyState"/>
        </member>
        <member name="P:ManagedIrbis.Client.ConnectedClient.Connected">
            <inheritdoc cref="P:ManagedIrbis.Client.IrbisProvider.Connected"/>
        </member>
        <member name="P:ManagedIrbis.Client.ConnectedClient.Database">
            <inheritdoc cref="P:ManagedIrbis.Client.IrbisProvider.Database"/>
        </member>
        <member name="P:ManagedIrbis.Client.ConnectedClient.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.LocalCatalogerIniFile">
            <summary>
            INI-file for cataloger.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.LocalCatalogerIniFile.Main">
            <summary>
            Main section.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalCatalogerIniFile.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalCatalogerIniFile.GetValue(System.String,System.String,System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalCatalogerIniFile.Load(System.String)">
            <summary>
            Load from specified file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.Ini">
            <summary>
            INI-file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.MainSection">
            <summary>
            Main section.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.Organization">
            <summary>
            Организация, на которую куплен ИРБИС.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.ServerIP">
            <summary>
            IP адрес ИРБИС сервера.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalCatalogerIniFile.ServerPort">
            <summary>
            Port number of the IRBIS server.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.LocalProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.#ctor(System.String,ManagedIrbis.Direct.DirectAccessMode,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.AcquireFormatter">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.AcquireFormatter"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.Configure(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.Configure(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.FileExist(ManagedIrbis.Infrastructure.FileSpecification)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.FileExist(ManagedIrbis.Infrastructure.FileSpecification)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.FormatRecord(ManagedIrbis.MarcRecord,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.FormatRecord(ManagedIrbis.MarcRecord,System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.GetMaxMfn">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.GetMaxMfn"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.ListDatabases">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ListDatabases"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.ReadFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReadFile(ManagedIrbis.Infrastructure.FileSpecification)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.ReadRecord(System.Int32)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReadRecord(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.ReadRecordVersion(System.Int32,System.Int32)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReadRecordVersion(System.Int32,System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.ReadTerms(ManagedIrbis.Search.TermParameters)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReadTerms(ManagedIrbis.Search.TermParameters)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.ReleaseFormatter(ManagedIrbis.Pft.IPftFormatter)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.ReleaseFormatter(ManagedIrbis.Pft.IPftFormatter)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.Search(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.Search(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Client.LocalProvider.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Client.LocalProvider.BusyState">
            <inheritdoc cref="P:ManagedIrbis.Client.IrbisProvider.BusyState"/>
        </member>
        <member name="P:ManagedIrbis.Client.LocalProvider.Connected">
            <inheritdoc cref="P:ManagedIrbis.Client.IrbisProvider.Connected"/>
        </member>
        <member name="P:ManagedIrbis.Client.LocalProvider.DataPath">
            <summary>
            Data path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalProvider.RootPath">
            <summary>
            Root path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.LocalProvider.Mode">
            <summary>
            Access mode.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.MessageFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.MessageFile.DefaultName">
            <summary>
            Default name of the file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.MessageFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.MessageFile.GetMessage(System.Int32)">
            <summary>
            Get message by index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.MessageFile.ReadLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Read local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.MessageFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Client.MessageFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Client.MessageFile.LineCount">
            <summary>
            Count of lines.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.MessageFile.Name">
            <summary>
            Name of the file.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.NullProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.ProviderManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.ProviderManager.Connected">
            <summary>
            Connected client (<see cref="T:ManagedIrbis.IrbisConnection"/>).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.ProviderManager.Default">
            <summary>
            Default provider (<see cref="T:ManagedIrbis.IrbisConnection"/>).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.ProviderManager.Local">
            <summary>
            Local provider.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.ProviderManager.Null">
            <summary>
            Null provider.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.ProviderManager.SemiConnected">
            <summary>
            Connected client with some local functionality:
            <see cref="T:ManagedIrbis.Client.SemiConnectedClient"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ProviderManager.GetAndConfigureProvider(System.String)">
            <summary>
            Get <see cref="T:ManagedIrbis.Client.IrbisProvider"/> and configure it.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ProviderManager.GetProvider(System.String,System.Boolean)">
            <summary>
            Get <see cref="T:ManagedIrbis.Client.IrbisProvider"/> by name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.ProviderManager.GetPreconfiguredProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.ProviderManager.Registry">
            <summary>
            Registry.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.RecordStateComparer">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.RecordStateComparer.ById">
            <summary>
            Compares <see cref="T:ManagedIrbis.Client.RecordState"/>
            by <see cref="P:ManagedIrbis.Client.RecordState.Id"/>
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RecordStateComparer.ById.Equals(ManagedIrbis.Client.RecordState,ManagedIrbis.Client.RecordState)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Client.RecordStateComparer.ById.GetHashCode(ManagedIrbis.Client.RecordState)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)"/>
        </member>
        <member name="T:ManagedIrbis.Client.RecordStateComparer.ByMfn">
            <summary>
            Compares <see cref="T:ManagedIrbis.Client.RecordState"/>
            by <see cref="P:ManagedIrbis.Client.RecordState.Mfn"/>
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RecordStateComparer.ByMfn.Equals(ManagedIrbis.Client.RecordState,ManagedIrbis.Client.RecordState)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Client.RecordStateComparer.ByMfn.GetHashCode(ManagedIrbis.Client.RecordState)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)"/>
        </member>
        <member name="T:ManagedIrbis.Client.RecordStateComparer.ByVersion">
            <summary>
            Compares <see cref="T:ManagedIrbis.Client.RecordState"/>
            by <see cref="P:ManagedIrbis.Client.RecordState.Mfn"/> and
            <see cref="P:ManagedIrbis.Client.RecordState.Version"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RecordStateComparer.ByVersion.Equals(ManagedIrbis.Client.RecordState,ManagedIrbis.Client.RecordState)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Client.RecordStateComparer.ByVersion.GetHashCode(ManagedIrbis.Client.RecordState)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)"/>
        </member>
        <member name="T:ManagedIrbis.Client.RemoteCatalogerIniFile">
            <summary>
            INI-file for cataloger.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.RemoteCatalogerIniFile.Display">
            <summary>
            Display section name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.RemoteCatalogerIniFile.Entry">
            <summary>
            Entry section name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.RemoteCatalogerIniFile.Main">
            <summary>
            Main section name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Client.RemoteCatalogerIniFile.Private">
            <summary>
            Private section name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.GetValue(System.String,System.String,System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.GetValue``1(System.String,System.String,``0)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.SetValue(System.String,System.String,System.String)">
            <summary>
            Set value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RemoteCatalogerIniFile.SetValue``1(System.String,System.String,``0)">
            <summary>
            Set value.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.AutoinFile">
            <summary>
            Имя файла пакетного задания для АВТОВВОДА.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.AutoMerge">
            <summary>
            Разрешает (значение 1) или запрещает (значение 0) 
            автоматическое слияние двух версий записи при корректировке 
            (при получении сообщения о несовпадении версий – в ситуации, 
            когда одну запись пытаются одновременно откорректировать 
            два и более пользователей) Автоматическое слияние проводится 
            по формальному алгоритму: неповторяющиеся поля заменяются, 
            а оригинальные значения повторяющихся полей суммируются
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.BriefPft">
            <summary>
            Имя краткого (строкa) формата показа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.ClientTimeLive">
            <summary>
            Интервал в мин., по истечении которого клиент посылает 
            на сервер уведомление о том, что он «жив».
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.CopyMnu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для копирования.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.CountTag">
            <summary>
            Метка поля «количество выдач» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.DatabaseList">
            <summary>
            Имя файла списка БД для АРМа Каталогизатора/Комплектатора.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.DbnFlc">
            <summary>
            Имя формата для ФЛК документа в целом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.DefaultDb">
            <summary>
            Имя базы данных по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.EmptyDbn">
            <summary>
            Имя шаблона для создания новой БД.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.ExemplarTag">
            <summary>
            Метка поля «экземпляры» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.ExportMenu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для экспорта.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.FormatMenu">
            <summary>
            Имя файла-справочника со списком доступных РЛ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.HelpDbn">
            <summary>
            Имя БД, содержащей тематический рубрикатор ГРНТИ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.ImportMenu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для импорта.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.IndexPrefix">
            <summary>
            Префикс инверсии для шифра документа в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.IndexTag">
            <summary>
            Метка поля «шифр документа» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.Ini">
            <summary>
            INI-file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.IriMenu">
            <summary>
            Имя файла-справочника со списком постоянных запросов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.MaxBriefPortion">
            <summary>
            Размер порции для показа кратких описаний.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.MaxMarked">
            <summary>
            Максимальное количество отмеченных документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.PftMenu">
            <summary>
            Имя файла-справочника со списком доступных форматов 
            показа документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.PftOpt">
            <summary>
            Имя оптимизационного файла, который определяет принцип 
            формата ОПТИМИЗИРОВАННЫЙ (в АРМах Читатель и Каталогизатор).
            Для БД электронного каталога (IBIS) значение PFTW.OPT 
            определяет в качестве оптимизированных  RTF-форматы, 
            а значение PFTW_H.OPT – HTML-форматы
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.SearchIni">
            <summary>
            Имя дополнительного INI-файла со сценариями поиска для БД.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.StandardDbn">
            <summary>
            Имя эталонной БД Электронного каталога.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.WorkDirectory">
            <summary>
            Директория для сохранения временных (выходных) данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RemoteCatalogerIniFile.WsOpt">
            <summary>
            Имя файла оптимизации РЛ ввода.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.SemiConnectedClient">
            <summary>
            Connected IRBIS client with some local functionality
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.SemiConnectedClient.FormatRecord(ManagedIrbis.MarcRecord,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Client.IrbisProvider.FormatRecord(ManagedIrbis.MarcRecord,System.String)"/>
        </member>
        <member name="T:ManagedIrbis.ConnectionElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionElement.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionElement.Host">
            <summary>
            Host name or address.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionElement.Port">
            <summary>
            Port number.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionElement.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionElement.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionElement.Workstation">
            <summary>
            Workstation.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionElement.All">
            <summary>
            All of above.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ConnectionSettings">
            <summary>
            Connection settings.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionSettings.DefaultHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionSettings.DefaultDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionSettings.DefaultWorkstation">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ConnectionSettings.DefaultPort">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.ApplyToConnection(ManagedIrbis.IrbisConnection)">
            <summary>
            Apply settings to the <see cref="T:ManagedIrbis.IrbisConnection"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Clone">
            <summary>
            Clone.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Decrypt(System.String)">
            <summary>
            Decrypt the connection settings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Encode">
            <summary>
            Encode parameters to text representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Encrypt">
            <summary>
            Encrypt the connection settings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.FromConnection(ManagedIrbis.IrbisConnection)">
            <summary>
            Construct <see cref="T:ManagedIrbis.ConnectionSettings"/>
            from <see cref="T:ManagedIrbis.IrbisConnection"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.GetMissingElements">
            <summary>
            Get missing elements from the settings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.ParseConnectionString(System.String)">
            <summary>
            Парсинг строки подключения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.ConnectionSettings.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Host">
            <summary>
            IP-address of the server.
            </summary>
            <remarks>Default value is "127.0.0.1".</remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Port">
            <summary>
            IP-port of the server.
            </summary>
            <remarks>Default value is 6666.</remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Username">
            <summary>
            User logon name.
            </summary>
            <remarks>Default value is <c>null</c>,
            so connection can't be made.</remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Password">
            <summary>
            User logon password.
            </summary>
            <remarks>Default value is <c>null</c>,
            so connection can't be made.</remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Database">
            <summary>
            Database name to connect.
            </summary>
            <remarks>Default value is "IBIS".
            Database with such a name can be
            non-existent.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Workstation">
            <summary>
            Workstation application kind.
            </summary>
            <remarks>Default value is
            <see cref="F:ManagedIrbis.IrbisWorkstation.Cataloger"/>.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.NetworkLogging">
            <summary>
            Turn on network logging.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.SocketTypeName">
            <summary>
            Type name for ClientSocket.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.FactoryTypeName">
            <summary>
            Type name for CommandFactory.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.EngineTypeName">
            <summary>
            Type name for execution engine.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.RetryLimit">
            <summary>
            Retry limit.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.WebCgi">
            <summary>
            Web CGI URL.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Broken">
            <summary>
            Use <see cref="T:ManagedIrbis.Infrastructure.Sockets.BrokenSocket"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Slow">
            <summary>
            Use <see cref="T:ManagedIrbis.Infrastructure.Sockets.SlowSocket"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Smart">
            <summary>
            Use <see cref="T:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ConnectionSettings.Connected">
            <summary>
            Saved "connected" state.
            </summary>
        </member>
        <member name="T:ManagedIrbis.CopyRecordManager">
            <summary>
            Copies and/or moves records from one database
            to another.
            </summary>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.CopyRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Copy the record to (other) database.
            </summary>
            <returns>Record clone.</returns>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.CopyRecord(System.Int32)">
            <summary>
            Copy the record to (other) database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.MoveRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Move the record to (other) database.
            </summary>
            <returns>Record clone.</returns>
        </member>
        <member name="M:ManagedIrbis.CopyRecordManager.MoveRecord(System.Int32)">
            <summary>
            Move the record to (other) database.
            </summary>
        </member>
        <member name="P:ManagedIrbis.CopyRecordManager.Connection">
            <summary>
            Connection
            </summary>
        </member>
        <member name="P:ManagedIrbis.CopyRecordManager.TargetDatabase">
            <summary>
            Target database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.CopyRecordManager.Actualize">
            <summary>
            Actualize records?
            </summary>
        </member>
        <member name="P:ManagedIrbis.CopyRecordManager.LockFlag">
            <summary>
            Lock records?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.DirectAccessMode">
            <summary>
            Modes for direct access.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.DirectAccessMode.Exclusive">
            <summary>
            Exclusive access mode.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.DirectAccessMode.Shared">
            <summary>
            Shared access mode.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.DirectAccessMode.ReadOnly">
            <summary>
            Read-only access mode.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.DirectReader32">
            <summary>
            Direct reading IRBIS32 databases.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.GetMaxMfn">
            <summary>
            Get maximal MFN for the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.ReadRecord(System.Int32)">
            <summary>
            Read given record.
            </summary>
            <returns><c>null</c> if no such record
            or record physically deleted.</returns>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.ReadAllRecordVersions(System.Int32)">
            <summary>
            Read all versions of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.SearchSimple(System.String)">
            <summary>
            Simple search by the key.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.SearchReadSimple(System.String)">
            <summary>
            Simple search and read records by the key.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectReader32.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader32.Mst">
            <summary>
            Master file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader32.Xrf">
            <summary>
            Cross-reference file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader32.InvertedFile">
            <summary>
            Inverted (index) file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectReader32.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.DirectAccess64">
            <summary>
            Direct reading IRBIS64 databases.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.#ctor(System.String,ManagedIrbis.Direct.DirectAccessMode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.GetMaxMfn">
            <summary>
            Get max MFN for database. Not next MFN!
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.ReadRawRecord(System.Int32)">
            <summary>
            Read raw record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.ReadRecord(System.Int32)">
            <summary>
            Read record with given MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.ReadAllRecordVersions(System.Int32)">
            <summary>
            Read all versions of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.ReadTerms(ManagedIrbis.Search.TermParameters)">
            <summary>
            Read terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.SearchSimple(System.String)">
            <summary>
            Simple search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.SearchReadSimple(System.String)">
            <summary>
            Simple search and read records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.WriteRawRecord(ManagedIrbis.Direct.MstRecord64)">
            <summary>
            Write the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.WriteRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Write the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectAccess64.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectAccess64.Mst">
            <summary>
            Master file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectAccess64.Xrf">
            <summary>
            Cross-references file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectAccess64.InvertedFile">
            <summary>
            Inverted (index) file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.DirectAccess64.Database">
            <summary>
            Database path.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.DirectUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectUtility.CreateDatabase32(System.String)">
            <summary>
            Create 8 database files for IRBIS32.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectUtility.CreateDatabase64(System.String)">
            <summary>
            Create 5 database files for IRBIS64.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.DirectUtility.OpenFile(System.String,ManagedIrbis.Direct.DirectAccessMode)">
            <summary>
            Open specified file.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.IfpControlRecord64">
            <summary>
            Управляющая запись IFP-файла в ИРБИС64.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.IfpControlRecord64.RecordSize">
            <summary>
            Размер управляющей записи (байты).
            </summary>        
        </member>
        <member name="M:ManagedIrbis.Direct.IfpControlRecord64.Read(System.IO.Stream)">
            <summary>
            Read the control record from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IfpControlRecord64.Write(System.IO.Stream)">
            <summary>
            Write the control record to specified stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpControlRecord64.NextOffset">
            <summary>
            Ссылка на свободное место в IFP-файле.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpControlRecord64.NodeBlockCount">
            <summary>
            Количество блоков в N01 файле.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpControlRecord64.LeafBlockCount">
            <summary>
            Количество блоков в L01 файле.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpControlRecord64.Reserved">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.InvertedFile32">
            <summary>
            Read inverted (index) file of IRBIS32 database.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.InvertedFile32.NodeLength">
            <summary>
            Node length for N01/L01 files.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadNode(System.Int32)">
            <summary>
            Read given non-leaf node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadLeaf(System.Int32)">
            <summary>
            Read given leaf node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadNext(ManagedIrbis.Direct.NodeRecord)">
            <summary>
            Read next node.
            </summary>
            <returns><c>null</c> if there is no next node.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadPrevious(ManagedIrbis.Direct.NodeRecord)">
            <summary>
            Read previous node.
            </summary>
            <returns><c>null</c> if there is no previous node.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.ReadIfpRecord(System.Int64)">
            <summary>
            Read <see cref="T:ManagedIrbis.Direct.IfpRecord"/> from given offset.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.SearchExact(System.String)">
            <summary>
            Search without truncation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.SearchTruncated(System.String)">
            <summary>
            Search with truncation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.SearchSimple(System.String)">
            <summary>
            Perform simple search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile32.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.FileName">
            <summary>
            Name of the IFP file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.Ifp">
            <summary>
            Inverted file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.L01">
            <summary>
            L01 node file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.L02">
            <summary>
            L02 node file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.N01">
            <summary>
            N01 node file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile32.N02">
            <summary>
            N02 node file.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.InvertedFile64">
            <summary>
            Read inverted (index) file of IRBIS32 database.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.InvertedFile64.NodeLength">
            <summary>
            Длина записи N01/L01.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.InvertedFile64.MaxTermSize">
            <summary>
            ibatrak максимальный размер термина
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.InvertedFile64.BlockSize">
            <summary>
            ibatrak размер блока
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.#ctor(System.String,ManagedIrbis.Direct.DirectAccessMode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadNode(System.Int32)">
            <summary>
            Read non-leaf node by number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadLeaf(System.Int32)">
            <summary>
            Read leaf node by number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadNext(ManagedIrbis.Direct.NodeRecord)">
            <summary>
            Read next node.
            </summary>
            <returns><c>null</c> if there is no next node.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadPrevious(ManagedIrbis.Direct.NodeRecord)">
            <summary>
            Read previous node.
            </summary>
            <returns><c>null</c> if there is no previous node.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadIfpRecord(System.Int64)">
            <summary>
            Read <see cref="T:ManagedIrbis.Direct.IfpRecord"/> from given offset.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReadTerms(ManagedIrbis.Search.TermParameters)">
            <summary>
            Read terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.ReopenFiles(ManagedIrbis.Direct.DirectAccessMode)">
            <summary>
            Reopen files.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.SearchExact(System.String)">
            <summary>
            Search without truncation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.SearchStart(System.String)">
            <summary>
            Search with truncation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.SearchSimple(System.String)">
            <summary>
            Perform simple search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.InvertedFile64.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.Mode">
            <summary>
            Access mode.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.Ifp">
            <summary>
            IFP file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.IfpControlRecord">
            <summary>
            Control record of the IFP file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.L01">
            <summary>
            L01 node file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.InvertedFile64.N01">
            <summary>
            N01 node file.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.IrbisSystemEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.IrbisSystemEvent.StartedName">
            <summary>
            Name of the event.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.IrbisSystemEvent.StopName">
            <summary>
            Name of the event.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IrbisSystemEvent.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IrbisSystemEvent.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IrbisSystemEvent.CheckOtherServerRunning">
            <summary>
            Check if other IRBIS64 server is running.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IrbisSystemEvent.CheckStopRequested">
            <summary>
            Whether the IRBIS64 needs to stop.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IrbisSystemEvent.RequestStop">
            <summary>
            Request stop.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IrbisSystemEvent.SayIamRunning">
            <summary>
            Say "I am running" to other servers (if any).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IrbisSystemEvent.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.IrbisSystemEvent.StartedEvent">
            <summary>
            IRBIS64 server started.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IrbisSystemEvent.StopEvent">
            <summary>
            Stop the IRBIS64 server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IrbisSystemEvent.Created">
            <summary>
            New event created.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.LocalDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.LocalDatabase.FromParFile(ManagedIrbis.ParFile)">
            <summary>
            Parse PAR-file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.LocalDatabase.FromPath(System.String)">
            <summary>
            Construct <see cref="T:ManagedIrbis.Direct.LocalDatabase"/> from given path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.LocalDatabase.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Direct.LocalDatabase.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.LocalDatabase.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.LocalDatabase.ReadOnly">
            <summary>
            Read only?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.LocalDatabase.MasterFilePath">
            <summary>
            MST file path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.LocalDatabase.CrossReferencePath">
            <summary>
            XRF file path.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstControlRecord32">
            <summary>
            Первая запись в файле документов – управляющая 
            запись, которая формируется (в момент определения 
            базы данных или при ее инициализации) и поддерживается 
            автоматически.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstControlRecord32.RecordSize">
            <summary>
            Размер управляющей записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.Zero">
            <summary>
            Всегда 0.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.NextMfn">
            <summary>
            Номер записи файла документов, назначаемый 
            для следующей записи, создаваемой в базе данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.NextBlock">
            <summary>
            Номер последнего блока файла документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.NextOffset">
            <summary>
            Смещение следующей доступной позиции в последнем блоке.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord32.Type">
            <summary>
            Всегда 0 для файлов баз данных пользователя.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstControlRecord64">
            <summary>
            Первая запись в файле документов – управляющая 
            запись, которая формируется (в момент определения 
            базы данных или при ее инициализации) и поддерживается 
            автоматически.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstControlRecord64.RecordSize">
            <summary>
            Размер управляющей записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstControlRecord64.LockFlagPosition">
            <summary>
            Позиция индикатора блокировки базы данных
            в управляющей записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstControlRecord64.Read(System.IO.Stream)">
            <summary>
            Read the control record from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstControlRecord64.Write(System.IO.Stream)">
            <summary>
            Write the control record to specified stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Reserv1">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.NextMfn">
            <summary>
            Номер записи файла документов, назначаемый 
            для следующей записи, создаваемой в базе данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.NextPosition">
            <summary>
            Смещение свободного места в файле; (всегда указывает
            на конец файла MST).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Reserv2">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Reserv3">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Reserv4">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstControlRecord64.Blocked">
            <summary>
            Индикатор блокировки базы данных.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstDictionaryEntry32">
            <summary>
            Элемент справочника MST-файла,
            описывающий поле переменной длины.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstDictionaryEntry32.EntrySize">
            <summary>
            Длина элемента справочника MST-файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstDictionaryEntry32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Tag">
            <summary>
            Field tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Position">
            <summary>
            Data offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Length">
            <summary>
            Data length.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Bytes">
            <summary>
            Raw data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry32.Text">
            <summary>
            Decoded data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstDictionaryEntry64">
            <summary>
            Элемент справочника MST-файла,
            описывающий поле переменной длины.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstDictionaryEntry64.EntrySize">
            <summary>
            Длина элемента справочника MST-файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstDictionaryEntry64.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Tag">
            <summary>
            Field tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Position">
            <summary>
            Data offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Length">
            <summary>
            Data length.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Bytes">
            <summary>
            Raw data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstDictionaryEntry64.Text">
            <summary>
            Decoded data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstFile32">
            <summary>
            Reading MST file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstFile32.PreloadLength">
            <summary>
            How many data to preload?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.ReadRecord(System.Int64)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.ReadRecord2(System.Int64)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.LockDatabase(System.Boolean)">
            <summary>
            Блокировка базы данных в целом.
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.ReadDatabaseLockedFlag">
            <summary>
            Чтение флага блокировки базы данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile32.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile32.ControlRecord">
            <summary>
            Control record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile32.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstFile64">
            <summary>
            Direct reads MST file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstFile64.PreloadLength">
            <summary>
            How many data to preload?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.#ctor(System.String,ManagedIrbis.Direct.DirectAccessMode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.ReadRecord(System.Int64)">
            <summary>
            Read the record (with preload optimization).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.LockDatabase(System.Boolean)">
            <summary>
            Блокировка базы данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.ReadDatabaseLockedFlag">
            <summary>
            Чтение флага блокировки базы данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.ReadLeader(System.Int64)">
            <summary>
            Read record leader only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.UpdateControlRecord(System.Boolean)">
            <summary>
            Update control record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.UpdateLeader(ManagedIrbis.Direct.MstRecordLeader64,System.Int64)">
            <summary>
            Update therecord leader.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.WriteRecord(ManagedIrbis.Direct.MstRecord64)">
            <summary>
            Write the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstFile64.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile64.ControlRecord">
            <summary>
            Control record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile64.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstFile64.Mode">
            <summary>
            Access mode.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstRecord32">
            <summary>
            MST file record.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstRecord32.MstBlockSize">
            <summary>
            Block size of MST file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord32.DecodeField(ManagedIrbis.Direct.MstDictionaryEntry32)">
            <summary>
            Decode the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord32.DecodeRecord">
            <summary>
            Decode record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord32.Leader">
            <summary>
            Leader.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord32.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord32.Deleted">
            <summary>
            Whether the record deleted.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstRecord64">
            <summary>
            MST file record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.DecodeField(ManagedIrbis.Direct.MstDictionaryEntry64)">
            <summary>
            Decode the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.DecodeRecord">
            <summary>
            Decode the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.EncodeField(ManagedIrbis.RecordField)">
            <summary>
            Encode the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.EncodeRecord(ManagedIrbis.MarcRecord)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.Prepare">
            <summary>
            Prepare the record for serialization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.Write(System.IO.Stream)">
            <summary>
            Write the record to specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecord64.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord64.Offset">
            <summary>
            MST file offset of the record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord64.Leader">
            <summary>
            Leader.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord64.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecord64.Deleted">
            <summary>
            Whether the record deleted.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstRecordLeader32">
            <summary>
            Leader of MST record.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstRecordLeader32.LeaderSize">
            <summary>
            Фиксированный размер лидера записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader32.Read(System.IO.Stream)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Mfn">
            <summary>
            Номер записи в  файле документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Length">
            <summary>
            Длина записи (всегда четное число).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.PreviousBlock">
            <summary>
            Number of block containing previous version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.PreviousOffset">
            <summary>
            Offset of previous version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Base">
            <summary>
            Смещение (базовый адрес) полей
            переменной длины (это общая часть
            лидера и справочника записи в байтах).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Nvf">
            <summary>
            Число полей в записи (т.е. число входов
            в справочнике).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader32.Status">
            <summary>
            Индикатор записи (логически удаленная и т.п.).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.MstRecordLeader64">
            <summary>
            Leader of MST record.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.MstRecordLeader64.LeaderSize">
            <summary>
            Фиксированный размер лидера записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader64.Read(System.IO.Stream)">
            <summary>
            Read the record leader.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader64.Write(System.IO.Stream)">
            <summary>
            Write the record leader.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.MstRecordLeader64.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Mfn">
            <summary>
            Номер записи в  файле документов.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Length">
            <summary>
            Длина записи (всегда четное число).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Previous">
            <summary>
            Ссылка на предыдущую версию записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Base">
            <summary>
            Смещение (базовый адрес) полей
            переменной длины (это общая часть
            лидера и справочника записи в байтах).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Nvf">
            <summary>
            Число полей в записи (т.е. число входов
            в справочнике).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Status">
            <summary>
            Индикатор записи (логически удаленная и т.п.).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.MstRecordLeader64.Version">
            <summary>
            Номер версии записи.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.XrfFile32">
            <summary>
            Файл перекрестных ссылок XRF представляет собой
            таблицу ссылок на записи файла документов.
            Первая ссылка соответствует записи файла документов
            с номером 1, вторая – 2  и тд.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.XrfFile32.XrfBlockSize">
            <summary>
            Block size of XRF file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.XrfFile32.XrfBlockCapacity">
            <summary>
            Block capacity of XRF file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.Decode(System.Int32)">
            <summary>
            Decode value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.ReadRecord(System.Int32)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.WriteRecord(ManagedIrbis.Direct.XrfRecord32)">
            <summary>
            Write the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.LockRecord(System.Int32,System.Boolean)">
            <summary>
            Lock the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile32.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfFile32.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.XrfFile64">
            <summary>
            Файл перекрестных ссылок XRF представляет собой
            таблицу ссылок на записи файла документов.
            Первая ссылка соответствует записи файла документов
            с номером 1, вторая – 2  и тд.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.#ctor(System.String,ManagedIrbis.Direct.DirectAccessMode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.ReadRecord(System.Int32)">
            <summary>
            Read the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.WriteRecord(ManagedIrbis.Direct.XrfRecord64)">
            <summary>
            Write the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.LockRecord(System.Int32,System.Boolean)">
            <summary>
            Lock the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfFile64.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfFile64.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfFile64.Mode">
            <summary>
            Access mode.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.XrfRecord32">
            <summary>
            Contains information about record offset and status.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.XrfRecord32.RecordSize">
            <summary>
            Fixed record size.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfRecord32.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.AbsoluteOffset">
            <summary>
            Absolute offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.BlockNumber">
            <summary>
            Block number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.BlockOffset">
            <summary>
            Block offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.Status">
            <summary>
            Record status.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.Locked">
            <summary>
            Whether the record is locked?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord32.Deleted">
            <summary>
            Whether the record is deleted?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.XrfRecord64">
            <summary>
            Contains information about record offset and status.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.XrfRecord64.RecordSize">
            <summary>
            Fixed record size.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.XrfRecord64.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Mfn">
            <summary>
            MFN
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Offset">
            <summary>
            8-byte offset of the record in the MST file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Status">
            <summary>
            Status of the record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Locked">
            <summary>
            Whether the record is locked?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.XrfRecord64.Deleted">
            <summary>
            Whether the record is deleted?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Extensibility.ExtensionManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Extensibility.ExtensionManager.USERMODE">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Extensibility.ExtensionManager.UMNUMB">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.ExtensionManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.ExtensionManager.FromIniFile(AM.IO.IniFile)">
            <summary>
            Build extension list from the INI-file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.ExtensionManager.UpdateIniFile(AM.IO.IniFile)">
            <summary>
            Update the INI-file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Extensibility.ExtensionManager.Extensions">
            <summary>
            Extension list.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Extensibility.ExtensionInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.ExtensionInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.ExtensionInfo.FromIniFile(AM.IO.IniFile.Section,System.Int32)">
            <summary>
            Create <see cref="T:ManagedIrbis.Extensibility.ExtensionInfo"/>
            from <see cref="T:AM.IO.IniFile"/> entries.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.ExtensionInfo.UpdateIniFile(AM.IO.IniFile.Section)">
            <summary>
            Update <see cref="T:AM.IO.IniFile"/> entries.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Extensibility.ExtensionInfo.Index">
            <summary>
            Index (starting from 0).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Extensibility.ExtensionInfo.DllName">
            <summary>
            DLL file name (with extension).
            </summary>
            <remarks>UMDLLn</remarks>
        </member>
        <member name="P:ManagedIrbis.Extensibility.ExtensionInfo.FunctionName">
            <summary>
            Exported function name.
            </summary>
            <remarks>UMFUNCTIONn</remarks>
        </member>
        <member name="P:ManagedIrbis.Extensibility.ExtensionInfo.PftName">
            <summary>
            PFT script name.
            </summary>
            <remarks>UMPFTn</remarks>
        </member>
        <member name="P:ManagedIrbis.Extensibility.ExtensionInfo.GroupNumber">
            <summary>
            Group number.
            </summary>
            <remarks>UMGROUPn</remarks>
        </member>
        <member name="P:ManagedIrbis.Extensibility.ExtensionInfo.Name">
            <summary>
            Name for menu item and tooltip.
            </summary>
            <remarks>UMNAMEn</remarks>
        </member>
        <member name="P:ManagedIrbis.Extensibility.ExtensionInfo.IconName">
            <summary>
            Icon name.
            </summary>
            <remarks>UMICONn</remarks>
        </member>
        <member name="T:ManagedIrbis.Extensibility.IrbisExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.IrbisExtension.DecodeRecord(System.String)">
            <summary>
            Decode the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.IrbisExtension.EncodeRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Encode the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.IrbisExtension.GetUtfString(System.IntPtr)">
            <summary>
            Получение строки, ограниченной нулём,
            из буфера ИРБИС.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.IrbisExtension.SetUtfString(System.IntPtr,System.Int32,System.String)">
            <summary>
            Передача результата в ИРБИС.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.IrbisExtension.EntryPoint(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Entry point.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Extensibility.IrbisExtension.HandleInput(System.String)">
            <summary>
            Handle the input.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.FstProcessor">
            <summary>
            FST processor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstProcessor.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstProcessor.ReadFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read FST file from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstProcessor.TransformRecord(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Transform record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstProcessor.TransformRecord(ManagedIrbis.MarcRecord,ManagedIrbis.Fst.FstFile)">
            <summary>
            Transform the record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstProcessor.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.LocalFstProcessor">
            <summary>
            Local FST processor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.LocalFstProcessor.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.LocalFstProcessor.ReadFile(System.String)">
            <summary>
            Read FST file from local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.LocalFstProcessor.TransformRecord(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Transform record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.LocalFstProcessor.TransformRecord(ManagedIrbis.MarcRecord,ManagedIrbis.Fst.FstFile)">
            <summary>
            Transform the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.LocalFstProcessor.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Fst.LocalFstProcessor.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Identifiers.CodeDigit">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.CodeDigit.Digit">
            <summary>
            Digit.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.CodeDigit.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.CodeDigit.#ctor(System.Char,System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.CodeDigit.FindDigit(System.Char,ManagedIrbis.Identifiers.CodeDigit[])">
            <summary>
            Find the digit.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.CodeDigit.ExtractDigits(System.String,ManagedIrbis.Identifiers.CodeDigit[])">
            <summary>
            Extract all the digits from the identifier.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.CodeDigit.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Identifiers.Ean13">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.Ean13.Coefficients">
            <summary>
            Coefficients for control digit calculation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Ean13.ComputeCheckDigit(System.Char[])">
            <summary>
            Compute check digit.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Ean13.CheckControlDigit(System.Char[])">
            <summary>
            Check control digit.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Identifiers.Ean8">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.Ean8.Coefficients">
            <summary>
            Coefficients for control digit calculation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Ean8.ComputeCheckDigit(System.Char[])">
            <summary>
            Compute check digit.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Ean8.CheckControlDigit(System.Char[])">
            <summary>
            Check control digit.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Identifiers.Upc12">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.Upc12.Coefficients">
            <summary>
            Coefficients for control digit calculation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Upc12.ComputeCheckDigit(System.Char[])">
            <summary>
            Compute check digit.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Upc12.CheckControlDigit(System.Char[])">
            <summary>
            Check control digit.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IsoMarker">
            <summary>
            Маркер записи.
            </summary>
            <remarks>
            <para>Маркер располагается в начале каждой записи. Является обязательным.
            Не повторяется.</para>
            <para><b>Определение.</b> Маркер записи - это область записи, содержащая 
            общую информацию, используемую при обработке записей, подготавливаемых 
            в соответствии с положениями ISO 2709.</para>
            </remarks>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.MarkerLength">
            <summary>
            Длина маркера.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len0">
            <summary>
            Длина записи.
            </summary>
            <remarks><b>Определение</b>. Пять десятичных цифр, при необходимости
            выравниваемых вправо начальными нулями, указывают количество символов
            в записи, включая маркер записи, справочник и поля переменной длины.
            Определяется автоматически, когда запись окончательно сформирована
            для обмена.</remarks>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len1">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len2">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len3">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.len4">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.RecordStatus">
            <summary>
            Статус записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.RecordType">
            <summary>
            Тип записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.BibliographicalIndex">
            <summary>
            Библиографический указатель.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.unused0">
            <summary>
            Не используется.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.unused1">
            <summary>
            Не используется.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.IndicatorLength">
            <summary>
            Длина индикатора.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.IdentifierLength">
            <summary>
            Длина идентификатора.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base0">
            <summary>
            Базовый адрес.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base1">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base2">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base3">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.base4">
            <summary>
            Продолжение.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.BibliographicalLevel">
            <summary>
            Уровень описания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.CataloguisationRules">
            <summary>
            Правила каталогизации.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.RelatedRecord">
            <summary>
            Наличие связанной записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.LengthOfLength">
            <summary>
            "Длина длины".
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.OffsetLength">
            <summary>
            "Длина смещения".
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.zero0">
            <summary>
            Всегда 0.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.IsoMarker.zero1">
            <summary>
            Всегда 0.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IsoRecordHeader">
            <summary>
            Summary description for MarcRecordHeader.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoRecordHeader.Parse(System.String)">
            <summary>
            Parse text representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoRecordHeader.Parse(System.Byte[])">
            <summary>
            Parse binary representation.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoRecordHeader.GetDefault">
            <summary>
            Заголовок по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.RecordStatus">
            <summary>
            Статус записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.RecordType">
            <summary>
            Тип записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.BibliographicalIndex">
            <summary>
            Библиографический указатель.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.BibliographicalLevel">
            <summary>
            Уровень описания.
            </summary>
            <value></value>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.CatalogingRules">
            <summary>
            Правила каталогизации.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ImportExport.IsoRecordHeader.RelatedRecord">
            <summary>
            Наличие связанной записи.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.MarcXml">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.AbstractEngine">
            <summary>
            Abstract execution engine.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractEngine)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.CheckConnection(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Check whether connection established.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.OnAfterExecute(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            After command execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.OnBeforeExecute(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Before command execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.OnException(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Exception occurs.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.StandardExecution(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Standard command execution.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.GetMemoryStream(System.Type)">
            <summary>
            Get <see cref="T:System.IO.MemoryStream"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.ExecuteCommand(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Execute specified command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractEngine.ReportMemoryUsage(System.Type,System.Int32)">
            <summary>
            Report memory usage.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Infrastructure.AbstractEngine.AfterExecution">
            <summary>
            Raised after execution.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Infrastructure.AbstractEngine.BeforeExecution">
            <summary>
            Raised before execution.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Infrastructure.AbstractEngine.ExceptionOccurs">
            <summary>
            Raised on exception.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractEngine.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractEngine.NestedEngine">
            <summary>
            Nested engine.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractEngine.Services">
            <summary>
            Additional services.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractEngine.ThrowOnVerify">
            <summary>
            Throw on <see cref="M:AM.IVerifiable.Verify(System.Boolean)"/> calling.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand">
            <summary>
            Actualize given record or whole database on the server.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.AbstractCommand">
            <summary>
            Abstract command of IRBIS protocol.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.ParseClientQuery(System.Byte[])">
            <summary>
            Parse client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.GoodReturnCodes">
            <summary>
            Good return codes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.RelaxResponse">
            <summary>
            Relax (may be malformed) server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.RequireConnection">
            <summary>
            Does the command require established connection?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand.Mfn">
            <summary>
            MFN of record to actualize.
            </summary>
            <remarks>MFN = 0 means 'actualize whole database'.
            </remarks>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand">
            <summary>
            Create database index on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand">
            <summary>
            Delete database on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DisconnectCommand">
            <summary>
            Disconnect from the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DisconnectCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DisconnectCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DisconnectCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DisconnectCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)"/>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ListUsersCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListUsersCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListUsersCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListUsersCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ListUsersCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.NopCommand">
            <summary>
            Unlock the database on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.NopCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.NopCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.NopCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand">
            <summary>
            Read one record from the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Lock">
            <summary>
            Need lock?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.VersionNumber">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.RawRecord">
            <summary>
            Readed record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand.GoodReturnCodes">
            <inheritdoc cref="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.GoodReturnCodes"/>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand">
            <summary>
            Reload database dictionary.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand">
            <summary>
            Reload database master file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.RestartServerCommand">
            <summary>
            Reload database dictionary.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.RestartServerCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.RestartServerCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.RestartServerCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.SearchRawCommand">
            <summary>
            Search records on IRBIS-server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.ApplyParameters(ManagedIrbis.Search.SearchParameters)">
            <summary>
            Apply <see cref="T:ManagedIrbis.Search.SearchParameters"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Clone">
            <summary>
            Clone the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.GatherParameters">
            <summary>
            Gather <see cref="T:ManagedIrbis.Search.SearchParameters"/>
            from the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.FirstRecord">
            <summary>
            First record offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.FormatSpecification">
            <summary>
            Format specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.NumberOfRecords">
            <summary>
            Number of records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.SearchExpression">
            <summary>
            Search query expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.SequentialSpecification">
            <summary>
            Specification of sequential search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.UtfFormat">
            <summary>
            Use UTF8 encoding for
            <see cref="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.FormatSpecification"/>?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchRawCommand.Found">
            <summary>
            Found records
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ServerStatCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerStatCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerStatCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerStatCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ServerStatCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand">
            <summary>
            Truncate the database on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand">
            <summary>
            Unlock the database on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand">
            <summary>
            Truncate the database on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand.Records">
            <summary>
            Record list.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand">
            <summary>
            Unlock the database on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand.CreateQuery">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand.Lines">
            <summary>
            Text to update.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ExecutionContext">
            <summary>
            Command execution context.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ExecutionContext.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ExecutionContext.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.Commands.AbstractCommand)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ExecutionContext.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.Command">
            <summary>
            Command to execute.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.ExceptionHandled">
            <summary>
            Exception handled?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.Response">
            <summary>
            Server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionContext.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ExecutionEventArgs">
            <summary>
            Event arguments.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ExecutionEventArgs.#ctor(ManagedIrbis.Infrastructure.ExecutionContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ExecutionEventArgs.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.IOutputService">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IOutputService.GetOutput">
            <summary>
            Get <see cref="T:AM.Text.Output.AbstractOutput"/>.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.SharpRunner">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.SharpRunner.AssemblyReferences">
            <summary>
            Assembly references.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.SharpRunner.ClassPrologue">
            <summary>
            Standard class prologue.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.SharpRunner.ClassEpilogue">
            <summary>
            Standard class epilogue.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.SharpRunner.CompileSnippet(System.String,System.String,System.Action{System.String})">
            <summary>
            Compile C# snippet.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.SharpRunner.CompileFile(System.String,System.Action{System.String})">
            <summary>
            Compile C# file.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.BrokenSocket">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.AbstractClientSocket">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractClientSocket.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.AbstractClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
            <exception cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"></exception>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractClientSocket.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractClientSocket.Busy">
            <summary>
            Busy state flag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.AbstractClientSocket.InnerSocket">
            <summary>
            Inner socket.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Sockets.BrokenSocket.DefaultProbability">
            <summary>
            Default value for
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.BrokenSocket.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractClientSocket)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.BrokenSocket.AbortRequest">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.AbstractClientSocket.AbortRequest"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.BrokenSocket.ExecuteRequest(System.Byte[])">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.AbstractClientSocket.ExecuteRequest(System.Byte[])"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.BrokenSocket.Probability">
            <summary>
            Probability of error event.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ClientSocketUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientSocketUtility.CreateSocket(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Create socket of the given type
            and add it to the socket chain
            of the connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientSocketUtility.CreateSocket``1(ManagedIrbis.IrbisConnection)">
            <summary>
            Create socket of the given type
            and add it to the socket chain
            of the connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientSocketUtility.FindSocket``1(ManagedIrbis.IrbisConnection)">
            <summary>
            Find given socket type in the socket chain.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientSocketUtility.FindOrCreateSocket``1(ManagedIrbis.IrbisConnection)">
            <summary>
            Find or create (add to socket chain)
            given socket type.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientSocketUtility.RemoveSocket(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractClientSocket)">
            <summary>
            Remove given socket from the socket chain.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.SlowSocket">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Sockets.SlowSocket.DefaultDelay">
            <summary>
            Default value for <see cref="P:ManagedIrbis.Infrastructure.Sockets.SlowSocket.Delay"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SlowSocket.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractClientSocket)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SlowSocket.AbortRequest">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.AbstractClientSocket.AbortRequest"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SlowSocket.ExecuteRequest(System.Byte[])">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.AbstractClientSocket.ExecuteRequest(System.Byte[])"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.SlowSocket.Delay">
            <summary>
            Delay, milliseconds.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.StandardEngine">
            <summary>
            Standard execution engine.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.StandardEngine.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractEngine)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.StandardEngine.GetMemoryStream(System.Type)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.AbstractEngine.GetMemoryStream(System.Type)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.StandardEngine.ReportMemoryUsage(System.Type,System.Int32)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.AbstractEngine.ReportMemoryUsage(System.Type,System.Int32)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.StandardEngine.MemoryUsage">
            <summary>
            Memory usage.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Flc.FlcConstants">
            <summary>
            Formal control related constants.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcConstants.DbnFlc">
            <summary>
            Check record update or creation.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcConstants.DelFlc">
            <summary>
            Check record deletion.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Flc.FlcProcessor">
            <summary>
            FLC processor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcProcessor.CheckRecord(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Check the record.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Flc.FlcResult">
            <summary>
            Result of formal checking.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.Parse(System.String)">
            <summary>
            Parse the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object stat to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Flc.FlcResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Flc.FlcResult.CanContinue">
            <summary>
            Can continue?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Flc.FlcResult.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Flc.FlcResult.Messages">
            <summary>
            Messages.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Flc.FlcStatus">
            <summary>
            первый символ результата форматирования определяет
            результат ФЛК
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcStatus.OK">
            <summary>
            означает положительный результат контроля.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcStatus.Error">
            <summary>
            означает отрицательный результат и обнаруженные ошибки
            считаются непреодолимыми, т.е. подлежат
            обязательному устранению.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Flc.FlcStatus.Warning">
            <summary>
            означает отрицательный результат, но при этом ошибки
            считаются преодолимыми, т.е. их можно не исправлять.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.FstFile">
            <summary>
            FST file handling
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.ConcatenateFormat">
            <summary>
            Build concatenated format string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.ParseStream(System.IO.TextReader)">
            <summary>
            Parse the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.ParseLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Parse local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstFile.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to specified stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstFile.FileName">
            <summary>
            File name (for identification only).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstFile.Lines">
            <summary>
            Lines of the file.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.FstIndexMethod">
            <summary>
            Метод индексирования.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method0">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method1">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method2">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method3">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method4">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method5">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method6">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method7">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Fst.FstIndexMethod.Method8">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Fst.FstLine">
            <summary>
            FST file line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstLine.ParseStream(System.IO.TextReader)">
            <summary>
            Parse one line from the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstLine.ToFormat">
            <summary>
            Convert line to the IRBIS format.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstLine.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Fst.FstLine.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to specified stream.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstLine.LineNumber">
            <summary>
            Line number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstLine.Tag">
            <summary>
            Field tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstLine.Method">
            <summary>
            Index method.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Fst.FstLine.Format">
            <summary>
            Format itself.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblBuilder">
            <summary>
            <para>Инструмент для упрощённого построения заданий на
            глобальную корректировку.</para>
            <para>Пример построения и выполнения задания:</para>
            <code>
            GblResult result = new GblBuilder()
                   .Add("3079", "'1'")
                   .Delete("3011")
                   .Execute
                        (
                            connection,
                            "IBIS",
                            new[] {30, 32, 34}
                        );
            Console.WriteLine
                (
                    "Processed {0} records",
                    result.RecordsProcessed
                );
            foreach (ProtocolLine line in result.Protocol)
            {
                Console.WriteLine(line);
            }
            </code>
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.AddStatement(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add an arbitrary statement.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Add(System.String,System.String)">
            <summary>
            Command "ADD".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Add(System.String,System.String,System.String)">
            <summary>
            Command "ADD".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Change(System.String,System.String,System.String)">
            <summary>
            Command "CHA".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Change(System.String,System.String,System.String,System.String)">
            <summary>
            Command "CHA".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Delete(System.String,System.String)">
            <summary>
            Command "DEL".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Delete(System.String)">
            <summary>
            Command "DEL".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.DeleteRecord">
            <summary>
            Command "DELR".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Execute the GBL on the given database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection)">
            <summary>
            Execute the GBL on the search result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Execute the GBL on the search result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32)">
            <summary>
            Execute the GBL on given record interval.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.Int32,System.Int32)">
            <summary>
            Execute the GBL on given record interval.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Execute the GBL on given recordset.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Execute(ManagedIrbis.IrbisConnection,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Execute the GBL on given recordset.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Fi">
            <summary>
            Command "FI" - closes "IF".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.If(System.String)">
            <summary>
            Command "IF".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.If(System.String,ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Command "IF".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.If(System.String,ManagedIrbis.Gbl.GblBuilder)">
            <summary>
            Command "IF"
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Nop">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Nop(System.String)">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Nop(System.String,System.String)">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Replace(System.String,System.String,System.String)">
            <summary>
            Command "REP".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Replace(System.String,System.String)">
            <summary>
            Command "REP".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.ToStatements">
            <summary>
            Build statement array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.Undo(System.String)">
            <summary>
            Command "UNDO"
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyCode(System.String)">
            <summary>
            Verify command code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyField(System.String)">
            <summary>
            Verify field specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyFormat(System.String)">
            <summary>
            Verify format specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyParameter(System.String)">
            <summary>
            Verify command parameter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyRepeat(System.String)">
            <summary>
            Verify field repeat specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblBuilder.VerifyValue(System.String)">
            <summary>
            Verify value for command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblCode">
            <summary>
            Command codes for GBL files.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Add">
            <summary>
            Добавление нового повторения поля или подполя
            в заданное существующее поле.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Delete">
            <summary>
            Удаляет поле или подполе в поле.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Replace">
            <summary>
            Замена целиком поля или подполя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Change">
            <summary>
            Замена данных в поле или подполе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.ChangeCase">
            <summary>
            Замена данных в поле или подполе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.DeleteRecord">
            <summary>
            Удаление записи в целом.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.UndeleteRecord">
            <summary>
            Восстановление записи в целом.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.CorrectRecords">
            <summary>
            Из текущей записи, вызывает на корректировку другие записи, 
            отобранные по поисковым терминам  из текущей или другой, 
            доступной в системе, базы данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.CreateRecord">
            <summary>
            Создает новую запись в текущей или другой базе данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.EmptyRecord">
            <summary>
            Очищает (опустошает) текущую запись.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Undo">
            <summary>
            Переход к одной из предыдущих копий записи (откат).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Comment">
            <summary>
            Комментарий. Может находиться между другими операторами 
            и содержать любые тексты в строках (до 4-х) после себя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.End">
            <summary>
            Завершает работу с другой базой данных,
            установленной в операторах CORREC или NEWREC.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.If">
            <summary>
            Определяет условие выполнения операторов, 
            следующих за ним до оператора FI. 
            Состоит из двух строк: первая строка – имя оператора IF; 
            вторая строка – формат, результатом которого может быть строка ‘1’, 
            что означает разрешение на выполнение последующих операторов, 
            или любое другое значение, что означает запрет 
            на выполнение последующих операторов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Fi">
            <summary>
            Завершает действие оператора IF. Состоит из одной строки – FI.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.All">
            <summary>
            Оператор можно использовать в группе операторов после операторов 
            NEWMFN или CORREC. Он дополняет записи всеми полями текущей записи. 
            Т. е. это способ, например, создать новую запись и наполнить 
            ее содержимым текущей записи. Или можно вызвать на корректировку 
            другую запись (CORREC), очистить ее (EMPTY) и наполнить содержимым 
            текущей записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.PutLog">
            <summary>
            Формирование пользовательского протокола.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Repeat">
            <summary>
            Операторы REPEAT-UNTIL организуют цикл выполнения группы операторов. 
            Группа операторов между ними будет выполняться до тех пор, 
            пока формат в операторе UNTIL будет давать значение ‘1’.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblCode.Until">
            <summary>
            Второй строкой оператора должен быть формат, который позволяет 
            завершить цикл, если результат форматирования на текущей записи 
            отличен от ‘1’.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblEventArgs">
            <summary>
            Event arguments for <see cref="T:ManagedIrbis.Gbl.GlobalCorrector"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblEventArgs.#ctor(ManagedIrbis.Gbl.GlobalCorrector)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblEventArgs.Corrector">
            <summary>
            <see cref="T:ManagedIrbis.Gbl.GlobalCorrector"/>
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblEventArgs.Cancel">
            <summary>
            Whether the execution canceled.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblExecutive">
            <summary>
            Executes GBL statements locally.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblExecutive.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblExecutive.GetField(System.String)">
            <summary>
            Get the field from the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblExecutive.IsSubField(System.String)">
            <summary>
            Whether the subfield specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblExecutive.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblExecutive.Record">
            <summary>
            Record.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblFile">
            <summary>
            GBL file
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.ParseLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Parse local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.ParseStream(System.IO.TextReader)">
            <summary>
            Parse specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.ShouldSerializeParameters">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblFile.Parameters"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblFile.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblFile.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblFile.Statements">
            <summary>
            Items.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblFile.Parameters">
            <summary>
            Signature.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblSettings">
            <summary>
            Settings for GBL execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.#ctor(ManagedIrbis.IrbisConnection,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.FromJson(System.String)">
            <summary>
            Restore settings from JSON string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForInterval(ManagedIrbis.IrbisConnection,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given interval of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForInterval(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given interval of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForList(ManagedIrbis.IrbisConnection,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given list of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForList(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given list of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForList(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given list of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForSearchExpression(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given searchExpression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ForSearchExpression(ManagedIrbis.IrbisConnection,System.String,System.String,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Create <see cref="T:ManagedIrbis.Gbl.GblSettings"/>
            for given searchExpression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.SetFileName(System.String)">
            <summary>
            Set (server) file name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.SetRange(System.Int32,System.Int32)">
            <summary>
            Set first record and number of records
            to process.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.SetSearchExpression(System.String)">
            <summary>
            Set search expression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.ToJson">
            <summary>
            Convert settings to JSON string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblSettings.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.Actualize">
            <summary>
            Actualize records after processing.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.Autoin">
            <summary>
            Process 'autoin.gbl'.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.FirstRecord">
            <summary>
            First record MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.FormalControl">
            <summary>
            Provide formal control.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
            <remarks>0 means 'all records in the database'.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.MfnList">
            <summary>
            List of MFN to process.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
            <remarks>0 means 'all records in the database'.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.NumberOfRecords">
            <summary>
            Number of records to process.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.SearchExpression">
            <summary>
            Search expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblSettings.Statements">
            <summary>
            Statements.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblResult">
            <summary>
            Result of GBL execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblResult.GetEmptyResult">
            <summary>
            Get empty result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblResult.MergeResult(ManagedIrbis.Gbl.GblResult)">
            <summary>
            Merge result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblResult.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.TimeStarted">
            <summary>
            Момент начала обработки.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.TimeElapsed">
            <summary>
            Всего времени затрачено (с момента начала обработки).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.Canceled">
            <summary>
            Отменено пользователем.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.Exception">
            <summary>
            Исключение (если возникло).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.RecordsSupposed">
            <summary>
            Предполагалось обработать записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.RecordsProcessed">
            <summary>
            Обработано записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.RecordsSucceeded">
            <summary>
            Успешно обработано записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.RecordsFailed">
            <summary>
            Ошибок при обработке записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblResult.Protocol">
            <summary>
            Результаты для каждой записи.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblStatement">
            <summary>
            GBL file item.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Gbl.GblStatement.Delimiter">
            <summary>
            Разделитель элементов
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.EncodeForProtocol">
            <summary>
            Encode for protocol.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ParseStream(System.IO.TextReader)">
            <summary>
            Parse the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ShouldSerializeFormat1">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblStatement.Format1"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ShouldSerializeFormat2">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblStatement.Format2"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ShouldSerializeParameter1">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblStatement.Parameter1"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ShouldSerializeParameter2">
            <summary>
            Should JSON serialize <see cref="P:ManagedIrbis.Gbl.GblStatement.Parameter2"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblStatement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Command">
            <summary>
            Команда (оператор), например, ADD или DEL.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Parameter1">
            <summary>
            Первый параметр, как правило, спецификация поля/подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Parameter2">
            <summary>
            Второй параметр, как правило, спецификация повторения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Format1">
            <summary>
            Первый формат, например, выражение для замены.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblStatement.Format2">
            <summary>
            Второй формат, например, заменяющее выражение.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblParameter">
            <summary>
            Parameter for GBL file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.ParseStream(System.IO.TextReader)">
            <summary>
            Parse specifiedStream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to given stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblParameter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblParameter.Name">
            <summary>
            Parameter name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GblParameter.Value">
            <summary>
            Parameter value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GblUtility">
            <summary>
            Utility routines for GBL file handling.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.EncodeStatements(ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Encode statements for IRBIS64 protocol.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.FromJson(System.String)">
            <summary>
            Restore <see cref="T:ManagedIrbis.Gbl.GblFile"/> from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.FromXml(System.String)">
            <summary>
            Restore <see cref="T:ManagedIrbis.Gbl.GblFile"/> from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.NodesToText(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.Infrastructure.GblNode})">
            <summary>
            Build text representation of <see cref="T:ManagedIrbis.Gbl.Infrastructure.GblNode"/>'s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.ParseLocalJsonFile(System.String)">
            <summary>
            Parses the local JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.ParseLocalXmlFile(System.String)">
            <summary>
            Parses the local XML file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.SaveLocalJsonFile(ManagedIrbis.Gbl.GblFile,System.String)">
            <summary>
            Saves <see cref="T:ManagedIrbis.Gbl.GblFile"/> to local JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.ToJson(ManagedIrbis.Gbl.GblFile)">
            <summary>
            Convert <see cref="T:ManagedIrbis.Gbl.GblFile"/> to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GblUtility.ToXml(ManagedIrbis.Gbl.GblFile)">
            <summary>
            Converts the <see cref="T:ManagedIrbis.Gbl.GblFile"/> to XML.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.GlobalCorrector">
            <summary>
            Обёртка для облегчения выполнения глобальной корректировки
            порциями (например, по 100 записей за раз).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.FromSettings(ManagedIrbis.IrbisConnection,ManagedIrbis.Gbl.GblSettings)">
            <summary>
            Create the <see cref="T:ManagedIrbis.Gbl.GlobalCorrector"/>
            from <see cref="T:ManagedIrbis.Gbl.GblSettings"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ProcessInterval(System.Int32,System.Int32,ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Обработать интервал записей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ProcessRecordset(System.Collections.Generic.IEnumerable{System.Int32},ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Обработать явно (вручную) заданное множество записей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ProcessSearchResult(System.String,ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Обработать результат поиска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ProcessWholeDatabase(ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            Обработать базу данных в целом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.GlobalCorrector.ToSettings(System.Collections.Generic.IEnumerable{ManagedIrbis.Gbl.GblStatement})">
            <summary>
            Convert <see cref="T:ManagedIrbis.Gbl.GlobalCorrector"/>
            to <see cref="T:ManagedIrbis.Gbl.GblSettings"/>.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Gbl.GlobalCorrector.PortionProcessed">
            <summary>
            Вызывается после обработки очередной порции записей
            и в конце общей обработки.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.ChunkSize">
            <summary>
            Chunk size.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Actualize">
            <summary>
            Актуализировать ли словарь. По умолчанию <c>true</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Autoin">
            <summary>
            Выполнять ли autoin.gbl.
            По умолчанию <c>false</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.FormalControl">
            <summary>
            Выполнять ли формально-логический контроль.
            По умолчанию <c>false</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Cancel">
            <summary>
            Was cancelled?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.GlobalCorrector.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Gbl.ProtocolLine">
            <summary>
            GBL execution result for one record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.ProtocolLine.Parse(System.String)">
            <summary>
            Parse one text line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.ProtocolLine.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Gbl.ProtocolLine.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Success">
            <summary>
            Общий признак успеха.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Database">
            <summary>
            Имя базы данных
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Mfn">
            <summary>
            MFN записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Autoin">
            <summary>
            Результат Autoin.gbl
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Update">
            <summary>
            UPDATE=
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Status">
            <summary>
            STATUS=
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Error">
            <summary>
            Код ошибки, если есть
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.UpdUf">
            <summary>
            UPDUF=
            </summary>
        </member>
        <member name="P:ManagedIrbis.Gbl.ProtocolLine.Text">
            <summary>
            Исходный текст (до парсинга)
            </summary>
        </member>
        <member name="T:ManagedIrbis.Identifiers.CrossRefApi">
            <summary>
            API for CrossRef.org
            </summary>
        </member>
        <member name="T:ManagedIrbis.Identifiers.Ismn">
            <summary>
            Всё, связанное с ISMN.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.Ismn.StandardHyphen">
            <summary>
            Стандартный знак дефис.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.Ismn.IsoIsmn">
            <summary>
            Allowed digits.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.Ismn.EanIsmn">
            <summary>
            Allowed digits.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Ismn.CheckControlDigit(System.String)">
            <summary>
            Проверяет контрольную цифру ISMN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Ismn.CheckHyphens(System.String,System.Char)">
            <summary>
            Проверяем дефисы.
            </summary>
            <param name="ismn">Проверяемая строка.</param>
            <param name="hyphen">Символ дефиса.</param>
            <returns><c>true</c> если дефисы расставлены правильно.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Ismn.CheckHyphens(System.String)">
            <summary>
            Проверяем дефисы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Ismn.Verify(System.String,System.Boolean)">
            <summary>
            Verify the ISMN.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.IfpRecord">
            <summary>
            Inverted file record
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.IfpRecord.MinPostingsInBlock">
            <summary>
            Число ссылок на термин, после превышения которого
            используется специальный блок ссылок.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.IfpRecord.LeaderSize">
            <summary>
            ibatrak размер лидера записи
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.IfpRecord.BlockSize">
            <summary>
            ibatrak размер блока
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.IfpRecord.TermLinkSize">
            <summary>
            ibatrak размер записи ссылки
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IfpRecord.ReadLeader(System.IO.Stream,System.Int64)">
            <summary>
            ibatrak чтение заголовка записи IFP (для подсчета количества ссылок)
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IfpRecord.Read(System.IO.Stream,System.Int64)">
            <summary>
            Считываем из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IfpRecord.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.LowOffset">
            <summary>
            Младшее слово смещения на следующую запись (если нет - 0).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.HighOffset">
            <summary>
            Старшее слово смещения на следующую запись (если нет - 0).
            </summary>
            <remarks>Признак последнего блока – LOW=HIGH= -1.</remarks>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.FullOffset">
            <summary>
            ibatrak ссылка на следующую запись
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.TotalLinkCount">
            <summary>
            Ообщее число ссылок для данного термина
            (только в первой записи);
            число ссылок в данном блоке(в следующих записях).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.BlockLinkCount">
            <summary>
            Число ссылок в данном блоке.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.Capacity">
            <summary>
            Вместимость записи в ссылках.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.Links">
            <summary>
            Собственно ссылки.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.IfpRecord.SpecialPostingBlockEntry">
            <summary>
            ibatrak структура с описанием спец блока
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.IfpRecord.SpecialPostingBlockEntry.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.SpecialPostingBlockEntry.Posting">
            <summary>
            1-я ссылка из записи обыкновенного формата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.SpecialPostingBlockEntry.Low">
            <summary>
            младшее слово смещения на следующую запись (если нет 0)
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.SpecialPostingBlockEntry.High">
            <summary>
            старшее слово смещения на следующую запись (если нет 0)
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.IfpRecord.SpecialPostingBlockEntry.Offset">
            <summary>
            Offset.
            </summary>
        </member>
        <member name="T:ManagedIrbis.NodeItem">
            <summary>
            Справочник в N01/L01 является таблицей, определяющей
            поисковый термин. Каждый ключ переменной длины, который
            есть в записи, представлен в справочнике одним входом,
            формат которого описывает следующая структура
            </summary>
        </member>
        <member name="M:ManagedIrbis.NodeItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.NodeItem.Length">
            <summary>
            Длина ключа
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.KeyOffset">
            <summary>
            Смещение ключа от начала записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.LowOffset">
            <summary>
            Младшее слово смещения
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.HighOffset">
            <summary>
            Старшее слово смещения
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.FullOffset">
            <summary>
            Полное смещение
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.RefersToLeaf">
            <summary>
            Ссылается на лист?
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeItem.Text">
            <summary>
            Текстовое значение ключа
            </summary>
        </member>
        <member name="T:ManagedIrbis.NodeLeader">
            <summary>
            Лидер записи в N01, L01
            </summary>
        </member>
        <member name="M:ManagedIrbis.NodeLeader.Read(System.IO.Stream)">
            <summary>
            Считывание из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.NodeLeader.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.Number">
            <summary>
            Номер записи (начиная с 1; в N01 номер первой записи
            равен номеру корневой записи дерева
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.Previous">
            <summary>
            Номер предыдущей записи (-1, если нет)
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.Next">
            <summary>
            Номер следующей записи (-1, если нет)
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.TermCount">
            <summary>
            Число ключей в записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.NodeLeader.FreeOffset">
            <summary>
            Смещение на свободную позицию в записи
            (от начала записи)
            </summary>
        </member>
        <member name="T:ManagedIrbis.Direct.NodeRecord">
            <summary>
            Запись в файлах L01 и N01.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Direct.NodeRecord.RecordSize">
            <summary>
            Длина записи в текущей реализации.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.NodeRecord.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.NodeRecord.#ctor(System.Boolean)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.Direct.NodeRecord.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Direct.NodeRecord.IsLeaf">
            <summary>
            Лист?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.NodeRecord.Leader">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="P:ManagedIrbis.Direct.NodeRecord.Items">
            <summary>
            Ссылки
            </summary>
        </member>
        <member name="T:ManagedIrbis.Identifiers.Doi">
            <summary>
            DOI
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Doi.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Doi.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Doi.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Identifiers.Doi.Prefix">
            <summary>
            Префикс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Identifiers.Doi.Suffix">
            <summary>
            Суффикс.
            </summary>
        </member>
        <member name="T:ManagedIrbis.EmbeddedField">
            <summary>
            Работа со встроенными полями.
            </summary>
        </member>
        <member name="F:ManagedIrbis.EmbeddedField.DefaultCode">
            <summary>
            Код по умолчанию, используемый для встраивания полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.EmbeddedField.GetEmbeddedFields(ManagedIrbis.RecordField)">
            <summary>
            Получение встроенных полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.EmbeddedField.GetEmbeddedFields(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char)">
            <summary>
            Get embedded fields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.EmbeddedField.GetEmbeddedField(ManagedIrbis.RecordField,System.String)">
            <summary>
            Получение встроенных полей с указанным тегом.
            </summary>
        </member>
        <member name="T:ManagedIrbis.FieldIndicator">
            <summary>
            Индикатор поля.
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldIndicator.NoValue">
            <summary>
            Значение не установлено.
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldIndicator.EmptyValue">
            <summary>
            For visual only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.Clone">
            <summary>
            Создание клона индикатора.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.SetReadOnly">
            <summary>
            Marks the indicator as read-only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.SetValue(System.String)">
            <summary>
            Установка значения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.ToText">
            <summary>
            Text representation of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.AsReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.AsReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.ThrowIfReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.ThrowIfReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.FieldIndicator.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldIndicator.HasValue">
            <summary>
            Whether value is set?
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldIndicator.Value">
            <summary>
            Value of the indicator.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldIndicator.ReadOnly">
            <inheritdoc cref="P:AM.IReadOnly`1.ReadOnly"/>
        </member>
        <member name="T:ManagedIrbis.FieldIndicator.FieldIndicatorConverter">
            <summary>
            JSON converter for <see cref="T:ManagedIrbis.FieldIndicator"/>
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.FieldIndicatorConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.FieldIndicatorConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.FieldIndicator.FieldIndicatorConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.FieldReference">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.FieldReference.NoCode">
            <summary>
            Нет кода.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.#ctor(System.String,System.Char)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Apply(ManagedIrbis.Pft.Infrastructure.FieldSpecification)">
            <summary>
            Apply the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Format(ManagedIrbis.MarcRecord)">
            <summary>
            Format the reference against given record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.GetUniqueValues(ManagedIrbis.MarcRecord)">
            <summary>
            Get unique values of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.GetUniqueValuesIgnoreCase(ManagedIrbis.MarcRecord)">
            <summary>
            Get unique values of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.GetValues(ManagedIrbis.MarcRecord)">
            <summary>
            Get values of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Parse(System.String)">
            <summary>
            Parse field specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldReference.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.FieldReference.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.FieldReference.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Command">
            <summary>
            Command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Embedded">
            <summary>
            Embedded.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Indent">
            <summary>
            Отступ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Offset">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Length">
            <summary>
            Длина.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.SubField">
            <summary>
            Subfield.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.TagSpecification">
            <summary>
            Tag specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.FieldRepeat">
            <summary>
            Field repeat.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.SubFieldRepeat">
            <summary>
            Subfield repeat.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldReference.SubFieldSpecification">
            <summary>
            Subfield specification.
            </summary>
        </member>
        <member name="T:ManagedIrbis.FieldTag">
            <summary>
            Field tag related routines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldTag.IsValidTag(System.String)">
            <summary>
            Whether given tag is valid?
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldTag.Normalize(System.String)">
            <summary>
            Normalization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldTag.Verify(System.String,System.Boolean)">
            <summary>
            Verify the tag value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldTag.Verify(System.String)">
            <summary>
            Verify the tag value.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldTag.ThrowOnValidate">
            <summary>
            Бросать исключения при валидации?
            </summary>
        </member>
        <member name="T:ManagedIrbis.FieldValue">
            <summary>
            Field value related routines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldValue.IsValidValue(System.String)">
            <summary>
            Whether the value valid.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldValue.Normalize(System.String)">
            <summary>
            Field value normalization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldValue.Verify(System.String)">
            <summary>
            Verify subfield value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldValue.Verify(System.String,System.Boolean)">
            <summary>
            Verify subfield code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.FieldValue.ThrowOnVerify">
            <summary>
            Throw exception on verification error.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IlfFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.IlfFile.MagicString">
            <summary>
            Magic string in header.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.GetFile(System.String)">
            <summary>
            Get file by name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.ReadLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Read local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.IlfFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.IlfFile.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Unknown1">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.SlotCount">
            <summary>
            Slot count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.EntryCount">
            <summary>
            Entry count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.WriteCount">
            <summary>
            Write count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.DeleteCount">
            <summary>
            Delete count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entries">
            <summary>
            Entries.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IlfFile.Entry">
            <summary>
            Entry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.Entry.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.Entry.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IlfFile.Entry.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Position">
            <summary>
            Смещение данных от начала файла.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Date">
            <summary>
            Дата создания.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Deleted">
            <summary>
            Удалено?
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Number">
            <summary>
            Порядковый номер.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Flags">
            <summary>
            Флаги.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.DataLength">
            <summary>
            Количество данных (вместе с описанием).
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Description">
            <summary>
            Описание в произвольной форме.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IlfFile.Entry.Data">
            <summary>
            Собственно данные.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IrbisJson">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IrbisJson.RecordToIrbisJson(ManagedIrbis.MarcRecord)">
            <summary>
            Строит представление записи в виде JSON,
            характерном для ИРБИС.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IsisText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsisText.RecordToIsisText(ManagedIrbis.MarcRecord)">
            <summary>
            Формирует текстовое представление записи,
            характерное для ISIS.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.PlainText">
            <summary>
            Плоское текстовое представление записи,
            используемое, например, при импорте-экспорте
            в текстовом формате в АРМ Каталогизатор
            и Администратор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.PlainText.ReadRecord(System.IO.TextReader)">
            <summary>
            Чтение одной записи из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.PlainText.ReadOneRecord(System.String,System.Text.Encoding)">
            <summary>
            Read one record from local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.PlainText.ReadRecords(System.String,System.Text.Encoding)">
            <summary>
            Read some records from local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.PlainText.ToPlainText(ManagedIrbis.MarcRecord)">
            <summary>
            Формирует плоское текстовое представление записи.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.ProtocolText">
            <summary>
            Текстовое представление записи, используемое в протоколе
            ИРБИС64-сервер.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.EncodeSubField(System.Text.StringBuilder,ManagedIrbis.SubField)">
            <summary>
            Encode subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.EncodeField(System.Text.StringBuilder,ManagedIrbis.RecordField)">
            <summary>
            Encode field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.EncodeRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Кодирование записи в клиентское представление.
            </summary>
            <param name="record">Запись для кодирования.</param>
            <returns>
            Закодированная запись.
            </returns>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseMfnStatusVersion(System.String,System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Parse MFN, status and version of the record
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForReadRecord(ManagedIrbis.Infrastructure.ServerResponse,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for ReadRecordCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForWriteRecord(ManagedIrbis.Infrastructure.ServerResponse,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for WriteRecordCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForWriteRecords(ManagedIrbis.Infrastructure.ServerResponse,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for WriteRecordsCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForAllFormat(ManagedIrbis.Infrastructure.ServerResponse,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for ALL-formatted record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForAllFormat(System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Parse server response for ALL-formatted record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ParseResponseForGblFormat(System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Parse response for global correction
            of virtual record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.ProtocolText.ToProtocolText(ManagedIrbis.MarcRecord)">
            <summary>
            Convert the record to the protocol text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.Iso2709">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.Iso2709.MarkerLength">
            <summary>
            Marker length.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.Iso2709.RecordDelimiter">
            <summary>
            Record delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.Iso2709.FieldDelimiter">
            <summary>
            Field delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.ImportExport.Iso2709.SubfieldDelimiter">
            <summary>
            Subfield delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.Iso2709.ReadRecord(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Разбор 2709.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.Iso2709.WriteIso(ManagedIrbis.MarcRecord,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Выводит запись в ISO-поток.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ImportExport.IsoReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />
            object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" />
            that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ManagedIrbis.ImportExport.IsoReader.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.StandardOutputService">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.StandardOutputService.GetOutput">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.IOutputService.GetOutput"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.StandardOutputService.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Statistics.ConnectionStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Statistics.ConnectionStatistics.Count">
            <summary>
            Count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Statistics.ConnectionStatistics.Maximum">
            <summary>
            Maximum, seconds.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Statistics.ConnectionStatistics.Minimum">
            <summary>
            Minimum, seconds.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Statistics.ConnectionStatistics.Total">
            <summary>
            Time spent on network, seconds.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Statistics.ConnectionStatisticsService">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Statistics.IConnectionStatisticsService">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Statistics.IConnectionStatisticsService.AddEvent(System.Double)">
            <summary>
            Add event.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Statistics.IConnectionStatisticsService.Clear">
            <summary>
            Clear.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Statistics.IConnectionStatisticsService.GetCumulatedStatistics">
            <summary>
            Get cumulated statistics.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Statistics.ConnectionStatisticsService.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Statistics.ConnectionStatisticsService.AddEvent(System.Double)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Statistics.IConnectionStatisticsService.AddEvent(System.Double)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Statistics.ConnectionStatisticsService.Clear">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Statistics.IConnectionStatisticsService.Clear"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Statistics.ConnectionStatisticsService.GetCumulatedStatistics">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Statistics.IConnectionStatisticsService.GetCumulatedStatistics"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Statistics.ConnectionStatisticsService.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Statistics.ConnectionStatisticsService.Statistics">
            <summary>
            Accumulated statistics.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionAction">
            <summary>
            Transaction action.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionAction.CreateRecord">
            <summary>
            Create record.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionAction.ModifyRecord">
            <summary>
            Modify (update) record.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionAction.DeleteRecord">
            <summary>
            Delete record.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext.#ctor(ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext.#ctor(System.String,ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext.Clear">
            <summary>
            Clear the context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext.Items">
            <summary>
            Transaction items.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext.Name">
            <summary>
            Name of the context (optional).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext.ParentContext">
            <summary>
            Parent context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionEventArgs.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.Transactions.IrbisTransactionContext,ManagedIrbis.Infrastructure.Transactions.IrbisTransactionItem)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionEventArgs.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionEventArgs.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionEventArgs.Item">
            <summary>
            Item.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionItem">
            <summary>
            Данные об элементе транзакции.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionItem.Moment">
            <summary>
            Момент времени.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionItem.Action">
            <summary>
            Произведенное действие: создание записи,
            модификация, удаление.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionItem.Database">
            <summary>
            Имя базы данных, в которой происходило действие.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionItem.Mfn">
            <summary>
            MFN записи, с которой происходило действие.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager.BeginTransaction(System.String)">
            <summary>
            Begin transaction.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager.CommitTransaction">
            <summary>
            Commit transaction.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager.RollbackTransaction">
            <summary>
            Rollback transaction.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Transactions.IrbisTransactionManager.InTransactionNow">
            <summary>
            In transaction now?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Input.InputLine">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Input.InputLine.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Input.InputLine.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Input.InputLine.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Input.InputLine.Hint">
            <summary>
            Hint.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputLine.Mandatory">
            <summary>
            Mandatory?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputLine.Tag">
            <summary>
            Tag (e. g. "200^a").
            </summary>
        </member>
        <member name="T:ManagedIrbis.Input.InputSpecification">
            <summary>
            Input specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.LoadJsonFile(System.String)">
            <summary>
            Load specification from JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.LoadXmlFile(System.String)">
            <summary>
            Load specification from XML file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Input.InputSpecification.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Input.InputSpecification.Lines">
            <summary>
            Input lines.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputSpecification.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Input.InputSpecification.Title">
            <summary>
            Title.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisAlphabetTable">
            <summary>
            ISISAC.TAB
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisAlphabetTable.FileName">
            <summary>
            Имя файла таблицы по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.#ctor(System.Text.Encoding,System.Byte[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.GetInstance(ManagedIrbis.IrbisConnection)">
            <summary>
            Get global instance of the
            <see cref="T:ManagedIrbis.IrbisAlphabetTable"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.IsAlpha(System.Char)">
            <summary>
            Determines whether the specified character is alpha
            according to table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.ParseLocalFile(System.String)">
            <summary>
            Парсим локальный файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.ParseText(System.IO.TextReader)">
            <summary>
            Парсим таблицу из текстового представления.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.ResetInstance">
            <summary>
            Free global instance of
            <see cref="T:ManagedIrbis.IrbisAlphabetTable"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.SplitWords(System.String)">
            <summary>
            Разбиваем текст на слова.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.ToSourceCode(System.IO.TextWriter)">
            <summary>
            Формируем исходный код с определением таблицы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.TrimText(System.String)">
            <summary>
            Trim the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.WriteLocalFile(System.String)">
            <summary>
            Записываемся в файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.WriteTable(System.IO.TextWriter)">
            <summary>
            Записываемся в поток.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.IrbisAlphabetTable.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.IrbisAlphabetTable.Characters">
            <summary>
            Собственно таблица.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ClientInfo">
            <summary>
            Информация о клиенте, подключенном к серверу ИРБИС
            (не обязательно о текущем).
            </summary>
        </member>
        <member name="M:ManagedIrbis.ClientInfo.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Number">
            <summary>
            Номер
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.IPAddress">
            <summary>
            Адрес клиента
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Port">
            <summary>
            Порт клиента
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Name">
            <summary>
            Логин
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.ID">
            <summary>
            Идентификатор клиентской программы
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Workstation">
            <summary>
            Клиентский АРМ
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Registered">
            <summary>
            Время подключения к серверу
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.Acknowledged">
            <summary>
            Последнее подтверждение
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.LastCommand">
            <summary>
            Последняя команда
            </summary>
        </member>
        <member name="P:ManagedIrbis.ClientInfo.CommandNumber">
            <summary>
            Номер последней команды
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisCatalog">
            <summary>
            Common catalog-related stuff.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.MasterFileExtension">
            <summary>
            Master file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.CrossReferenceExtension">
            <summary>
            Cross-reference.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.IndexFileExtension">
            <summary>
            Index (inverted) file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.NodeFileExtension">
            <summary>
            Node file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.LeafFileExtension">
            <summary>
            Leaf node file.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisCatalog.FileSelectionTableExtension">
            <summary>
            File selection table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisCatalog.GetExtensions">
            <summary>
            Get extensions for database files.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisConstants">
            <summary>
            Common constants.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConstants.AdministratorDatabaseList">
            <summary>
            Database list for administrator.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConstants.CatalogerDatabaseList">
            <summary>
            Database list for cataloger.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConstants.MaxPostings">
            <summary>
            Max postings in the packet.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConstants.ReaderDatabaseList">
            <summary>
            Database list for reader.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisLink">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisLink.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisLink.Parse(System.String)">
            <summary>
            Parse text for IRBIS-link.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisLink.ParseForImage(System.String)">
            <summary>
            Parse text for IRBIS-link.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisLink.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.IrbisLink.Command">
            <summary>
            Command (C21COM).
            </summary>
            <remarks>
            E. g.: "3".
            </remarks>
        </member>
        <member name="P:ManagedIrbis.IrbisLink.Path">
            <summary>
            Path (PATH).
            </summary>
            <remarks>
            E. g.: "10".
            </remarks>
        </member>
        <member name="P:ManagedIrbis.IrbisLink.Database">
            <summary>
            Database name (I21DBN).
            </summary>
            <remarks>
            E. g.: "IBIS".
            </remarks>
        </member>
        <member name="P:ManagedIrbis.IrbisLink.Format">
            <summary>
            PFT file name (PFTNAME).
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisLink.FileName">
            <summary>
            File name (FILENAME).
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisLink.Key">
            <summary>
            Search key (KEY).
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisLink.Parameters">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisStopWords">
            <summary>
            STW file handling.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedIrbis.IrbisStopWords"/> class.
            </summary>
            <param name="fileName">The name.</param>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.FromServer(ManagedIrbis.IrbisConnection)">
            <summary>
            Load stopword list from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.FromServer(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Load stopword list from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.IsStopWord(System.String)">
            <summary>
            Is given word is stopword?
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ParseLines(System.String,System.String[])">
            <summary>
            Parse array of plain text lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ParseText(System.String,System.String)">
            <summary>
            Parse plain text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ParseFile(System.String)">
            <summary>
            Parse the text file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ToLines">
            <summary>
            Convert <see cref="T:ManagedIrbis.IrbisStopWords"/> to array
            of text lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisStopWords.ToText">
            <summary>
            Convert <see cref="T:ManagedIrbis.IrbisStopWords"/> to plain text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisStopWords.FileName">
            <summary>
            File name (for identification only).
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisText">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisText.IrbisDelimiter">
            <summary>
            Irbis line delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisText.StandardDelimiter">
            <summary>
            Standard Windows line delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisText.WindowsDelimiter">
            <summary>
            Standard Windows line delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisText.CleanupText(System.String)">
            <summary>
            Cleanup the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisText.IrbisToWindows(System.String)">
            <summary>
            Convert IRBIS line endings to standard.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisText.SplitIrbisToLines(System.String)">
            <summary>
            Split IRBIS-delimited text to lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisText.ToLower(System.String)">
            <summary>
            Convert text to lower case.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisText.ToUpper(System.String)">
            <summary>
            Convert text to upper case.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisText.WindowsToIrbis(System.String)">
            <summary>
            Convert standard line endings to IRBIS.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisTreeFile">
            <summary>
            TRE files handling
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisTreeFile.Indent">
            <summary>
            Tabulation
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.CountIndent(System.String)">
            <summary>
            Determines indent level of the string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.AddRoot(System.String)">
            <summary>
            Add root item.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.ParseStream(System.IO.TextReader)">
            <summary>
            Parse specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.ReadLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Read local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Save(System.IO.TextWriter)">
            <summary>
            Save to text stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.SaveToLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Save to local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.ToMenu">
            <summary>
            Convert tree to menu.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Walk(System.Action{ManagedIrbis.IrbisTreeFile.Item})">
            <summary>
            Walk over the tree.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Roots">
            <summary>
            Root items.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisTreeFile.Item">
            <summary>
            Tree item
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.AddChild(System.String)">
            <summary>
            Add child.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.SetDelimiter(System.String)">
            <summary>
            Set the delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.SetValue(System.String)">
            <summary>
            Set the value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.ToMenu">
            <summary>
            Convert to array of menu items.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.Walk(System.Action{ManagedIrbis.IrbisTreeFile.Item})">
            <summary>
            Walk over the tree.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.IrbisTreeFile.Item.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Children">
            <summary>
            Children.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Suffix">
            <summary>
            Suffix.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisTreeFile.Item.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.CommandFactory">
            <summary>
            Command factory.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetActualizeRecordCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ActualizeRecordCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetConnectCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ConnectCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetCreateDatabaseCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetCreateDictionaryCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.CreateDictionaryCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDatabaseInfoCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.DatabaseInfoCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDatabaseStatCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDefaultFactory(ManagedIrbis.IrbisConnection)">
            <summary>
            Get default <see cref="T:ManagedIrbis.Infrastructure.CommandFactory"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDeleteDatabaseCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.DeleteDatabaseCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetDisconnectCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.DisconnectCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetFormatCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.FormatCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetGblCommand(ManagedIrbis.Gbl.GblSettings)">
            <summary>
            Get GblCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetGblVirtualCommand">
            <summary>
            Get GblVirtualCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetListFilesCommand">
            <summary>
            Get ListFilesCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetListProcessCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ListProcessesCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetListUsersCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ListUsersCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetMaxMfnCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.MaxMfnCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetNopCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.NopCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetPrintTableCommand">
            <summary>
            Get PrintTableCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadBinaryFileCommand">
            <summary>
            Get ReadBinaryFileCommand();
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadFileCommand">
            <summary>
            Get ReadFileCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadPostingsCommand">
            <summary>
            Get ReadPostingsCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadRawRecordCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ReadRawRecordCommand"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadRecordCommand">
            <summary>
            Get ReadRecordCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReadTermsCommand">
            <summary>
            Get ReadTermsCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReloadDictionaryCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ReloadDictionaryCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetReloadMasterFileCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ReloadMasterFileCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetRestartServerCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.RestartServerCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetSearchCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.SearchCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetSearchRawCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.SearchRawCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetSearchReadCommand">
            <summary>
            Get SearchReadCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetServerStatCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ServerStatCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetServerVersionCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.ServerVersionCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetTruncateDatabaseCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.TruncateDatabaseCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUniversalCommand(System.String,System.Object[])">
            <summary>
            Get UniversalCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUniversalTextCommand(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Get UniversalTextCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUnlockDatabaseCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.UnlockDatabaseCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUnlockRecordsCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.UnlockRecordsCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUpdateIniFileCommand">
            <summary>
            Get <see cref="T:ManagedIrbis.Infrastructure.Commands.UpdateIniFileCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetUpdateUserListCommand">
            <summary>
            Get UpdateUserListCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetWriteFileCommand">
            <summary>
            Get WriteFileCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetWriteRecordCommand">
            <summary>
            Get WriteRecordCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.GetWriteRecordsCommand">
            <summary>
            Get WriteRecordsCommand.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.CommandFactory.SetSuperFactory(System.Func{ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.CommandFactory})">
            <summary>
            Set Super Factory.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.CommandFactory.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand">
            <summary>
            Database stat.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.Definition">
            <summary>
            Client query definition.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DatabaseStatCommand.Result">
            <summary>
            Result of the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.DynamicCommand">
            <summary>
            Dynamic command. All actions configured
            during runtime.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseGoodReturnCodes">
            <summary>
            Basic implementation of <see cref="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.GoodReturnCodes"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseCreateQuery">
            <summary>
            Basic implementation of <see cref="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CreateQuery"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseCheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Basic implementation of <see cref="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseExecute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Basic implementation of <see cref="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.BaseVerify(System.Boolean)">
            <summary>
            Basic implementation of <see cref="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.Verify(System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.DynamicCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.GoodReturnCodesHandler">
            <summary>
            Handle return codes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CreateQueryHandler">
            <summary>
            Create query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.CheckResponseHandler">
            <summary>
            Check server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.ExecuteHandler">
            <summary>
            Execute command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.VerifyHandler">
            <summary>
            Verify command settings.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.DynamicCommand.GoodReturnCodes">
            <inheritdoc cref="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.GoodReturnCodes"/>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.GblCommand">
            <summary>
            Global correction.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Gbl.GblSettings)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.FileName">
            <summary>
            Server file name for GBL.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.Actualize">
            <summary>
            Update index?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.FormalControl">
            <summary>
            Apply formal check?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.AutoIn">
            <summary>
            Execute autoin.gbl?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.SearchExpression">
            <summary>
            Search expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.FirstRecord">
            <summary>
            First record number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.NumberOfRecords">
            <summary>
            Number of records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.MfnList">
            <summary>
            List of MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.Statements">
            <summary>
            Statements.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand">
            <summary>
            Global correction for virtual record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.FileName">
            <summary>
            Server file name for GBL.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Actualize">
            <summary>
            Update index?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Statements">
            <summary>
            Statements.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Record">
            <summary>
            Record for correction.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.GblVirtualCommand.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.PrintTableCommand">
            <summary>
            Build table on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.Definition">
            <summary>
            Table definition.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.PrintTableCommand.Result">
            <summary>
            Result of the command execution.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.SearchReadCommand">
            <summary>
            Search and read records from IRBIS-server.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.SearchCommand">
            <summary>
            Search records on IRBIS-server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.ApplyParameters(ManagedIrbis.Search.SearchParameters)">
            <summary>
            Apply <see cref="T:ManagedIrbis.Search.SearchParameters"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.Clone">
            <summary>
            Clone the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.GatherParameters">
            <summary>
            Gather <see cref="T:ManagedIrbis.Search.SearchParameters"/>
            from the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.FirstRecord">
            <summary>
            First record offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.FormatSpecification">
            <summary>
            Format specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.NumberOfRecords">
            <summary>
            Number of records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.SearchExpression">
            <summary>
            Search query expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.SequentialSpecification">
            <summary>
            Specification of sequential search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.UtfFormat">
            <summary>
            Use UTF8 for <see cref="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.FormatSpecification"/>?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.Found">
            <summary>
            Found records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchCommand.FoundCount">
            <summary>
            Count of found records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.UseReadInsteadOfFormat">
            <summary>
            Use Read command instead.
            </summary>
            <remarks>
            Дело в том, что методу SearchRead ИРБИС-сервер
            частенько возвращает «немодифицируемые» записи
            (он банально неправильно проставляет флаги
            и версию записи, а потом саботирует сохранение
            изменений в них). При считывании записи методом
            ReadRecord приходят гарантировано «модифицируемые»
            записи.
            (из переписки с пользователями)
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.FormatSpecification">
            <summary>
            Format specification (always ALL).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.SearchReadCommand.Records">
            <summary>
            Read records.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand">
            <summary>
            Update user list on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UpdateUserListCommand.UserList">
            <summary>
            User list to update.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ConnectionFactory">
            <summary>
            Connection factory.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ConnectionFactory.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ConnectionFactory.GetConnection">
            <summary>
            Get <see cref="T:ManagedIrbis.IrbisConnection"/>
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ConnectionFactory.SetDefaultFactory(ManagedIrbis.Infrastructure.ConnectionFactory)">
            <summary>
            Set default factory.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ConnectionFactory.Default">
            <summary>
            Default factory.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket">
            <summary>
            Fake client socket for off-site debugging.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.FakeClientSocket.StoragePath">
            <summary>
            Path to store queries and responses.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket">
            <summary>
            Logging socket for debug purposes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractClientSocket,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.SetCounter(System.Int32)">
            <summary>
            Set start value for packet counter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.Setup(System.String,System.Boolean)">
            <summary>
            Do some setup before using.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.LoggingClientSocket.DebugPath">
            <summary>
            Path to store debug data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket">
            <summary>
            Socket for Web CGI mode.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.RequestBoundaryMarker">
            <summary>
            Request boundary marker.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.#ctor(ManagedIrbis.IrbisConnection,System.Net.IPAddress)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.ServerAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.HttpClientSocket.ServerPort">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket">
            <summary>
            Retry on network error.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.AbstractClientSocket,AM.RetryManager)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.DelayInterval">
            <summary>
            Delay between sequent attempts.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Sockets.RetryClientSocket.RetryManager">
            <summary>
            Retry manager.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket">
            <summary>
            Client socket that minimizes memory reallocation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket.AbortRequest">
            <summary>
            Abort the request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Sockets.SmartClientSocket.ExecuteRequest(System.Byte[])">
            <summary>
            Send request to server and receive answer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.LanguageFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.Clear">
            <summary>
            Clear the dictionary.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.GetTranslation(System.String)">
            <summary>
            Get translation for the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.ReadFrom(System.IO.TextReader)">
            <summary>
            Read the dictionary from the <see cref="T:System.IO.TextReader"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.ReadLocalFile(System.String)">
            <summary>
            Read local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.WriteTo(System.IO.TextWriter)">
            <summary>
            Write the dictionary to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.WriteLocalFile(System.String)">
            <summary>
            Write the dictionary to the file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.LanguageFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.LanguageFile.Name">
            <summary>
            Name of the file.
            </summary>
        </member>
        <member name="T:ManagedIrbis.LocalCatalogManager">
            <summary>
            Creates, copies, removes local catalogs.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalCatalogManager.#ctor(System.String,AM.Text.Output.AbstractOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalCatalogManager.BackupDatabase(System.String,System.String)">
            <summary>
            Backup catalog database to the given path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalCatalogManager.CreateCatalog(System.String,System.String)">
            <summary>
            Create database from the blank.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalCatalogManager.ReplicateCatalog(System.String,System.String)">
            <summary>
            Replicate catalog
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalCatalogManager.RestoreDatabase(System.String,System.String)">
            <summary>
            Restore catalog database from the given path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.LocalCatalogManager.Output">
            <summary>
            Text output.
            </summary>
        </member>
        <member name="P:ManagedIrbis.LocalCatalogManager.RootPath">
            <summary>
            Root path for catalogs (DATAI folder).
            </summary>
        </member>
        <member name="T:ManagedIrbis.LocalizationManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.LocalizationManager.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalizationManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalizationManager.GetLanguageFile(System.String)">
            <summary>
            Get <see cref="T:ManagedIrbis.LanguageFile"/> for given code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalizationManager.ListAvailableLanguages">
            <summary>
            List available languages.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalizationManager.Translate(System.String)">
            <summary>
            Translate the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.LocalizationManager.Translate(System.String,System.String)">
            <summary>
            Translate the text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.LocalizationManager.CurrentLanguage">
            <summary>
            Current language code.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineInfo">
            <summary>
            Информация о журнале в целом.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Magazines.MagazineInfo.MagazineKindCode">
            <summary>
            Code for magazine kind.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Magazines.MagazineInfo.NewspaperKindCode">
            <summary>
            Code for newspaper kind.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineInfo.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Index">
            <summary>
            Код документа в базе. Поле 903.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Title">
            <summary>
            Заглавие. Поле 200^a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.SubTitle">
            <summary>
            Подзаголовочные сведения.
            Поле 200^e.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.SeriesNumber">
            <summary>
            Обозначение и выпуск серии.
            Поле 923^1.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.SeriesTitle">
            <summary>
            Заголовок серии.
            Поле 923^i.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.ExtendedTitle">
            <summary>
            Расширенное заглавие. 
            Включает заголовок выпуск и заголовок серии.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.MagazineType">
            <summary>
            Тип издания. Поле 110^t
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.MagazineKind">
            <summary>
            Вид издания. Поле 110^b
            </summary>
            <remarks>
            Журнал = 'a'
            Газета = 'c'
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Periodicity">
            <summary>
            Периодичность (число). Поле 110^x
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Cumulation">
            <summary>
            Кумуляция. Поле 909
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.Mfn">
            <summary>
            MFN записи журнала.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.IsNewspaper">
            <summary>
            Is newspapaper?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineManager">
            <summary>
            Работа с периодикой.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Magazines.MagazineManager.Newspaper">
            <summary>
            Вид документа – сводное описание газеты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Magazines.MagazineManager.Magazine">
            <summary>
            Вид документа – сводное описание журнала.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetAllMagazines">
            <summary>
            Получение перечня всех журналов из базы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetMagazine(ManagedIrbis.Magazines.MagazineIssueInfo)">
            <summary>
            Получение журнала по его выпуску.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetIssue(ManagedIrbis.Magazines.MagazineArticleInfo)">
            <summary>
            Получение выпуска журнала по статье из этого выпуска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetIssues(ManagedIrbis.Magazines.MagazineInfo)">
            <summary>
            Получение списка выпусков данного журнала.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.GetArticles(ManagedIrbis.Magazines.MagazineIssueInfo)">
            <summary>
            Получение списка статей из выпуска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineManager.CreateMagazine(ManagedIrbis.Magazines.MagazineInfo)">
            <summary>
            Создание журнала в базе по описанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineManager.Connection">
            <summary>
            Клиент для связи с сервером.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuConverter">
            <summary>
            Converts the <see cref="T:ManagedIrbis.Menus.MenuFile"/> to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The
            <see cref="T:Newtonsoft.Json.JsonWriter" />
            to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.
            </param>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The
            <see cref="T:Newtonsoft.Json.JsonReader" />
            to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value
            of object being read.</param>
            <param name="serializer">The calling serializer.
            </param>
            <returns>The object value.</returns>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert
            the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns><c>true</c> if this instance can convert
            the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuEntry">
            <summary>
            MNU file entry. Represents two lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuEntry.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuEntry.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuEntry.ShouldSerializeComment">
            <summary>
            Should JSON serialize the comment?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuEntry.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuEntry.Code">
            <summary>
            First line -- the code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuEntry.Comment">
            <summary>
            Second line -- the comment.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuEntry.OtherEntry">
            <summary>
            Other menu entry.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuSort">
            <summary>
            Menu sorting.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Menus.MenuSort.None">
            <summary>
            No sorting.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Menus.MenuSort.ByCode">
            <summary>
            Sort by code.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Menus.MenuSort.ByComment">
            <summary>
            Sort by comment.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuSpecification">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuSpecification.FromFileSpecification(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Convert <see cref="T:ManagedIrbis.Infrastructure.FileSpecification"/> to menu specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuSpecification.Parse(System.String)">
            <summary>
            Parse the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuSpecification.ToFileSpecification">
            <summary>
            Convert menu specification to <see cref="T:ManagedIrbis.Infrastructure.FileSpecification"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuSpecification.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuSpecification.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuSpecification.Verify(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuSpecification.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuSpecification.FileName">
            <summary>
            File name (with extension).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuSpecification.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuSpecification.Path">
            <summary>
            Path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuSpecification.SortMode">
            <summary>
            Sort mode.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Monitoring.DatabaseData">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Monitoring.DatabaseData.Name">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Monitoring.DatabaseData.DeletedRecords">
            <summary>
            Number of deleted records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Monitoring.DatabaseData.LockedRecords">
            <summary>
            Number of locked records.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Monitoring.MonitoringData">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Monitoring.MonitoringData.Moment">
            <summary>
            Moment of time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Monitoring.MonitoringData.Clients">
            <summary>
            Number of running clients.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Monitoring.MonitoringData.Commands">
            <summary>
            Command count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Monitoring.MonitoringData.Databases">
            <summary>
            Data for databases.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Monitoring.MonitoringSink">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Monitoring.MonitoringSink.WriteData(ManagedIrbis.Monitoring.MonitoringData)">
            <summary>
            Write monitoring data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Monitoring.NullMonitoringSink">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Monitoring.NullMonitoringSink.WriteData(ManagedIrbis.Monitoring.MonitoringData)">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Monitoring.TextMonitoringSink">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Monitoring.TextMonitoringSink.#ctor(System.IO.TextWriter)">
            <summary>
            Constructor.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ManagedIrbis.Monitoring.TextMonitoringSink.WriteData(ManagedIrbis.Monitoring.MonitoringData)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Monitoring.TextMonitoringSink.Writer">
            <summary>
            Text writer.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Morphology.SynonymEngine">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.SynonymEngine.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.SynonymEngine.GetSynonyms(System.String)">
            <summary>
            Get synonyms for the word.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.SynonymEngine.GetSynonyms(ManagedIrbis.Morphology.SynonymEntry,System.String)">
            <summary>
            Get synonyms for the word.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.SynonymEngine.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.SynonymEngine.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.SynonymEngine.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Morphology.SynonymEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.SynonymEntry.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Parse the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.SynonymEntry.Encode">
            <summary>
            Encode the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.SynonymEntry.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Morphology.SynonymEntry.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Morphology.SynonymEntry.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Morphology.SynonymEntry.Mfn">
            <summary>
            Record MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.SynonymEntry.MainWord">
            <summary>
            Main word. Field 10.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.SynonymEntry.Synonyms">
            <summary>
            Synonyms. Field 11.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.SynonymEntry.Language">
            <summary>
            Language code. Field 12.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.SynonymEntry.Worksheet">
            <summary>
            Worksheet code. Field 920.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Morphology.WordShortener">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Morphology.WordShortener.Gost">
            <summary>
            Рекомендуемые сокращения по ГОСТ 7.0.12-2011.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Morphology.WordShortener.StandardFullEndings">
            <summary>
            Standard endings to cut off completely.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.WordShortener.ShortenByGost(System.String)">
            <summary>
            Shorten the word by gost.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.WordShortener.ShortenByStandardFullEnding(System.String)">
            <summary>
            Shorten the word by standard full ending.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.AliasCommand">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mx.MxCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxCommand.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxCommand.OnBeforeExecute">
            <summary>
            Raises <see cref="E:ManagedIrbis.Mx.MxCommand.BeforeExecute"/> event.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxCommand.OnAfterExecute">
            <summary>
            Raises <see cref="E:ManagedIrbis.Mx.MxCommand.AfterExecute"/> event.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxCommand.Initialize(ManagedIrbis.Mx.MxExecutive)">
            <summary>
            Initialize commands before using.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxCommand.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="E:ManagedIrbis.Mx.MxCommand.BeforeExecute">
            <summary>
            Fired before <see cref="M:ManagedIrbis.Mx.MxCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])"/>.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Mx.MxCommand.AfterExecute">
            <summary>
            Fired after <see cref="M:ManagedIrbis.Mx.MxCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxCommand.Name">
            <summary>
            Main name of the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.AliasCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.AliasCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.ConnectCommand">
            <summary>
            Connect to the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.ConnectCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.ConnectCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.CsCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.CsCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.CsCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.CsFileCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.CsFileCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.CsFileCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.DisconnectCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.DisconnectCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.DisconnectCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.ExitCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.ExitCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.ExitCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.FormatCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.FormatCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.FormatCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.LimitCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.LimitCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.LimitCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.NopCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.NopCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.NopCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.PrintCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.PrintCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.PrintCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.SearchCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.SearchCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.SearchCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.SortCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.SortCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.SortCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.Commands.StoreCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.StoreCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.Commands.StoreCommand.Execute(ManagedIrbis.Mx.MxExecutive,ManagedIrbis.Mx.MxArgument[])">
            <inheritdoc/>
        </member>
        <member name="T:ManagedIrbis.Mx.MxAlias">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxAlias.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxAlias.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mx.MxArgument">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxArgument.Text">
            <summary>
            Text of the argument.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mx.MxExecutive">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.Banner">
            <summary>
            Print banner.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.ExecuteInitScript">
            <summary>
            Execute initialization script.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.ExecuteFile(System.String)">
            <summary>
            Execute script file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.ExecuteLine(System.String)">
            <summary>
            Execute line of the script.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.Repl">
            <summary>
            REPL
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.Write(System.String,System.Object[])">
            <summary>
            Write to console.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.WriteLine(System.String,System.Object[])">
            <summary>
            Write to console.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.WriteLine(System.Int32,System.String,System.Object[])">
            <summary>
            Write to console.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mx.MxExecutive.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Mx.MxExecutive.Client">
            <summary>
            Client.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxExecutive.Commands">
            <summary>
            Commands.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxExecutive.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxExecutive.Limit">
            <summary>
            Search limit.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxExecutive.Records">
            <summary>
            Records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxExecutive.StopFlag">
            <summary>
            Stop repl.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxExecutive.VerbosityLevel">
            <summary>
            Verbosity level.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxExecutive.Version">
            <summary>
            Get version of the executive.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mx.MxRecord">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxRecord.Number">
            <summary>
            Sequential number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxRecord.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxRecord.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxRecord.Index">
            <summary>
            Record index (field 903, if any).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxRecord.Record">
            <summary>
            Record itself.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxRecord.Description">
            <summary>
            Bibliographic description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxRecord.Order">
            <summary>
            For sorting.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mx.MxRecord.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mx.MxUtility">
            <summary>
            Utility methods for MX interpreter.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Opds.OpdsCatalog">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.FormatError">
            <summary>
            Format error codes.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftA">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftCondition">
            <summary>
            Условие
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftBoolean">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftNode">
            <summary>
            AST item
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Check deserialization result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)">
            <summary>
            Deserialize AST.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.OnAfterExecution(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            After execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.OnBeforeExecution(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Before execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serialize AST.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.ShouldSerializeChildren">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/> property?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.ShouldSerializeText">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Text"/> property?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.SimplifyTypeName(System.String)">
            <summary>
            Simplify type name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.AcceptVisitor(ManagedIrbis.Pft.Infrastructure.Walking.PftVisitor)">
            <summary>
            Accept the visitor.
            </summary>
            <returns>
            <c>true</c> means "continue".
            </returns>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <summary>
            Compiles the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Собственно форматирование.
            Включает в себя результат
            форматирования всеми потомками.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetAffectedFields">
            <summary>
            Список полей, задействованных в форматировании
            данным элементом и всеми его потомками, включая
            косвенных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetDescendants``1">
            <summary>
            Получение списка потомков (как прямых,
            так и косвенных) определенного типа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetLeafs">
            <summary>
            Построение массива потомков-листьев 
            (т. е. не имеющих собственных потомков).
            </summary>
            <remarks>Если у узла нет потомков,
            он возвращает массив из одного элемента:
            самого себя.</remarks>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo">
            <summary>
            Get node info for debugger.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize">
            <summary>
            Оптимизация дерева потомков.
            На данный момент не реализована.
            </summary>
            <remarks>Если возвращает <c>null</c>,
            это означает, что данный узел и всех
            его потомков можно безболезненно удалить.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.SupportsMultithreading">
            <summary>
            Поддерживает ли многопоточность,
            т. е. может ли быть запущен одновременно
            с соседними элементами.
            </summary>
            <remarks>
            На данный момент многопоточность
            не поддерживается.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <summary>
            Формирование исходного текста по AST.
            Применяется, например, для красивой 
            распечатки программы на языке PFT.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="E:ManagedIrbis.Pft.Infrastructure.PftNode.BeforeExecution">
            <summary>
            Вызывается непосредственно перед выполнением.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Pft.Infrastructure.PftNode.AfterExecution">
            <summary>
            Вызывается непосредственно после выполнения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.Parent">
            <summary>
            Parent node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.Breakpoint">
            <summary>
            Breakpoint.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children">
            <summary>
            Список потомков. Может быть пустым.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.Column">
            <summary>
            Column number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.LineNumber">
            <summary>
            Номер строки, на которой в скрипте расположена
            соответствующая конструкция языка.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression">
            <summary>
            Whether the node is complex expression?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression">
            <summary>
            Whether the node is constant expression?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax">
            <summary>
            Node uses extended syntax?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.Help">
            <summary>
            Help for the node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection">
            <summary>
            Whether the node requires server connection to evaluate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBoolean.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBoolean.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBoolean.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftBoolean.Value">
            <summary>
            Boolean value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCondition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCondition.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCondition.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftA.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftA.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftNumeric">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumeric.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumeric.#ctor(System.Double)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumeric.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumeric.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNumeric.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAbs.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.InnerCondition">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAll.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftAny">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.InnerCondition">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAny.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.IsNumeric">
            <summary>
            Whether is numeric or text assignment.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.Name">
            <summary>
            Variable name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftAssignment.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftBang">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftBang.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank.IsBlank(System.String)">
            <summary>
            Is the string blank?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftBlank.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftBreak">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBreak.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBreak.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBreak.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBreak.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftBreak.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftBreak.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftC">
            <summary>
            Команда горизонтального позиционирования.
            Перемещает виртуальный курсор в n-ю позицию строки
            (табуляция в указанную позицию строки).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftC.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftC.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftC.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftC.NewPosition">
            <summary>
            Новая позиция курсора.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftCeil">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCeil.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCeil.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCeil.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCeil.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCeil.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCeil.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftCeil.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftCodeBlock">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCodeBlock.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCodeBlock.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCodeBlock.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftCodeBlock.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftCodeBlock.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftComma">
            <summary>
            Оператор "запятая".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftComma.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftComment">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftComment.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.DoNumericOperation(ManagedIrbis.Pft.Infrastructure.PftContext,System.Double,System.String,System.Double)">
            <summary>
            Do the operation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.DoStringOperation(ManagedIrbis.Pft.Infrastructure.PftContext,System.String,System.String,System.String)">
            <summary>
            Do the operation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.LeftOperand">
            <summary>
            Left operand.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.Operation">
            <summary>
            Operation.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.RightOperand">
            <summary>
            Right operand.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftComparison.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral">
            <summary>
            Определяет текст, который будет выведен только
            в случае присутствия в записи соответствующего
            ему поля/подполя. Если поле является повторяющимся,
            то текст будет выведен только один раз,
            независимо от количества экземпляров поля/подполя.
            Условные  литералы заключаются в двойные кавычки ("),
            например, "Заглавие: ".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.IsSuffix">
            <summary>
            Whether the literal is on right or on left hand?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral.Text">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Text"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.Condition">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.ElseBranch">
            <summary>
            Else branch.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.ThenBranch">
            <summary>
            Then branch.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalStatement.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.LeftOperand">
            <summary>
            Left operand.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.Operation">
            <summary>
            Operation.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.RightOperand">
            <summary>
            Right operand.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionAndOr.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.InnerCondition">
            <summary>
            Inner condition
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionNot.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.InnerCondition">
            <summary>
            Inner condition.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionParenthesis.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftD">
            <summary>
            Fake field reference.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftField">
            <summary>
            Base for field reference.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.Ast.PftField.NoSubField">
            <summary>
            No subfield specified.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Apply(ManagedIrbis.Pft.Infrastructure.FieldSpecification)">
            <summary>
            Apply the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Apply(ManagedIrbis.FieldReference)">
            <summary>
            Apply the reference.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.CanOutput(System.String)">
            <summary>
            Can output according given value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.EvaluateTagSpecification(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Evaluate tag specification (if any).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.GetAffectedFields">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetAffectedFields"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.GetValue(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.HaveRepeat(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Have value?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.IsFirstRepeat(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Is first repeat?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.IsLastRepeat(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Is last repeat?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.LimitText(System.String)">
            <summary>
            Limit text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.ToSpecification">
            <summary>
            Convert to <see cref="T:ManagedIrbis.Pft.Infrastructure.FieldSpecification"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.LeftHand">
            <summary>
            Left hand.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.RightHand">
            <summary>
            Right hand.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Command">
            <summary>
            Command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Embedded">
            <summary>
            Embedded.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Indent">
            <summary>
            Отступ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Offset">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Length">
            <summary>
            Длина.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.SubField">
            <summary>
            Subfield.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.TagSpecification">
            <summary>
            Tag specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.RepeatCount">
            <summary>
            Repeat count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.FieldRepeat">
            <summary>
            Field repeat specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.SubFieldRepeat">
            <summary>
            Subfield repeat specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.SubFieldSpecification">
            <summary>
            Subfield specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftField.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftD.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftD.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftD.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftD.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftEat">
            <summary>
            Eat the output.
            </summary>
            <example>
            <code>
            'Hello,', [[['again,']]] 'World'
            </code>
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEat.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEat.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEat.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEat.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftEat.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftEmpty">
            <summary>
            Whether the string is empty?
            </summary>
            <example>
            <code>
            if empty('Hello') then 'Empty' else 'Not empty' fi/
            if empty(v500) then 'Empty' else 'Not empty' fi/
            </code>
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEmpty.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEmpty.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEmpty.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEmpty.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEmpty.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftEmpty.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftEmpty.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftF">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Argument1">
            <summary>
            First argument value.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Argument2">
            <summary>
            Second argument value.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Argument3">
            <summary>
            Third argument value.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftF.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftF2">
            <summary>
            Форматирование по принципам .NET Framework
            </summary>
            <example>
            <code>
            f2(3+0.14,'E4')
            </code>
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.FormatNumber(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.Double,System.String)">
            <summary>
            Format the number according specified format.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.Number">
            <summary>
            Number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftF2.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFalse.Value">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.Ast.PftBoolean.Value"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.Expression">
            <summary>
            Expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFieldAssignment.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst">
            <summary>
            Выдаёт номер первого повторения поля,
            для которого выполняется заданное условие.
            Если условие не выполняется, выдаёт 0.
            </summary>
            <example>
            f(first(v910^d='ЧЗ'),0,0)
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.InnerCondition">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFirst.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftFloor">
            <summary>
            
            </summary>
            <example>
            <code>
            f(floor(1.2),0,0)
            </code>
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFloor.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFloor.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFloor.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFloor.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFloor.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFloor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFloor.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftFor">
            <summary>
            For loop.
            </summary>
            <example>
            for $x=0; $x &lt; 10; $x = $x+1;
            do
                $x, ') ',
                'Прикольно же!'
                #
            end
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Initialization">
            <summary>
            Initialization.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Condition">
            <summary>
            Condition.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Loop">
            <summary>
            Loop statements.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Body">
            <summary>
            Body.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFor.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach">
            <summary>
            foreach $x in (v692^g,/)
            do
                $x, #
                if $x:'2010' then break fi
            end
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.Variable">
            <summary>
            Variable reference.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.Sequence">
            <summary>
            Sequence.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.Body">
            <summary>
            Body.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftForEach.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftFrac">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrac.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrac.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrac.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrac.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrac.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom">
            <summary>
            
            </summary>
            <example>
            <code>
            from $x in (v692^b/)
            where $x:'2008'
            select 'Item: ', $x,
            order $x,
            end
            </code>
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Variable">
            <summary>
            Variable reference.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Source">
            <summary>
            Source.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Where">
            <summary>
            Where clause.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Select">
            <summary>
            Select clause.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Order">
            <summary>
            Order clause.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFrom.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.Name">
            <summary>
            Function name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.Arguments">
            <summary>
            Array of arguments.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftFunctionCall.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftHave">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.Variable">
            <summary>
            Variable reference.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.Identifier">
            <summary>
            Function or procedure name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftHave.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.Clone">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.Program">
            <summary>
            Parsed program of the included file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftInclude.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftL">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftL.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftL.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftL.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftL.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftL.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftL.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftLast">
            <summary>
            Выдаёт номер последнего повторения поля,
            для которого выполняется заданное условие.
            Если условие не выполняется, выдаёт 0.
            </summary>
            <example>
            f(last(v910^d='ЧЗ'),0,0)
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.InnerCondition">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftLast.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal">
             <summary>
             Задаёт локальный контекст для переменных.
             </summary>
             <example>
             <code>
             $x = 'outer';
             local $x, $y,
             do
               $x = 'inner';
               $y = 'another';
               $x # $y #
             end
            
             $x
             </code>
             </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.Names">
            <summary>
            List of names.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftLocal.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftMinus">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMinus.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMinus.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMinus.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMinus.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMinus.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMinus.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftNested">
            <summary>
            Временное переключение контекста
            на альтернативный (проще говоря,
            на другую запись).
            </summary>
            <example>
            <code>
            v200^a, " : "v200^e, " / "v200^f
            #
            {
               /* Выводятся значения полей от другой записи
               v200^a, " : "v200^e, " / "v200^f
            }
            </code>
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNested.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNested.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNested.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNested.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNested.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftNl">
            <summary>
            Безусловный перевод строки
            (используется "родной" для среды
            исполнения перевод строки).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNl.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.DoOperation(ManagedIrbis.Pft.Infrastructure.PftContext,System.Double,System.String,System.Double)">
            <summary>
            Do the operation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.LeftOperand">
            <summary>
            Left operand.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.Operation">
            <summary>
            Operation.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.RightOperand">
            <summary>
            Right operand.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericExpression.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.#ctor(System.Double)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftNumericLiteral.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftP">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.LimitText(ManagedIrbis.Pft.Infrastructure.FieldSpecification,System.String)">
            <summary>
            Limit text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.HaveGlobal(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.FieldSpecification,System.Int32,System.Int32)">
            <summary>
            Have the specified global repeat?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.HaveRepeat(ManagedIrbis.MarcRecord,System.String,System.Char,System.Int32)">
            <summary>
            Have the specified field repeat?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftP.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftP.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftP.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor">
            <summary>
            Parallel for loop.
            </summary>
            <example>
            parallel for $x=0; $x &lt; 10; $x = $x+1;
            do
                $x, ') ',
                'Прикольно же!'
                #
            end
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Initialization">
            <summary>
            Initialization.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Condition">
            <summary>
            Condition.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Loop">
            <summary>
            Loop statements.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Body">
            <summary>
            Body.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach">
            <summary>
            parallel foreach $x in (v692^g,/)
            do
                $x, #
                if $x:'2010' then break fi
            end
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.Variable">
            <summary>
            Variable reference.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.Sequence">
            <summary>
            Sequence.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.Body">
            <summary>
            Body.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelGroup.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelGroup.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelGroup.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelGroup.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelGroup.ThrowOnEmpty">
            <summary>
            Throw an exception when an empty group is detected?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith.Clone">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith.Variable">
            <summary>
            Variable reference.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith.Fields">
            <summary>
            Fields.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith.ExtendedSyntax">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith.Children">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftPow">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.X">
            <summary>
            X.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.Y">
            <summary>
            Y.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftPow.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.Procedure">
            <summary>
            Procedure itself.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftProcedureDefinition.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftRef">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftRef.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftRound">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRound.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRound.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRound.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftRound.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftRsum.Name">
            <summary>
            Name of the function.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftSemicolon">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSemicolon.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSemicolon.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSemicolon.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSemicolon.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSemicolon.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSemicolon.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftSemicolon.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftSign">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSign.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSign.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSign.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSign.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSign.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSign.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftSign.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.Ast.PftSign.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftTrue.Value">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.Ast.PftBoolean.Value"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftTrunc">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrunc.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrunc.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrunc.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrunc.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrunc.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftTrunc.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftTrunc.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftV">
            <summary>
            Ссылка на поле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftV.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftV.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftV.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftV.GetCount(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Число повторений _поля_ в записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftV.IsLastRepeat(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.IsLastRepeat(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftV.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftG">
            <summary>
            Global variable reference
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.GetCount(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Число повторений _поля_ в записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.GetValue(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.HaveRepeat(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Have value?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.IsLastRepeat(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.IsLastRepeat(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.GetAffectedFields">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetAffectedFields"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftG.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftG.Number">
            <summary>
            Number of the variable.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup">
            <summary>
            Группа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.ThrowOnEmpty">
            <summary>
            Throw an exception when empty group detected?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftGroup.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftHash">
            <summary>
            Команда # выполняет те же действия, что и /,
            но переход на новую строку является безусловным.
            Можно использовать комбинацию /# для создания
            одной (и только одной) пустой строки.
            Комбинация ## может привести к созданию одной
            или двух пустых строк в зависимости от того,
            была ли пустой текущая строка перед выполнением
            первой команды #.
            Использование команды # может вызвать затруднение
            в тех случаях, когда выбираемое поле оказывается
            пустым. Эта ситуация хорошо иллюстрируется
            на следующем примере:
            
            Пример:
            /#V10/#V20/#V30 ...
            
            Если все поля присутствуют в документе,
            то в результате поля 10, 20, и 30 будут
            располагаться с начала строк и каждому будет
            предшествовать одна пустая строка.Однако,
            если поле 20 в документе отсутствует,
            то между 10 и 30 полями будут вставлены
            две пустые строки. Это может оказаться
            нежелательным, если действительно требуется,
            чтобы между полями была пропущена именно
            одна пустая строка, независимо от наличия
            или отсутствия некоторых полей.
            Таким образом, приведенный выше формат
            не приведет к желаемому результату.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHash.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHash.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHash.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHash.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHash.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftHash.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftHash.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftHash.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn">
            <summary>
            Для вывода номера записи в файле документов служит
            команда MFN, формат которой:
            
            MFN или MFN(d),
            
            где d - количество выводимых на экран цифр.
            Если параметр(d) опущен, то по умолчанию
            предполагается 6 цифр.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.DefaultWidth">
            <summary>
            Default width.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftMfn.Width">
            <summary>
            Width of the output.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftMode">
            <summary>
            Переключение режима вывода полей/подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.ParseText(System.String)">
            <summary>
            Parse specified text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.OutputMode">
            <summary>
            Output mode.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftMode.UpperMode">
            <summary>
            Upper-case mode.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftN">
            <summary>
            Fake field reference.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftN.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftN.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftN.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftN.CanOutput(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.Ast.PftField.CanOutput(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftN.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftOrphan">
            <summary>
            Fake field reference.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftOrphan.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftOrphan.GetAffectedFields">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetAffectedFields"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftOrphan.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftOrphan.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftOrphan.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftOrphan.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent">
            <summary>
            Команда % подавляет все последовательно
            расположенные пустые строки(если они имеются)
            между текущей строкой и последней непустой строкой.
            Таким образом, формат
            
            %##V10%##V20%##V30 ...
            
            приведет к созданию одной и только одной пустой
            строки между каждым полем, независимо от их наличия
            или отсутствия в документе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftPercent.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral">
            <summary>
            Определяет текст, который будет выведен только
            в случае присутствия в записи соответствующего
            ему поля или подполя. Однако, если поле
            повторяющееся, литерал будет выводиться
            для каждого экземпляра поля/подполя.
            Повторяющиеся литералы заключаются
            в вертикальные черты (|), например, |Автор: |.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.IsPrefix">
            <summary>
            Prefix or postfix?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.Plus">
            <summary>
            Plus?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral.Text">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Text"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftS">
            <summary>
            Функция S возвращает текст, полученный 
            в результате вычисления ее аргумента.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftS.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftS.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftS.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftS.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftS.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftS.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftS.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftSlash">
            <summary>
            Команда / приводит к размещению последующих данных
            с начала следующей строки.
            Однако подряд расположенные команды /, 
            хотя и являются синтаксически правильными,
            но имеют тот же смысл, что и одна команда /,
            т.е.команда / никогда не создает пустых строк.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSlash.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSlash.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSlash.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSlash.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSlash.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftSlash.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftSlash.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral">
            <summary>
            Unconditional literal.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.Text">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Text"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral.ThrowOnEmpty">
            <summary>
            Throw an exception when empty literal detected.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor">
            <summary>
            Unifor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.Optimize">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Optimize"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftUnifor.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftVal">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVal.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVal.#ctor(System.Double)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVal.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVal.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVal.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVal.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVal.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.DoVariable(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String,ManagedIrbis.Pft.Infrastructure.IndexSpecification,System.Char)">
            <summary>
            Do the variable.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.Name">
            <summary>
            Name of the variable.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.SubFieldCode">
            <summary>
            Subfield code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftVariableReference.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.PrepareText(System.String)">
            <summary>
            Prepare text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftVerbatim.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile">
            <summary>
            While loop.
            </summary>
            <example>
            $x=0;
            while $x &lt; 10
            do
                $x, ') ',
                'Прикольно же!'
                #
                $x=$x+1;
            end
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.Condition">
            <summary>
            Condition.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.Body">
            <summary>
            Body.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWhile.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftWith">
            <summary>
            
            </summary>
            <example>
            <code>
            with $x in v692, v910
            do
                $x = '^zNewSubField', $x;
            end
            </code>
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.GetNodeInfo">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.GetNodeInfo"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.Variable">
            <summary>
            Variable reference.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.Fields">
            <summary>
            Fields.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.Body">
            <summary>
            Body.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.ExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.Children">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.Children"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftWith.ComplexExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ComplexExpression"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Ast.PftX">
            <summary>
            Команда горизонтального позиционирования.
            Вставляет n пробелов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.CompareNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Compile(ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.PrettyPrint(ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Ast.PftX.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftX.ConstantExpression">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.ConstantExpression"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftX.RequiresConnection">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.PftNode.RequiresConnection"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Ast.PftX.Shift">
            <summary>
            Количество добавляемых пробелов.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.CompilerUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.CompilerUtility.BooleanToText(System.Boolean)">
            <summary>
            Convert boolean to string according C# rules.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.CompilerUtility.Escape(System.String)">
            <summary>
            Escape the text according C# rules.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.CompilerUtility.GetEntryPoint(System.Reflection.Assembly)">
            <summary>
            Find entry point of the assembly.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.CompilerUtility.ShortenText(System.String)">
            <summary>
            Shorten the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.FieldDictionary.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.FieldInfo.#ctor(ManagedIrbis.Pft.Infrastructure.Ast.PftField,System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.FieldInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.NodeDictionary.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.NodeDictionary.Forward">
            <summary>
            Forward dictionary.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.NodeDictionary.Backward">
            <summary>
            Backward dictionary.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.NodeInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.NodeInfo.#ctor(System.Int32,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.NodeInfo.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.NodeInfo.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.NodeInfo.Node">
            <summary>
            Node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.NodeInfo.Id">
            <summary>
            Node identifier.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.NodeInfo.Ready">
            <summary>
            Ready?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.NodeStorage">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Walking.PftVisitor">
            <summary>
            Abstract AST visitor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Walking.PftVisitor.VisitNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Visit the node.
            </summary>
            <returns>
            <c>true</c> means "continue".
            </returns>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.NumberingVisitor.VisitNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.Walking.PftVisitor.VisitNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.NodeMethodPrefix">
            <summary>
            Prefix for node methods.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.CallNodeMethod(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Call method for the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.CallNodes(System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Call nodes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.CompileAction(System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Compile action method.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.CompileField(ManagedIrbis.Pft.Infrastructure.Ast.PftField)">
            <summary>
            Compile the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.CompileNodes(System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Compile nodes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.CompileProgram(ManagedIrbis.Pft.Infrastructure.PftProgram)">
            <summary>
            Compile the program.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.CompileToDll(AM.Text.Output.AbstractOutput,System.String)">
            <summary>
            Compile to DLL.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.DecreaseIndent">
            <summary>
            Decrease indent.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.EndClass(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.EndMethod(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            End method for the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.GetSourceCode">
            <summary>
            Get source code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.IncreaseIndent">
            <summary>
            Increase indent.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.MarkReady(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Mark the node as ready.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.RefNodeMethod(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Referenct method for the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.SetProvider(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Set the provider.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.StartClass">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.StartMethod(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Start method for the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Write(System.Char)">
            <inheritdoc cref="M:System.IO.TextWriter.Write(System.Char)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Write(System.Int32)">
            <inheritdoc cref="M:System.IO.TextWriter.Write(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Write(System.Double)">
            <inheritdoc cref="M:System.IO.TextWriter.Write(System.Double)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Write(System.String)">
            <inheritdoc cref="M:System.IO.TextWriter.Write(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Write(System.Object)">
            <inheritdoc cref="M:System.IO.TextWriter.Write(System.Object)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Write(System.String,System.Object[])">
            <inheritdoc cref="M:System.IO.TextWriter.Write(System.String,System.Object[])"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.WriteIndent">
            <summary>
            Write indentation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.WriteLine">
            <inheritdoc cref="M:System.IO.TextWriter.WriteLine"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.WriteLine(System.Char)">
            <inheritdoc cref="M:System.IO.TextWriter.WriteLine(System.Char)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.WriteLine(System.Int32)">
            <inheritdoc cref="M:System.IO.TextWriter.WriteLine(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.WriteLine(System.Double)">
            <inheritdoc cref="M:System.IO.TextWriter.WriteLine(System.Double)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.WriteLine(System.String)">
            <inheritdoc cref="M:System.IO.TextWriter.WriteLine(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.WriteLine(System.Object)">
            <inheritdoc cref="M:System.IO.TextWriter.WriteLine(System.Object)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.WriteLine(System.String,System.Object[])">
            <inheritdoc cref="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.LastNodeId">
            <summary>
            Last used node id.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Indent">
            <summary>
            Indentation level.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.OutputPath">
            <summary>
            Path to store compiled assemblies.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.KeepSource">
            <summary>
            Keep source.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Debug">
            <summary>
            Compile debug version?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.References">
            <summary>
            References.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompiler.Usings">
            <summary>
            Usings.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.PftCompilerException">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.PftException">
            <summary>
            Базовый класс для исключений, происходящих при
            разборе и исполнении PFT-скриптов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ManagedIrbis.Pft.PftException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.#ctor(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.CallDebugger">
            <summary>
            Call the debugger.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.CanOutput(ManagedIrbis.Pft.Infrastructure.FieldSpecification,System.String)">
            <summary>
            Can output according given value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.DebuggerHook(System.Int32)">
            <summary>
            Debugger hook.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.DoConditionalLiteral(System.String,ManagedIrbis.Pft.Infrastructure.FieldSpecification,System.Boolean)">
            <summary>
            Do the conditional literal.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.DoField(ManagedIrbis.Pft.Infrastructure.FieldSpecification,System.Action,System.Action)">
            <summary>
            Do field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.DoGlobal(System.Int32,ManagedIrbis.Pft.Infrastructure.FieldSpecification,System.Action,System.Action)">
            <summary>
            Do global variable.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.DoGroup(System.Action)">
            <summary>
            Do group.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.DoRepeatableLiteral(System.String,ManagedIrbis.Pft.Infrastructure.FieldSpecification,System.Boolean,System.Boolean)">
            <summary>
            Do the repeatable literal.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.Evaluate(System.Action)">
            <summary>
            Evaluate as string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.Goto(System.Int32)">
            <summary>
            Goto new position.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.HaveField(ManagedIrbis.Pft.Infrastructure.FieldSpecification)">
            <summary>
            Have the field?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.HaveOutput">
            <summary>
            Signal output.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.IsFirstRepeat(ManagedIrbis.Pft.Infrastructure.FieldSpecification)">
            <summary>
            First repeat?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.IsLastRepeat(ManagedIrbis.Pft.Infrastructure.FieldSpecification)">
            <summary>
            Last repeat?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.StartEvaluate">
            <summary>
            Start evaluate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.EndEvaluate(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            End evaluate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.Execute(ManagedIrbis.MarcRecord)">
            <summary>
            Execute the packet agains the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.CurrentField">
            <summary>
            Current field (if any).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.InGroup">
            <summary>
            In group?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Compiler.PftPacket.Breakpoints">
            <summary>
            Breakpoints.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftDebugger">
            <summary>
            Debugger for PFT.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftDebugger.#ctor(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftDebugger.Activate(ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs)">
            <summary>
            Activate the debugger.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftDebugger.CancelExecution(ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs)">
            <summary>
            Cancel script execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftDebugger.Deactivate(ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs)">
            <summary>
            Deactivate the debugger.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftDebugger.NextStep(ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs)">
            <summary>
            Goto next step.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftDebugger.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo">
            <summary>
            Node info.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo.#ctor(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo.Dump(AM.Text.Output.AbstractOutput,ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo,System.Int32)">
            <summary>
            Dump the node info (include children).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo.Children">
            <summary>
            Children.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo.Node">
            <summary>
            Node itself.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Diagnostics.PftNodeInfo.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.FieldSpecification">
            <summary>
            Field/subfield specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Compare(ManagedIrbis.Pft.Infrastructure.FieldSpecification,ManagedIrbis.Pft.Infrastructure.FieldSpecification)">
            <summary>
            Compare two specifications.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Deserialize(System.IO.BinaryReader)">
            <summary>
            Deserialize the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Parse(System.String)">
            <summary>
            Parse the specification from text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Parse(AM.Text.TextNavigator)">
            <summary>
            Parse the specification from navigator.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.ParseShort(System.String)">
            <summary>
            Parse short specification from text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.ParseShort(AM.Text.TextNavigator)">
            <summary>
            Parse short specification from navigator.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.ParseUnifor(System.String)">
            <summary>
            Parse specification for Unifor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.ParseUnifor(AM.Text.TextNavigator)">
            <summary>
            Parse short specification for Unifor from navigator.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serialize the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FieldSpecification.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Command">
            <summary>
            Command code (must be lowercase).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Embedded">
            <summary>
            Embedded field tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.FirstLine">
            <summary>
            Красная строка.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.ParagraphIndent">
            <summary>
            Общий абзацный отступ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Offset">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Length">
            <summary>
            Длина.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.FieldRepeat">
            <summary>
            Field repeat.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.SubField">
            <summary>
            Subfield.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.SubFieldRepeat">
            <summary>
            Subfield repeat.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.TagSpecification">
            <summary>
            Tag specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.SubFieldSpecification">
            <summary>
            Subfield specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.RawText">
            <summary>
            Unparsed field specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FieldSpecification.ParseSubFieldSpecification">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.FormatExit">
            <summary>
            Umarci.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FormatExit.Execute(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String,System.String)">
            <summary>
            Execute the expression on the given context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FormatExit.Registry">
            <summary>
            Registry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FileObject.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FileObject.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.FunctionDescriptor">
            <summary>
            Function descriptor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.FunctionDescriptor.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FunctionDescriptor.Name">
            <summary>
            Function name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FunctionDescriptor.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FunctionDescriptor.Signature">
            <summary>
            Signature specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.FunctionDescriptor.Function">
            <summary>
            Function itself.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.FunctionParameter">
            <summary>
            Function parameter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.FunctionParameter.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.FunctionParameter.RequiredString">
            <summary>
            Required string.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.FunctionParameter.Numeric">
            <summary>
            Numeric.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.FunctionParameter.RequiredNumeric">
            <summary>
            Required numeric.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.FunctionParameter.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.FunctionParameter.RequiredBoolean">
            <summary>
            Required boolean.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.OuterObject.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name of the object.</param>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.OuterObject.CallMethod(System.String,System.Object[])">
            <summary>
            Call method of the object.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.OuterObject.DecreaseCounter">
            <summary>
            Decrease counter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.OuterObject.IncreaseCounter">
            <summary>
            Increase counter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.OuterObject.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.OuterObject.Counter">
            <summary>
            Usage counter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.OuterObject.Name">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.StandardFunctions.CreateObject(System.String)">
            <summary>
            Create object of given type.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.StandardFunctions.GetObject(System.String)">
            <summary>
            Get object by the name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.IFormatExit">
            <summary>
            General format exit 
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IFormatExit.Execute(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Execute the expression on given context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.IFormatExit.Name">
            <summary>
            Name of the format exit.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.IndexKind">
            <summary>
            Kind of index in <see cref="T:ManagedIrbis.Pft.Infrastructure.IndexSpecification"/>.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.IndexKind.None">
            <summary>
            Not specified.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.IndexKind.Literal">
            <summary>
            Specified by literal.
            </summary>
            <remarks>
            E. g.: 3
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.IndexKind.Expression">
            <summary>
            Specified by expression.
            </summary>
            <remarks>
            E. g.: $x + 1
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.IndexKind.LastRepeat">
            <summary>
            Last repeat.
            </summary>
            <remarks>
            *
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.IndexKind.NewRepeat">
            <summary>
            New repeat.
            </summary>
            <remarks>
            +
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.IndexKind.CurrentRepeat">
            <summary>
            Current repeat.
            </summary>
            <remarks>
            .
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.IndexKind.AllRepeats">
            <summary>
            All repeats.
            </summary>
            <remarks>
            -
            </remarks>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.IndexSpecification">
            <summary>
            Index specification (for fields).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Compare(ManagedIrbis.Pft.Infrastructure.IndexSpecification,ManagedIrbis.Pft.Infrastructure.IndexSpecification)">
            <summary>
            Compare two specifications.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IndexSpecification.ComputeValue``1(ManagedIrbis.Pft.Infrastructure.PftContext,``0[])">
            <summary>
            Compute value of the index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Deserialize(System.IO.BinaryReader)">
            <summary>
            Deserialize the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IndexSpecification.GetNodeInfo">
            <summary>
            Get node info for debugger visualization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serialize the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IndexSpecification.ToText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.IndexSpecification.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Kind">
            <summary>
            Index kind.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Literal">
            <summary>
            Index specified by literal.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Expression">
            <summary>
            Index specified by expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Program">
            <summary>
            Compiled <see cref="P:ManagedIrbis.Pft.Infrastructure.IndexSpecification.Expression"/>.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftBreakException">
            <summary>
            Generated by 'break' statement.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftBreakException.#ctor(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftBreakException.Node">
            <summary>
            Node generated the exception.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftCleanup">
            <summary>
            PFT cleanup flags.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftCleanup.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftCleanup.DoubleText">
            <summary>
            Double text removal.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftCleanup.Rtf">
            <summary>
            RTF markup removal.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftCleanup.Html">
            <summary>
            HTML markup removal.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftConfig">
            <summary>
            Configuration for PFT scripting
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftConfig.DefaultMaxRepeat">
            <summary>
            Максимальное число повторений группы по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftConfig.BreakImmediate">
            <summary>
            Немедленный выход из группы по break.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftConfig.MaxRepeat">
            <summary>
            Максимальное число повторений группы.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftConfig.EnableWarnings">
            <summary>
            Выводить ли предупреждения?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftContextGuard">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContextGuard.#ctor(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContextGuard.PushAgain">
            <summary>
            Push again.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContextGuard.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContextGuard.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContextGuard.ChildContext">
            <summary>
            Child context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContextGuard.ParentContext">
            <summary>
            Parent context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftContextSaver">
            <summary>
            Save state of <see cref="T:ManagedIrbis.Pft.Infrastructure.PftContext"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContextSaver.#ctor(ManagedIrbis.Pft.Infrastructure.PftContext,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContextSaver.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContextSaver.Context">
            <summary>
            Saved context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftExitException">
            <summary>
            Generated by debugger.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftFunction">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftFunctionManager">
            <summary>
            Function manager.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.Add(System.String,ManagedIrbis.Pft.Infrastructure.PftFunction)">
            <summary>
            Quick add the function.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.ExecuteFunction(System.String,ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,ManagedIrbis.Pft.Infrastructure.PftNode[])">
            <summary>
            Execute specified function.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.FindFunction(System.String)">
            <summary>
            Find specified function.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.HaveFunction(System.String)">
            <summary>
            Have specified function?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.RegisterFunction(System.String,ManagedIrbis.Pft.Infrastructure.PftFunction)">
            <summary>
            Register the function.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.Registry">
            <summary>
            Function registry.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.BuiltinFunctions">
            <summary>
            Builtin functions.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftFunctionManager.UserFunctions">
            <summary>
            User defined functions.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftGlobal">
            <summary>
            Global variable.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobal.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobal.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobal.#ctor(System.Int32,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobal.Parse(System.String)">
            <summary>
            Parse (possibly multiline) text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobal.ParseLine(System.String)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobal.AM#Runtime#IHandmadeSerializable#RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobal.AM#Runtime#IHandmadeSerializable#SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobal.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftGlobal.Number">
            <summary>
            Number of the variable.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftGlobal.Fields">
            <summary>
            Fields.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftGlobalManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.Add(System.Int32,System.String)">
            <summary>
            Add the variable.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.Append(System.Int32,System.String)">
            <summary>
            Append the variable.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.Clear">
            <summary>
            Clear all the variables.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.Delete(System.Int32)">
            <summary>
            Delete global variable with specified index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.Get(System.Int32)">
            <summary>
            Get fields for global variable with specified index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.GetAllVariables">
            <summary>
            Get all variables.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.HaveVariable(System.Int32)">
            <summary>
            Have global variable with specified index?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.Set(System.Int32,System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Set the global variable.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.AM#Runtime#IHandmadeSerializable#RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.AM#Runtime#IHandmadeSerializable#SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.Registry">
            <summary>
            Dictionary holding all the global variables.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftGlobalManager.Item(System.Int32)">
            <summary>
            Получение значения глобальной переменной по её индексу
            в строковом представлении. Если такой переменной нет,
            возвращается пустая строка.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftIteration">
            <summary>
            Итерация для <see cref="T:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelFor"/>,
            <see cref="T:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelForEach"/>, <see cref="T:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelGroup"/>
            и <see cref="T:ManagedIrbis.Pft.Infrastructure.Ast.PftParallelWith"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftIteration.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftIteration.ToString">
            <see cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftLexer">
            <summary>
            Lexer for PFT.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftLexer.Tokenize(System.String)">
            <summary>
            Tokenize the text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftMask">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftMask.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftMask.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftMask.Match(System.String)">
            <summary>
            Whether the text matches one of the masks.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftMask.Alternatives">
            <summary>
            Alternative masks.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftMask.Mask.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftContext">
            <summary>
            Êîíòåêñò ôîðìàòèðîâàíèÿ
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftContext.EatNextNewLine">
            <summary>
            Eat new newline.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.#ctor(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.ActivateDebugger(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Activate debugger (if attached).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.ClearAll">
            <summary>
            Ïîëíàÿ î÷èñòêà âñåõ ïîòîêîâ: è îñíîâíîãî,
            è ïðåäóïðåæäåíèé, è îøèáîê.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.ClearText">
            <summary>
            Î÷èñòêà îñíîâíîãî âûõîäíîãî ïîòîêà.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.DoRepeatableAction(System.Action{ManagedIrbis.Pft.Infrastructure.PftContext},System.Int32)">
            <summary>
            Âûïîëíèòü ïîâòîðÿþùóþñÿ ãðóïïó.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.DoRepeatableAction(System.Action{ManagedIrbis.Pft.Infrastructure.PftContext})">
            <summary>
            Âûïîëíèòü ïîâòîðÿþùóþñÿ ãðóïïó
            ìàêñèìàëüíî âîçìîæíîå ÷èñëî ðàç.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.Evaluate(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Âû÷èñëåíèå âûðàæåíèÿ âî âðåìåííîé êîïèè êîíòåêñòà.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.Evaluate(System.Collections.Generic.IEnumerable{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Âû÷èñëåíèå âûðàæåíèÿ âî âðåìåííîé êîïèè êîíòåêñòà.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.Execute(System.Collections.Generic.IEnumerable{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Execute the nodes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.GetProcessedOutput">
            <summary>
            Get processed output.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.GetRootContext">
            <summary>
            Get root context.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.GetBooleanArgument(ManagedIrbis.Pft.Infrastructure.PftNode[],System.Int32)">
            <summary>
            Get boolean argument value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.GetNumericArgument(ManagedIrbis.Pft.Infrastructure.PftNode[],System.Int32)">
            <summary>
            Get numeric argument value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.GetStringArgument(ManagedIrbis.Pft.Infrastructure.PftNode[],System.Int32)">
            <summary>
            Get string argument value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.MarkVMonitor">
            <summary>
            Ñèãíàë, ÷òî èñïîëüçîâàëàñü êîíñòðóêöèÿ v.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.Push">
            <summary>
            Âðåìåííîå ïåðåêëþ÷åíèå êîíòåêñòà (íàïðèìåð,
            ïðè âû÷èñëåíèè ñòðîêîâûõ ôóíêöèé).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.Pop">
            <summary>
            Pop the context.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.SetProvider(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Set provider.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.SetVariables(ManagedIrbis.Pft.Infrastructure.PftVariableManager)">
            <summary>
            Set variables.
            </summary>
            <param name="variables"></param>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.Write(ManagedIrbis.Pft.Infrastructure.PftNode,System.String,System.Object[])">
            <summary>
            Write text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.Write(ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Write text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.WriteLine(ManagedIrbis.Pft.Infrastructure.PftNode,System.String,System.Object[])">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.WriteLine(ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.WriteLine(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftContext.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> 
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Driver">
            <summary>
            Text driver.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Parent">
            <summary>
            Ðîäèòåëüñêèé êîíòåêñò.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Record">
            <summary>
            Òåêóùàÿ ôîðìàòèðóåìàÿ çàïèñü.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.AlternativeRecord">
            <summary>
            Alternative record (for nested context).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Output">
            <summary>
            Âûõîäíîé áóôåð, â êîòîðîì íàêàïëèâàåòñÿ ðåçóëüòàò
            ôîðìàòèðîâàíèÿ, à òàêæå îøèáêè è ïðåäóïðåæäåíèÿ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Text">
            <summary>
            Íàêîïëåííûé òåêñò â îñíîâíîì ïîòîêå âûõîäíîãî áóôåðà,
            ò. å. ñîáñòâåííî ðåçóëüòàò ðàñôîðìàòèðîâàíèÿ çàïèñè.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.FieldOutputMode">
            <summary>
            Ðåæèì âûâîäà ïîëåé.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.UpperMode">
            <summary>
            Ðåæèì ïåðåâîäà òåêñòà â âåðõíèé ðåãèñòð ïðè âûâîäå ïîëåé.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.CurrentGroup">
            <summary>
            Òåêóùàÿ ãðóïïà (åñëè åñòü).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Index">
            <summary>
            Íîìåð ïîâòîðåíèÿ â òåêóùåé ãðóïïå.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.OutputFlag">
            <summary>
            Ôëàã, óñòàíàâëèâàåòñÿ ïðè íàëè÷èè âûâîäà ïðè çàäàííîì ïîâòîðåíèè.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.BreakFlag">
            <summary>
            Ôëàã, óñòàíàâëèâàåòñÿ ïðè ñðàáàòûâàíèè îïåðàòîðà break.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.CurrentField">
            <summary>
            Òåêóùåå îáðàáàòûâàåìîå ïîëå çàïèñè, åñëè åñòü.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Globals">
            <summary>
            Ãëîáàëüíûå ïåðåìåííûå.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Variables">
            <summary>
            Íîðìàëüíûå ïåðåìåííûå.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Functions">
            <summary>
            Ôóíêöèè, çàðåãèñòðèðîâàííûå â äàííîì êîíòåêñòå.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Procedures">
            <summary>
            Ïðîöåäóðû, âèäèìûå èç äàííîãî êîíòåêñòà.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.UniversalCounter">
            <summary>
            Óíèâåðñàëüíûé ñ÷åò÷èê.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.Debugger">
            <summary>
            Debugger (if attached).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftContext.PostProcessing">
            <summary>
            Post processing flags.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs.#ctor(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs.CancelExecution">
            <summary>
            Cancel execution?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs.Node">
            <summary>
            AST node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftDebugEventArgs.Variable">
            <summary>
            Variable.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.PftFieldOutputMode">
            <summary>
            Ðåæèì âûâîäà ïîëåé.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.PftFieldOutputMode.PreviewMode">
            <summary>
            Ðåæèì ïðîâåðêè.
            </summary>
            <remarks>
            Â ýòîì ðåæèìå ïîëÿ âûâîäÿòñÿ â òîì âèäå, â êàêîì îíè õðàíÿòñÿ
            â çàïèñè. Ïðè ýòîì ñèñòåìà íå îáåñïå÷èâàåò íèêàêèõ ðàçäåëèòåëåé
            ìåæäó ïîëÿìè èëè ýêçåìïëÿðàìè ïîâòîðÿþùèõñÿ ïîëåé. Ïîëüçîâàòåëü
            äîëæåí îáåñïå÷èòü àäåêâàòíîå ðàçäåëåíèå ïîëåé ñ ïîìîùüþ êîìàíä
            ðàçìåùåíèÿ, ëèòåðàëîâ èëè ïîâòîðÿþùèõñÿ ãðóïï. Ðåæèì îáû÷íî
            èñïîëüçóåòñÿ äëÿ âûâîäà çàïèñåé ñ öåëüþ ïðîâåðêè ïðàâèëüíîñòè
            ââåäåííûõ äàííûõ.
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Pft.PftFieldOutputMode.HeaderMode">
            <summary>
            Ðåæèì çàãîëîâêà.
            </summary>
            <remarks>
            Ýòîò ðåæèì îáû÷íî èñïîëüçóåòñÿ äëÿ ïå÷àòè çàãîëîâêîâ ïðè âûâîäå
            óêàçàòåëåé è òàáëèö. Âñå óïðàâëÿþùèå ñèìâîëû, ââåäåííûå âìåñòå
            ñ äàííûìè, òàêèå êàê ðàçäåëèòåëè òåðìèíîâ (&lt; è &gt;)
            èãíîðèðóþòñÿ (çà èñêëþ÷åíèåì óêàçàííûõ íèæå ñëó÷àåâ),
            à ðàçäåëèòåëè ïîäïîëåé çàìåíÿþòñÿ çíàêàìè ïóíêòóàöèè.
            </remarks>
        </member>
        <member name="F:ManagedIrbis.Pft.PftFieldOutputMode.DataMode">
            <summary>
            Ðåæèì äàííûõ.
            </summary>
            <remarks>
            Ýòîò ðåæèì ïîõîæ íà ðåæèì çàãîëîâêà, íî äîïîëíèòåëüíî ïîñëå
            êàæäîãî ïîëÿ àâòîìàòè÷åñêè ñòàâèòñÿ òî÷êà (.), çà êîòîðîé
            ñëåäóþò äâà ïðîáåëà (èëè ïðîñòî äâà ïðîáåëà, åñëè ïîëå
            çàêàí÷èâàåòñÿ êàêèì-ëèáî çíàêîì ïóíêòóàöèè). Îòìåòèì,
            îäíàêî, ÷òî ýòà àâòîìàòè÷åñêàÿ ïóíêòóàöèÿ ïîäàâëÿåòñÿ,
            åñëè çà êîìàíäîé âûâîäà ïîëÿ ñëåäóåò ñóôôèêñ-ëèòåðàë.
            </remarks>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftNodeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNodeCollection.#ctor(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNodeCollection.Optimize">
            <summary>
            Optimize the collection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNodeCollection.ClearItems">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.ClearItems"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNodeCollection.InsertItem(System.Int32,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNodeCollection.SetItem(System.Int32,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNodeCollection.RemoveItem(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftNodeCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftNodeCollection.Parent">
            <summary>
            Parent node.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationUtility.CompareLists(System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.PftNode},System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Compare two lists of nodes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationUtility.CompareLists(System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.FieldSpecification},System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.FieldSpecification})">
            <summary>
            Compare two lists of <see cref="T:ManagedIrbis.Pft.Infrastructure.FieldSpecification"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationUtility.CompareNodes(ManagedIrbis.Pft.Infrastructure.PftNode,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Compare two nodes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationUtility.CompareStrings(System.String,System.String)">
            <summary>
            Compare two strings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializationUtility.VerifyDeserializedProgram(ManagedIrbis.Pft.Infrastructure.PftProgram,ManagedIrbis.Pft.Infrastructure.PftProgram)">
            <summary>
            Verify deserialized <see cref="T:ManagedIrbis.Pft.Infrastructure.PftProgram"/>.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.Deserialize(System.IO.BinaryReader)">
            <summary>
            Deserialize the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.Deserialize(System.IO.BinaryReader,System.Collections.Generic.ICollection{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Deserialize the node collection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.DeserializeNullable(System.IO.BinaryReader)">
            <summary>
            Deserialize nullable node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.FromMemory(System.Byte[])">
            <summary>
            Restore the program from the byte array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.Read(System.IO.BinaryReader)">
            <summary>
            Read the AST from the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.Read(System.String)">
            <summary>
            Read the AST from the file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.Save(ManagedIrbis.Pft.Infrastructure.PftNode,System.IO.BinaryWriter)">
            <summary>
            Save the program to the stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.Save(ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Save the program to the file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.Serialize(System.IO.BinaryWriter,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Serialize the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.Serialize(System.IO.BinaryWriter,System.Collections.Generic.ICollection{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Serialize the collection of <see cref="T:ManagedIrbis.Pft.Infrastructure.PftNode"/>s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.SerializeNullable(System.IO.BinaryWriter,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Serialize nullable node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Serialization.PftSerializer.ToMemory(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Save the program to byte array.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.Serialization.TypeMap.Map">
            <summary>
            Важно, чтобы массив был упорядоченным!
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Text.HtmlDriver">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Text.TextDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.TextDriver.#ctor(ManagedIrbis.Pft.Infrastructure.PftOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.TextDriver.Bold(System.String)">
            <summary>
            Bold face.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.TextDriver.Italic(System.String)">
            <summary>
            Italic.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.TextDriver.NewParagraph">
            <summary>
            New paragraph.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.TextDriver.Underline(System.String)">
            <summary>
            Underline.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.TextDriver.Name">
            <summary>
            Name of the driver.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.TextDriver.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.HtmlDriver.#ctor(ManagedIrbis.Pft.Infrastructure.PftOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.HtmlDriver.Bold(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.HtmlDriver.Italic(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.HtmlDriver.NewParagraph">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.HtmlDriver.Underline(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.HtmlDriver.Name">
            <summary>
            Name of the driver.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.DecreaseLevel">
            <summary>
            Decrease the <see cref="P:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Level"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.EatNewLine">
            <summary>
            Eat trailing new line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.EatWhitespace">
            <summary>
            Eat trailing whitespace.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.GetCurrentLine">
            <summary>
            Get current line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.IncreaseLevel">
            <summary>
            Increase the <see cref="P:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Level"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.SingleSpace">
            <summary>
            Add one space if needed.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Write(System.Char)">
            <summary>
            Write the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Write(System.String)">
            <summary>
            Write the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Write(System.Object)">
            <summary>
            Write the object.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Write(System.String,System.Object[])">
            <summary>
            Write the formatted text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.WriteIndent">
            <summary>
            Write the indent.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.WriteIndentIfNeeded">
            <summary>
            Write indent if needed.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.WriteLine">
            <summary>
            Write newline.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.WriteLine(System.String)">
            <summary>
            Write the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.WriteLine(System.Object)">
            <summary>
            Write the object.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.WriteLine(System.String,System.Object[])">
            <summary>
            Write the formatted text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.WriteLineIfNeeded">
            <summary>
            Write new line if needed.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.WriteNodes(System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Write nodes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Column">
            <summary>
            Column.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.IsEmpty">
            <summary>
            Whether the printer is empty?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.IndentWidth">
            <summary>
            Indent width.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.LastCharacter">
            <summary>
            Last character.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.Level">
            <summary>
            Nesting level.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.PftPrettyPrinter.RightBorder">
            <summary>
            RightBorder.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Text.PlainTextDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PlainTextDriver.#ctor(ManagedIrbis.Pft.Infrastructure.PftOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PlainTextDriver.Bold(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PlainTextDriver.Italic(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PlainTextDriver.NewParagraph">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Text.PlainTextDriver.Underline(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Text.PlainTextDriver.Name">
            <summary>
            Name of the driver.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforB.Convolution(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Convolution of the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus1._ParseOne(ManagedIrbis.Pft.Infrastructure.PftContext,System.String)">
            <summary>
            Parse NNN,nnn
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus1._ParsePair(System.String)">
            <summary>
            Parse NNN,nnn#MMM,mmm
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus1._RemoveEmptyTailLines(System.Collections.Generic.List{System.String})">
            <summary>
            Удаляем пустые строки в конце списка.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.VMonitor">
            <summary>
            Отслеживает, был ли вывод из поля с помощью vXXX.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.VMonitor.Output">
            <summary>
            V command output has been seen.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Walking.UniversalVisitor">
            <summary>
            Context for AST visitor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Walking.UniversalVisitor.VisitNode(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.Walking.PftVisitor.VisitNode(ManagedIrbis.Pft.Infrastructure.PftNode)"/>
        </member>
        <member name="E:ManagedIrbis.Pft.Infrastructure.Walking.UniversalVisitor.Visitor">
            <summary>
            Visit the node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Walking.UniversalVisitor.UserData">
            <summary>
            Some arbitrary user data (optional).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Walking.VisitorContext">
            <summary>
            Context for AST visitor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Walking.VisitorContext.#ctor(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Walking.VisitorContext.Node">
            <summary>
            Node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Walking.VisitorContext.Result">
            <summary>
            Result. <c>true</c> means "continue" (default value).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.PftFormatter">
            <summary>
            Local PFT script interpreter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftFormatter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftFormatter.#ctor(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftFormatter.FormatRecord(ManagedIrbis.MarcRecord)">
            <inheritdoc cref="M:ManagedIrbis.Pft.IPftFormatter.FormatRecord(ManagedIrbis.MarcRecord)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.PftFormatter.FormatRecord(System.Int32)">
            <inheritdoc cref="M:ManagedIrbis.Pft.IPftFormatter.FormatRecord(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.PftFormatter.FormatRecords(System.Int32[])">
            <inheritdoc cref="M:ManagedIrbis.Pft.IPftFormatter.FormatRecords(System.Int32[])"/>
        </member>
        <member name="M:ManagedIrbis.Pft.PftFormatter.ParseProgram(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Pft.IPftFormatter.ParseProgram(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.PftFormatter.SetProvider(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Set the provider.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftFormatter.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.SupportsExtendedSyntax">
            <inheritdoc cref="P:ManagedIrbis.Pft.IPftFormatter.SupportsExtendedSyntax"/>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.Context">
            <summary>
            Контекст форматирования. Во время парсинга не нужен.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.Program">
            <summary>
            Корневой элемент синтаксического дерева - собственно программа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.Output">
            <summary>
            Нормальный результат расформатирования.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.Error">
            <summary>
            Поток ошибок.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.Warning">
            <summary>
            Поток предупреждений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.HaveError">
            <summary>
            Have error?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.HaveWarning">
            <summary>
            Have warning.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.PftFormatter.Elapsed">
            <summary>
            Elapsed.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftParser">
            <summary>
            Parser for PFT language.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftParser.Get(System.Collections.Generic.Dictionary{ManagedIrbis.Pft.Infrastructure.PftTokenKind,System.Func{ManagedIrbis.Pft.Infrastructure.PftNode}},ManagedIrbis.Pft.Infrastructure.PftTokenKind[])">
            <summary>
            Create next AST node from token list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftParser.#ctor(ManagedIrbis.Pft.Infrastructure.PftTokenList)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftParser.ParseFor">
            <summary>
            For loop.
            </summary>
            <example>
            for $x=0; $x &lt; 10; $x = $x+1;
            do
                $x, ') ',
                'Прикольно же!'
                #
            end
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftParser.ParseForEach">
            <summary>
            ForEach loop.
            </summary>
            <example>
            foreach $x in v200^a,v200^e,'Hello'
            do
                $x
                #
            end
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftParser.ParseFrom">
            <summary>
            from ... select...
            </summary>
            <example>
            from $x in (v300/)
            where $x:'a'
            select 'Comment: ', $x
            order $x
            end
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftParser.ParseWhile">
            <summary>
            While loop.
            </summary>
            <example>
            $x=0;
            while $x &lt; 10
            do
                $x, ') ',
                'Прикольно же!'
                #
                $x=$x+1;
            end
            </example>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftParser.Parse">
            <summary>
            Parse the tokens.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftParser.ParseParallelFor">
            <summary>
            For loop.
            </summary>
            <example>
            parallel for $x=0; $x &lt; 10; $x = $x+1;
            do
                $x, ') ',
                'Прикольно же!'
                #
            end
            </example>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftParser.FieldMap">
            <summary>
            Field reference context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftParser.MainModeMap">
            <summary>
            Main script context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftParser.NumericMap">
            <summary>
            Numeric expression context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftParser.Tokens">
            <summary>
            Token list.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftProcedure">
            <summary>
            Procedure.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedure.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedure.Deserialize(System.IO.BinaryReader)">
            <summary>
            Deserialize the procedure.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedure.Execute(ManagedIrbis.Pft.Infrastructure.PftContext,System.String)">
            <summary>
            Execute the procedure.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedure.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serialize the procedure.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedure.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftProcedure.Body">
            <summary>
            Procedure body.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftProcedure.Name">
            <summary>
            Procedure name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftProcedureManager">
            <summary>
            Procedure manager.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedureManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedureManager.Deserialize(System.IO.BinaryReader)">
            <summary>
            Deserialize the registry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedureManager.Execute(ManagedIrbis.Pft.Infrastructure.PftContext,System.String,System.String)">
            <summary>
            Execute the procedure.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedureManager.FindProcedure(System.String)">
            <summary>
            Find specified procedure.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedureManager.HaveProcedure(System.String)">
            <summary>
            Have procedure with given name?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProcedureManager.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serialize the registry.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftProcedureManager.Registry">
            <summary>
            Registry.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftProgram">
            <summary>
            AST root node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProgram.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProgram.DumpToText">
            <summary>
            Dump the program.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProgram.Deserialize(System.IO.BinaryReader)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Deserialize(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProgram.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Execute(ManagedIrbis.Pft.Infrastructure.PftContext)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProgram.Serialize(System.IO.BinaryWriter)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.Serialize(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftProgram.ToString">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.PftNode.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftProgram.Procedures">
            <summary>
            Procedures.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftOutput">
            <summary>
            Выходные потоки форматтера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.#ctor(ManagedIrbis.Pft.Infrastructure.PftOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.ClearText">
            <summary>
            Очистка основного потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.ClearWarning">
            <summary>
            Очистака потока предупреждений.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.ClearError">
            <summary>
            Очистка потока ошибок.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.GetCaretPosition">
            <summary>
            Получить (воображаемую) позицию курсора по горизонтали.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.HaveEmptyLine">
            <summary>
            Пустая ли последняя строка в основном буфере?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.PrecededByEmptyLine">
            <summary>
            Предваряется явным переводом строки?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.Push">
            <summary>
            Временный переход к новому буферу.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.Pop">
            <summary>
            Возврат к старому буферу с дописыванием
            в конец текста, накопленного в новом
            веременном буфере.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.RemoveEmptyLines">
            <summary>
            Удалить последнюю строку в буфере, если она пустая.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.Write(System.String,System.Object[])">
            <summary>
            Write text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.Write(System.String)">
            <summary>
            Write text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.WriteLine(System.String,System.Object[])">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.WriteLine(System.String)">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.WriteLine">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftOutput.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.Parent">
            <summary>
            Родительский буфер. Может быть <c>null</c>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.Normal">
            <summary>
            Основной (обычный) поток.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.Warning">
            <summary>
            Поток предупреждений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.Error">
            <summary>
            Поток ошибок.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.Text">
            <summary>
            Накопленный текст основного потока.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.WarningText">
            <summary>
            Накопленный текст потока предупреждений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.ErrorText">
            <summary>
            Накопленный текст потока ошибок.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.HaveText">
            <summary>
            Накоплен ли текст в основном потоке?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.HaveWarning">
            <summary>
            Были ли предупреждения?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftOutput.HaveError">
            <summary>
            Были ли ошибки?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftVariableManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariableManager.#ctor(ManagedIrbis.Pft.Infrastructure.PftVariableManager)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariableManager.DumpVariables(System.IO.TextWriter)">
            <summary>
            Dump all the variables.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariableManager.GetAllVariables">
            <summary>
            Get all variables.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariableManager.GetExistingVariable(System.String)">
            <summary>
            Get existing variable with the specified name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariableManager.GetOrCreateVariable(System.String,System.Boolean)">
            <summary>
            Get existing or create new variable with given name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariableManager.SetVariable(System.String,System.String)">
            <summary>
            Set the variable value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariableManager.SetVariable(ManagedIrbis.Pft.Infrastructure.PftContext,System.String,ManagedIrbis.Pft.Infrastructure.IndexSpecification,System.String)">
            <summary>
            Set the variable value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariableManager.SetVariable(System.String,System.Double)">
            <summary>
            Set the variable value.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftVariableManager.Parent">
            <summary>
            Parent variable manager.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftVariableManager.Registry">
            <summary>
            Registry.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Testing.PftTest">
            <summary>
            Single test for PFT formatting.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.DescriptionFileName">
            <summary>
            Description file name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.ExpectedFileName">
            <summary>
            Expected result file name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.InputFileName">
            <summary>
            Input file name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.RecordFileName">
            <summary>
            Record file name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.IsDirectoryContainsTest(System.String)">
            <summary>
            Whether the directory contains test?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.Run(System.String)">
            <summary>
            Run the test.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTest.Folder">
            <summary>
            Folder name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Testing.PftTester">
            <summary>
            Test for PFT formatting.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.DiscoverTests">
            <summary>
            Discover tests.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.RunTest(ManagedIrbis.Pft.Infrastructure.Testing.PftTest)">
            <summary>
            Run the test.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.RunTests">
            <summary>
            Run the tests.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.SetEnvironment(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Set environment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.WriteResults(System.String)">
            <summary>
            Write test results to the file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.Folder">
            <summary>
            Folder name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.Tests">
            <summary>
            Tests.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTester.Results">
            <summary>
            Results.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftToken">
            <summary>
            Token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftToken.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftToken.#ctor(ManagedIrbis.Pft.Infrastructure.PftTokenKind,System.Int32,System.Int32,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftToken.MustBe(ManagedIrbis.Pft.Infrastructure.PftTokenKind)">
            <summary>
            Requires specified kind of token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftToken.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftToken.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftToken.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftToken.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftToken.Column">
            <summary>
            Column number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftToken.Kind">
            <summary>
            Token kind.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftToken.Line">
            <summary>
            Line number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftToken.Text">
            <summary>
            Token text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftToken.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftTokenKind">
            <summary>
            Token kind.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.None">
            <summary>
            No tokens.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.A">
            <summary>
            a(v200)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Abs">
            <summary>
            abs
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.All">
            <summary>
            all
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.At">
            <summary>
            @
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.And">
            <summary>
            and
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Any">
            <summary>
            any
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Backslash">
            <summary>
            \
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Bang">
            <summary>
            !
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Blank">
            <summary>
            blank
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Break">
            <summary>
            break
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.C">
            <summary>
            c10
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Ceil">
            <summary>
            ceil
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Colon">
            <summary>
            :
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Comma">
            <summary>
            ,
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Comment">
            <summary>
            /* comment
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.ConditionalLiteral">
            <summary>
            'literal'
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Div">
            <summary>
            div
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Do">
            <summary>
            do
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.EatClose">
            <summary>
            ]]]
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.EatOpen">
            <summary>
            [[[
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Else">
            <summary>
            else
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Empty">
            <summary>
            empty
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.End">
            <summary>
            end
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Equals">
            <summary>
            =
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.F">
            <summary>
            f(123)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.F2">
            <summary>
            f2(123)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.False">
            <summary>
            false
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Fi">
            <summary>
            fi
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.First">
            <summary>
            first
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Floor">
            <summary>
            floor
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.For">
            <summary>
            for
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.ForEach">
            <summary>
            foreach
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Frac">
            <summary>
            frac
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.From">
            <summary>
            from
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Global">
            <summary>
            global
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Hash">
            <summary>
            #
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Hat">
            <summary>
            ^
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Have">
            <summary>
            have
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Identifier">
            <summary>
            identifier
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.If">
            <summary>
            if
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.In">
            <summary>
            in
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.L">
            <summary>
            l(format)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Last">
            <summary>
            last
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.LeftCurly">
            <summary>
            {
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.LeftParenthesis">
            <summary>
            (
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.LeftSquare">
            <summary>
            [
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Less">
            <summary>
            &lt;
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.LessEqual">
            <summary>
            &lt;=
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Local">
            <summary>
            local
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Mfn">
            <summary>
            mfn
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Mpl">
            <summary>
            mpl, mhl etc
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Minus">
            <summary>
            -
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.More">
            <summary>
            &gt;
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.MoreEqual">
            <summary>
            &gt;=
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Nl">
            <summary>
            nl
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Not">
            <summary>
            not
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.NotEqual1">
            <summary>
            &lt;&gt;
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.NotEqual2">
            <summary>
            !=
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Number">
            <summary>
            123.45
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Or">
            <summary>
            or
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Order">
            <summary>
            order
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.P">
            <summary>
            p(v200)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Parallel">
            <summary>
            parallel
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Percent">
            <summary>
            %
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Plus">
            <summary>
            +
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Pow">
            <summary>
            pow
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Proc">
            <summary>
            proc
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Question">
            <summary>
            ?
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Ravr">
            <summary>
            ravr
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.RepeatableLiteral">
            <summary>
            |literal|
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.RightCurly">
            <summary>
            }
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.RightSquare">
            <summary>
            ]
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.RightParenthesis">
            <summary>
            )
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Ref">
            <summary>
            ref
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Rmax">
            <summary>
            rmax
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Rmin">
            <summary>
            rmin
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Round">
            <summary>
            round
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Rsum">
            <summary>
            rsum
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.S">
            <summary>
            s(format)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Select">
            <summary>
            select
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Semicolon">
            <summary>
            ;
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Sign">
            <summary>
            sign
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Slash">
            <summary>
            /
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Star">
            <summary>
            *
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Then">
            <summary>
            then
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.True">
            <summary>
            true
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Trunc">
            <summary>
            trunc
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Tilda">
            <summary>
            ~
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.TripleCurly">
            <summary>
            {{{
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.TripleLess">
            <summary>
            &lt;&lt;&lt;
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Unifor">
            <summary>
            &amp;uf('0')
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.UnconditionalLiteral">
            <summary>
            'literal'
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.V">
            <summary>
            v200
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Val">
            <summary>
            val
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Variable">
            <summary>
            $variable
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.Where">
            <summary>
            where
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.While">
            <summary>
            while
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.With">
            <summary>
            with
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.Infrastructure.PftTokenKind.X">
            <summary>
            x10
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftTokenList">
            <summary>
            List of tokens.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.#ctor(System.Collections.Generic.IEnumerable{ManagedIrbis.Pft.Infrastructure.PftToken})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.Add(ManagedIrbis.Pft.Infrastructure.PftTokenKind)">
            <summary>
            Add a token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.CountRemainingTokens">
            <summary>
            Return number of remaining tokens.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.Dump(System.IO.TextWriter)">
            <summary>
            Dump token list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.MoveNext">
            <summary>
            Move to next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.Peek">
            <summary>
            Peek next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.Peek(System.Int32)">
            <summary>
            Peek token at arbitrary position.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.RequireNext">
            <summary>
            Require next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.Reset">
            <summary>
            Move to begin of the list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.RestorePosition(System.Int32)">
            <summary>
            Restore position.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.RequireNext(ManagedIrbis.Pft.Infrastructure.PftTokenKind)">
            <summary>
            Require next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.SavePosition">
            <summary>
            Save position.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.Segment(ManagedIrbis.Pft.Infrastructure.PftTokenKind[])">
            <summary>
            Get segment (span) of the token list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.Segment(ManagedIrbis.Pft.Infrastructure.PftTokenKind[],ManagedIrbis.Pft.Infrastructure.PftTokenKind[],ManagedIrbis.Pft.Infrastructure.PftTokenKind[])">
            <summary>
            Get segment (span) of the token list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.ShowLastTokens(System.Int32)">
            <summary>
            Show last tokens.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.ToArray">
            <summary>
            Get array of tokens.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.ToText">
            <summary>
            Convert token list to text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftTokenList.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftTokenList.Current">
            <summary>
            Current token.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftTokenList.IsEof">
            <summary>
            EOF reached?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftTokenList.Length">
            <summary>
            How many tokens?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.PftVariable">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariable.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariable.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariable.#ctor(System.String,System.Double)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariable.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.PftVariable.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftVariable.Name">
            <summary>
            Имя переменной.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftVariable.IsNumeric">
            <summary>
            Признак числовой переменной.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftVariable.NumericValue">
            <summary>
            Числовое значение.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.PftVariable.StringValue">
            <summary>
            Строковое значение.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Duration">
            <summary>
            Duration.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Failed">
            <summary>
            Test failed?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.FinishTime">
            <summary>
            Finish time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Name">
            <summary>
            Name of the test.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.StartTime">
            <summary>
            Start time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Input">
            <summary>
            Input.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Tokens">
            <summary>
            Tokens.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Ast">
            <summary>
            Program AST dump.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Expected">
            <summary>
            Output text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Output">
            <summary>
            Output text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Testing.PftTestResult.Exception">
            <summary>
            Exception text (if any).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Umarci">
            <summary>
            Umarci.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Umarci.FindAction(System.String@)">
            <summary>
            Find action for specified expression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Umarci.Umarci0(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Handle command 0.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Umarci.Umarci1(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Handle command 1.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Umarci.Umarci2(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Handle command 2.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Umarci.Umarci3(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Handle command 3.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Umarci.Umarci4(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Handle command 4.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Umarci.Execute(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.IFormatExit.Execute(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Umarci.Registry">
            <summary>
            Registry.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Umarci.ThrowOnUnknown">
            <summary>
            Throw exception on unknown key.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Umarci.Name">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.IFormatExit.Name"/>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.Unifor">
            <summary>
            Unifor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.FindAction(System.String@)">
            <summary>
            Find action for specified expression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.CheckIsbn(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Контроль ISSN/ISBN.
            Возвращаемое значение: 0 – при положительном
            результате, 1 – при отрицательном.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.CleanDoubleText(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Post processing: cleanup double text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.CleanRtf(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Post processing: cleanup RTF markup.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.DecodeTitle(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Decode title.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.FindSubstring(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Возвращает позицию первого символа найденного вхождения подстроки
            в исходную строку. Считается, что символы в строке нумеруются с 1.
            Если подстрока не найдена, то возвращает 0.
            </summary>
            <remarks>
            Формат:
            +9S!подстрока!исходная_строка
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.FormatAll(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            ALL format for records
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.GetDatabaseName(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get current database name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.GetFieldCount(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get field count.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.GetFieldIndex(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get field index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.GetFieldRepeat(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get field repeat.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.GetIniFileEntry(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get INI-file entry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.GetMenuEntry(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get MNU-file entry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.GetPart(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Вернуть часть строки до или начиная с заданного символа.
            </summary>
            <remarks>
            Формат (передаваемая строка):
            GNAстрока
            где:
            N может принимать значения:
            0 (или A) – до заданного символа не включая его;
            1 (или B) – начиная с заданного символа;
            2 (или C) – после заданного символа;
            3 (или D) – после последнего вхождения заданного символа;
            4 (или E) – до последнего вхождения заданного символа(включая его);
            5 – до последнего вхождения заданного символа(НЕ ВКЛЮЧАЯ его).
            А – заданный символ.Символ обозначает самого себя, кроме 
            # (обозначает любую цифру) и $ (обозначает любую букву).
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.GetRecordStatus(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get record status: whether the record is deleted?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.RandomNumber(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Generate random number.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.RemoveAngleBrackets(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Remove text surrounded with angle brackets.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.RemoveDoubleQuotes(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Remove double quotes from the string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.ToLower(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Convert the string to lower case.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.Transliterate(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Transliterate cyrillic to latin.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.TrimAtLastDot(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Trim text at last dot.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.UniqueField(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get unique field value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifor.Execute(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Pft.Infrastructure.IFormatExit.Execute(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Unifor.Registry">
            <summary>
            Registry.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Unifor.ThrowOnEmpty">
            <summary>
            Throw an exception on empty UNIFOR?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Unifor.ThrowOnUnknown">
            <summary>
            Throw an exception on unknown key?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.Unifor.Name">
            <inheritdoc cref="P:ManagedIrbis.Pft.Infrastructure.IFormatExit.Name"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.Unifor3.PrintDate(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Print current date.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.Unifor4.FormatPreviousVersion(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Format previous version of current record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus3.ConvertToAnsi(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Convert text from UTF8 to CP1251.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus3.ConvertToUtf(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Convert text from CP1251 to UTF8.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus3.ReplacePlus(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Replace '+' sign with %2B
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus3.UrlDecode(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Decode text from the URL.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus3.UrlEncode(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Encode the text to URL format.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetCharacter(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get character with given code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetDirectoryName(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get directory name from full path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetDrive(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get drive name from full path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetExtension(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get extension from full path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetFileContent(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            UNIFOR('+9C'): Get file content.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetFileExist(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            UNIFOR('+9L'): check whether the file exist
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetFileName(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get file name from full path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetFileSize(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            UNIFOR('+9A'):  Get file size.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetIndex(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get field repeat.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.GetGeneration(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get IRBIS generation (family): 32 or 64
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.Length(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Get string length.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.ReplaceCharacter(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Replace character in text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.ReplaceString(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Replace substring.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.SplitWords(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Split text to word array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.Substring(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Split text to word array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlus9.ToUpper(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Convert text to upper case.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforPlusAt.FormatJson(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Выдать содержимое документа полностью в формате JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforS.ToRoman(System.Int32)">
            <summary>
            Borrowed from:
            http://stackoverflow.com/questions/7040289/converting-integers-to-roman-numerals
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforU.Check(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Check whether the issue is present
            in cumulated collection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforU.Check(System.String,System.String)">
            <summary>
            Check whether the issue is present
            in cumulated collection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforU.Cumulate(System.String)">
            <summary>
            Cumulate the magazine issues.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforU.Cumulate(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Cumulate the magazine issues.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforU.Decumulate(System.String)">
            <summary>
            Decumulate the magazine issues.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.Unifors.UniforU.Decumulate(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode,System.String)">
            <summary>
            Decumulate the magazine issues.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.VirtualChildren">
            <summary>
            Virtual children for <see cref="T:ManagedIrbis.Pft.Infrastructure.PftNode"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.SetChildren(System.Collections.Generic.IEnumerable{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Set children array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.GetEnumerator">
            <inheritdoc cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.Add(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.Add(`0)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.Clear">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.Clear"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.Contains(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.CopyTo(ManagedIrbis.Pft.Infrastructure.PftNode[],System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.Remove(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.Remove(`0)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.IndexOf(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:System.Collections.Generic.IList`1.IndexOf(`0)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.Insert(System.Int32,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <inheritdoc cref="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.RemoveAt(System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)"/>
        </member>
        <member name="E:ManagedIrbis.Pft.Infrastructure.VirtualChildren.Enumeration">
            <summary>
            Fired on <see cref="M:ManagedIrbis.Pft.Infrastructure.VirtualChildren.GetEnumerator"/> call.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.VirtualChildren.Count">
            <inheritdoc cref="P:System.Collections.Generic.ICollection`1.Count"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.VirtualChildren.IsReadOnly">
            <inheritdoc cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.VirtualChildren.Item(System.Int32)">
            <inheritdoc cref="P:System.Collections.Generic.IList`1.Item(System.Int32)"/>
        </member>
        <member name="T:ManagedIrbis.Pft.PftHtmlFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftHtmlFormatter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftHtmlFormatter.#ctor(ManagedIrbis.Pft.Infrastructure.PftContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftHtmlFormatter.ParseProgram(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Pft.PftFormatter.ParseProgram(System.String)"/>
        </member>
        <member name="P:ManagedIrbis.Pft.PftHtmlFormatter.Separator">
            <summary>
            Text separator.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.PftNotConnectedException">
            <summary>
            Возникает, когда необходимо обращение к серверу,
            а подключение отсутствует.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftNotConnectedException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftNotConnectedException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftNotConnectedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.PftSemanticException">
            <summary>
            Semantic error occured.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSemanticException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSemanticException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSemanticException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.PftSyntaxException">
            <summary>
            Исключение, возникающее при разборе PFT-скрипта.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor(ManagedIrbis.Pft.Infrastructure.PftTokenList)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor(ManagedIrbis.Pft.Infrastructure.PftTokenList,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor(ManagedIrbis.Pft.Infrastructure.PftToken,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor(AM.Text.TextNavigator)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftSyntaxException.#ctor(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.PftTextSeparator">
            <summary>
            <see cref="T:AM.Text.TextSeparator"/> for PFT.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftTextSeparator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftTextSeparator.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftTextSeparator.HandleChunk(System.Boolean,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Pft.PftTextSeparator.Accumulator">
            <summary>
            Accumulates result text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.PftUtility">
            <summary>
            Utility routines for PFT scripting.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.PftUtility.Digits">
            <summary>
            Digits.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.PftUtility.DigitsX">
            <summary>
            Digits plus X.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Pft.PftUtility.Letters">
            <summary>
            Letters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.AssignField(ManagedIrbis.Pft.Infrastructure.PftContext,System.String,ManagedIrbis.Pft.Infrastructure.IndexSpecification,System.String)">
            <summary>
            Assign field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.AssignSubField(ManagedIrbis.Pft.Infrastructure.PftContext,System.String,ManagedIrbis.Pft.Infrastructure.IndexSpecification,System.Char,ManagedIrbis.Pft.Infrastructure.IndexSpecification,System.String)">
            <summary>
            Assign subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.CloneNodes(ManagedIrbis.Pft.Infrastructure.PftNodeCollection,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Clone nodes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.CompareStrings(System.String,System.String)">
            <summary>
            Compare two strings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.CompileProgram(System.String)">
            <summary>
            Compile the program.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.ContainsSubString(System.String,System.String)">
            <summary>
            Whether one string contains another.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.ContainsSubStringSensitive(System.String,System.String)">
            <summary>
            Whether one string contains another.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.ExtractNumericValue(System.String)">
            <summary>
            Extract numeric value from the input text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.ExtractNumericValues(System.String)">
            <summary>
            Extract numeric values from the input text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.FormatDataMode(ManagedIrbis.RecordField)">
            <summary>
            Format for data mode.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.FormatHeaderMode(ManagedIrbis.RecordField)">
            <summary>
            Format for header mode.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.FormatField(ManagedIrbis.RecordField,ManagedIrbis.Pft.PftFieldOutputMode,System.Boolean)">
            <summary>
            Format field according to specified output mode.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.FormatLikeF(System.Double,System.Int32,System.Int32)">
            <summary>
            Format value like function f does.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.GetArrayItem``1(ManagedIrbis.Pft.Infrastructure.PftContext,``0[],ManagedIrbis.Pft.Infrastructure.IndexSpecification)">
            <summary>
            Get array item according to specification
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.GetFieldCount(ManagedIrbis.Pft.Infrastructure.PftContext,System.String[])">
            <summary>
            Get count of the fields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.GetFieldValue(ManagedIrbis.Pft.Infrastructure.PftContext,System.String,ManagedIrbis.Pft.Infrastructure.IndexSpecification)">
            <summary>
            Get value of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.GetFieldValue(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.RecordField,System.Char,ManagedIrbis.Pft.Infrastructure.IndexSpecification)">
            <summary>
            Get value of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.GetReservedWords">
            <summary>
            Get array of reserved words.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.GetSubFieldValue(ManagedIrbis.Pft.Infrastructure.PftContext,System.String,ManagedIrbis.Pft.Infrastructure.IndexSpecification,System.Char,ManagedIrbis.Pft.Infrastructure.IndexSpecification)">
            <summary>
            Get value of the subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.IsComplexExpression(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Whether the node is complex expression?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.IsComplexExpression(System.Collections.Generic.IEnumerable{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Whether the node is complex expression?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.IsNumeric(ManagedIrbis.Pft.Infrastructure.PftContext,System.Collections.Generic.IList{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Whether the node collection represents
            numeric or string expression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.IsNumeric(ManagedIrbis.Pft.Infrastructure.PftContext,ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Heuristics: whether given node is
            text or numeric.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.NodesToText(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Build text representation of <see cref="T:ManagedIrbis.Pft.Infrastructure.PftNode"/>'s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.ParseField(System.String)">
            <summary>
            Parse the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.PrepareText(System.String)">
            <summary>
            Prepare text for <see cref="T:ManagedIrbis.Pft.Infrastructure.Ast.PftUnconditionalLiteral"/>,
            <see cref="T:ManagedIrbis.Pft.Infrastructure.Ast.PftConditionalLiteral"/>,
            <see cref="T:ManagedIrbis.Pft.Infrastructure.Ast.PftRepeatableLiteral"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.RequiresConnection(ManagedIrbis.Pft.Infrastructure.PftNode)">
            <summary>
            Whether the node requires server connection to evaluate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.RequiresConnection(System.Collections.Generic.IEnumerable{ManagedIrbis.Pft.Infrastructure.PftNode})">
            <summary>
            Whether the node requires server connection to evaluate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.SafeSubString(System.String,System.Int32,System.Int32)">
            <summary>
            Extract substring in safe manner.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.PftUtility.SetArrayItem``1(ManagedIrbis.Pft.Infrastructure.PftContext,``0[],ManagedIrbis.Pft.Infrastructure.IndexSpecification,``0)">
            <summary>
            Set array item according to index specification
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pft.Infrastructure.ProgramCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ProgramCache.AddProgram(System.String,ManagedIrbis.Pft.Infrastructure.PftProgram)">
            <summary>
            Add program for the sourceText.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ProgramCache.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pft.Infrastructure.ProgramCache.GetProgram(System.String)">
            <summary>
            Get program for the text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pft.Infrastructure.ProgramCache.Registry">
            <summary>
            Registry.
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.CdeclPluginFunction">
            <summary>
            Plugin function with cdecl call convention.
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.DllCache">
            <summary>
            DLL cache.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DllCache.FreeLibrary(System.String)">
            <summary>
            Free dynamic library.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DllCache.CreateDelegate(System.String,System.String,System.Type)">
            <summary>
            Get delegate for given function from dynamic library.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DllCache.LoadLibrary(System.String)">
            <summary>
            Load dynamic library.
            </summary>
        </member>
        <member name="P:ManagedIrbis.PlatformSpecific.DllCache.DllRegistry">
            <summary>
            DLL registry.
            </summary>
        </member>
        <member name="P:ManagedIrbis.PlatformSpecific.DllCache.DelegateRegistry">
            <summary>
            Delegate registry.
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.DynamicLibrary">
            <summary>
            Dynamic library (DLL) of Windows.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DynamicLibrary.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DynamicLibrary.LoadLibrary(System.String)">
            <summary>
            Loads the specified module into the address space
            of the calling process. The specified module may
            cause other modules to be loaded.
            </summary>
            <param name="libraryName">The name of the module.
            This can be either a library module (a .dll file)
            or an executable module (an .exe file).</param>
            <returns>If the function succeeds, the return value
            is a handle to the module.
            If the function fails, the return value is NULL.
            To get extended error information, call GetLastError.
            </returns>
            <remarks>See https://msdn.microsoft.com/en-us/library/windows/desktop/ms684175(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DynamicLibrary.FreeLibrary(System.IntPtr)">
            <summary>
            Frees the loaded dynamic-link library (DLL) module and,
            if necessary, decrements its reference count.
            When the reference count reaches zero, the module
            is unloaded from the address space of the calling
            process and the handle is no longer valid.
            </summary>
            <param name="hModule">A handle to the loaded library module.
            The LoadLibrary, LoadLibraryEx, GetModuleHandle,
            or GetModuleHandleEx function returns this handle.
            </param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. 
            To get extended error information, call the GetLastError function.
            </returns>
            <remarks>See https://msdn.microsoft.com/en-us/library/windows/desktop/ms683152(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DynamicLibrary.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            Retrieves the address of an exported function
            or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="hModule">A handle to the DLL module
            that contains the function or variable.
            The LoadLibrary, LoadLibraryEx, LoadPackagedLibrary,
            or GetModuleHandle function returns this handle.
            </param>
            <param name="lpProcName">The function or variable name,
            or the function's ordinal value. If this parameter
            is an ordinal value, it must be in the low-order word;
            the high-order word must be zero.</param>
            <returns>If the function succeeds, the return value
            is the address of the exported function or variable.
            If the function fails, the return value is NULL.
            To get extended error information, call GetLastError.
            </returns>
            <remarks>See https://msdn.microsoft.com/en-us/library/windows/desktop/ms683212(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DynamicLibrary.CreateDelegate(System.String,System.Type)">
            <summary>
            Create delegate for specified function.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.DynamicLibrary.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="E:ManagedIrbis.PlatformSpecific.DynamicLibrary.Disposing">
            <summary>
            Raised when disposing.
            </summary>
        </member>
        <member name="P:ManagedIrbis.PlatformSpecific.DynamicLibrary.LibraryName">
            <summary>
            Library name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.LocalPathFinder">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.PathFinder">
            <summary>
            Finds a file on abstract path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.PathFinder.FindFile(System.String,System.String)">
            <summary>
            Find file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.LocalPathFinder.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.LocalPathFinder.#ctor(System.String[],System.String[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.LocalPathFinder.FindFile(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.PlatformSpecific.LocalPathFinder.Extensions">
            <summary>
            Extensions.
            </summary>
        </member>
        <member name="P:ManagedIrbis.PlatformSpecific.LocalPathFinder.Separators">
            <summary>
            Separator.
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.MethodResult">
            <summary>
            Result of external method call.
            </summary>
        </member>
        <member name="P:ManagedIrbis.PlatformSpecific.MethodResult.ReturnCode">
            <summary>
            Return code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.PlatformSpecific.MethodResult.Input">
            <summary>
            Input.
            </summary>
        </member>
        <member name="P:ManagedIrbis.PlatformSpecific.MethodResult.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.MethodRunner">
            <summary>
            Method runner
            </summary>
        </member>
        <member name="F:ManagedIrbis.PlatformSpecific.MethodRunner.BufferSize">
            <summary>
            Buffer size, bytes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.MethodRunner.RunMethod(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Run process and get its output.
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.ProcessRunner">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.ProcessRunner.RunAndForget(System.String)">
            <summary>
            Run process and forget about it.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.ProcessRunner.RunAndGetOutput(System.String)">
            <summary>
            Run process and get its output.
            </summary>
        </member>
        <member name="M:ManagedIrbis.PlatformSpecific.ProcessRunner.RunAndWait(System.String)">
            <summary>
            Run process and wait for it.
            </summary>
        </member>
        <member name="T:ManagedIrbis.PlatformSpecific.WinapiPluginFunction">
            <summary>
            Plugin function with WinAPI call convention.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Quality.QualityRule">
            <summary>
            Abstract base class for all the quality rules.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.AddDefect(System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Add detected defect.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.AddDefect(ManagedIrbis.RecordField,System.Int32,System.String,System.Object[])">
            <summary>
            Add detected defect.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.AddDefect(ManagedIrbis.RecordField,ManagedIrbis.SubField,System.Int32,System.String,System.Object[])">
            <summary>
            Add detected defect.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.BeginCheck(ManagedIrbis.Quality.RuleContext)">
            <summary>
            Begin the record checking.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.CacheMenu(System.String,ManagedIrbis.Menus.MenuFile)">
            <summary>
            Cache the menu.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.CheckForMenu(ManagedIrbis.Menus.MenuFile,System.String)">
            <summary>
            Check the value against the menu.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.GetTextAtPosition(System.String,System.Int32)">
            <summary>
            Get text at specified position in the string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.ShowDoubleWhiteSpace(System.String)">
            <summary>
            Show double whitespace in the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.CheckWhitespace(ManagedIrbis.RecordField,ManagedIrbis.SubField)">
            <summary>
            Check the subfield for whitespace.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.CheckWhitespace(ManagedIrbis.RecordField)">
            <summary>
            Check for whitespace.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.EndCheck">
            <summary>
            End the record checking.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.IsAsp">
            <summary>
            Whether the current working list is ASP?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.IsBook">
            <summary>
            Whether the current working list is book-specific:
            PAZK, SPEC or PVK?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.IsPazk">
            <summary>
            Whether the current working list is PAZK?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.IsSpec">
            <summary>
            Whether the current working list is SPEC?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.GetFields">
            <summary>
            Get fields of the current record for the rule
            according the <see cref="P:ManagedIrbis.Quality.QualityRule.FieldSpec"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustNotContainSubfields(ManagedIrbis.RecordField)">
            <summary>
            Must not contain subfields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustNotContainText(ManagedIrbis.RecordField)">
            <summary>
            Asserts that the field must not contain plain text value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustNotRepeatSubfields(ManagedIrbis.RecordField)">
            <summary>
            Asserts that the field must not contain
            repeatable subfields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustBeUniqueField(ManagedIrbis.RecordField[])">
            <summary>
            Asserts that the field must be unique.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustBeNonEmptySubfield(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Asserts that her subfield must be non-empty.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustBeUniqueSubfield(ManagedIrbis.RecordField[],System.Char)">
            <summary>
            Asserts that subfields of the fields must be unique.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustBeUniqueSubfield(ManagedIrbis.RecordField[],System.Char[])">
            <summary>
            Asserts that subfields of the fields must be unique.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustNotContainWhitespace(ManagedIrbis.RecordField)">
            <summary>
            Asserts that the field must not contain whitespace.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustNotContainWhitespace(ManagedIrbis.RecordField,ManagedIrbis.SubField)">
            <summary>
            Asserts that the subfield must not contain whitespace.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustNotContainWhitespace(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Asserts that subfields of the field must not contain whitespace.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustNotContainBadCharacters(ManagedIrbis.RecordField)">
            <summary>
            Asserts that the field must not contain bad characters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.MustNotContainBadCharacters(ManagedIrbis.RecordField,ManagedIrbis.SubField)">
            <summary>
            Asserts that the subfield must not contain bad characters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.QualityRule.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <summary>
            Check the record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.QualityRule.FieldSpec">
            <summary>
            Specification of the fields to check.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.QualityRule.Connection">
            <summary>
            Клиент.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.QualityRule.Context">
            <summary>
            Текущий контекст.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.QualityRule.Record">
            <summary>
            Текущая проверяемая запись.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.QualityRule.Report">
            <summary>
            Накопленный отчёт.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.QualityRule.Worksheet">
            <summary>
            Рабочий лист.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Quality.RuleContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleContext.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RuleContext.Connection">
            <summary>
            Клиент.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RuleContext.Record">
            <summary>
            Обрабатываемая запись.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RuleContext.BriefFormat">
            <summary>
            Формат для краткого библиографического описания.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Quality.RuleReport">
            <summary>
            Отчёт о работе правила.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleReport.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RuleReport.Defects">
            <summary>
            Дефекты, обнаруженные правилом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RuleReport.Damage">
            <summary>
            Общий урон.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RuleReport.Bonus">
            <summary>
            Начисленный бонус.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Quality.RuleSet">
            <summary>
            Набор правил.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleSet.MergeReport(ManagedIrbis.Quality.RecordReport,ManagedIrbis.Quality.RecordReport)">
            <summary>
            Merge two reports.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleSet.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <summary>
            Проверка одной записи
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleSet.GetRule(System.String)">
            <summary>
            Получаем правило по его имени.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleSet.LoadJson(System.String)">
            <summary>
            Load set of rules from the specified file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleSet.RegisterAssembly(System.Reflection.Assembly)">
            <summary>
            Регистрируем все правила из указанной сборки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleSet.RegisterBuiltinRules">
            <summary>
            Регистрация встроенных правил.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleSet.RegisterRule(System.Type)">
            <summary>
            Register rule from type.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleSet.UnregisterRule(System.String)">
            <summary>
            Отменяем регистрацию правила с указанным именем.
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ManagedIrbis.Quality.RuleSet.Rules">
            <summary>
            Правила, входящие в набор.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Check10">
            <summary>
            ISBN и цена.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Check10.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Check10.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Check610">
            <summary>
            Ключевые слова.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Check610.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Check610.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Check908">
            <summary>
            Авторский знак.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Check908.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Check908.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.CheckEmptySubfields">
            <summary>
            Обнаружение пустых подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.CheckEmptySubfields.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.CheckEmptySubfields.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.CheckMixedCharacters">
            <summary>
            Проверка на смешение символов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.CheckMixedCharacters.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.CheckMixedCharacters.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.CheckWhitespace">
            <summary>
            Проверка употребления пробелов в полях/подполях
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.CheckWhitespace.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.CheckWhitespace.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require101">
            <summary>
            Язык основного текста.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require101.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require101.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require102">
            <summary>
            Страна.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require102.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require102.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require200">
            <summary>
            Основное заглавие.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require200.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require200.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require210">
            <summary>
            Выходные данные
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require210.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require210.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require215">
            <summary>
            Количественные характеристики.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require215.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require215.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require461">
            <summary>
            Общие сведения о многотомнике.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require461.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require461.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require60">
            <summary>
            Раздел знаний.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require60.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require60.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require60x">
            <summary>
            Предметные рубрики
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require60x.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require60x.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require700">
            <summary>
            Индивидуальные авторы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require700.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require700.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require900">
            <summary>
            Коды
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require900.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require900.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require903">
            <summary>
            Шифр документа в базе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require903.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require903.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require910">
            <summary>
            Сведения об экземплярах.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require910.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require910.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Quality.Rules.Require920">
            <summary>
            Рабочий лист
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.Rules.Require920.CheckRecord(ManagedIrbis.Quality.RuleContext)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Quality.Rules.Require920.FieldSpec">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.RawRecord">
            <summary>
            Raw (not decoded) record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RawRecord.EncodeRecord">
            <summary>
            Encode record to text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RawRecord.EncodeRecord(System.String)">
            <summary>
            Encode record to text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RawRecord.ParseMfnStatusVersion(System.String,System.String,ManagedIrbis.RawRecord)">
            <summary>
            Parse MFN, status and version of the record
            </summary>
        </member>
        <member name="M:ManagedIrbis.RawRecord.Parse(System.String)">
            <summary>
            Parse text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RawRecord.Parse(System.String[])">
            <summary>
            Parse text lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RawRecord.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.RawRecord.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RawRecord.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RawRecord.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RawRecord.Deleted">
            <summary>
            Признак удалённой записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RawRecord.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RawRecord.Lines">
            <summary>
            Lines of text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.RecordComparator">
            <summary>
            Compares two record in field-by-field manner.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordComparator.FindDifference(ManagedIrbis.MarcRecord,ManagedIrbis.MarcRecord)">
            <summary>
            Find difference between two records.
            </summary>
        </member>
        <member name="T:ManagedIrbis.RecordComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordComparer.ByMfn">
            <summary>
            Compare <see cref="T:ManagedIrbis.MarcRecord"/> by MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordComparer.ByIndex">
            <summary>
            Compare <see cref="T:ManagedIrbis.MarcRecord"/> by index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordComparer.ByDescription">
            <summary>
            Compare <see cref="T:ManagedIrbis.MarcRecord"/> by descrption.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordComparer.BySortKey">
            <summary>
            Compare <see cref="T:ManagedIrbis.MarcRecord"/> by sort key.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordComparer.ByMfnComparer.Compare(ManagedIrbis.MarcRecord,ManagedIrbis.MarcRecord)">
            <inheritdoc cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.RecordComparer.ByIndexComparer.Compare(ManagedIrbis.MarcRecord,ManagedIrbis.MarcRecord)">
            <inheritdoc cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.RecordComparer.ByDescriptionComparer.Compare(ManagedIrbis.MarcRecord,ManagedIrbis.MarcRecord)">
            <inheritdoc cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.RecordComparer.BySortKeyComparer.Compare(ManagedIrbis.MarcRecord,ManagedIrbis.MarcRecord)">
            <inheritdoc cref="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)"/>
        </member>
        <member name="T:ManagedIrbis.RecordDifferenceResult">
            <summary>
            Difference result for two records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordDifferenceResult.#ctor">
            <summary>
            Constuctor
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordDifferenceResult.Both">
            <summary>
            Fields present in both records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordDifferenceResult.FirstOnly">
            <summary>
            Fields present in first record only.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordDifferenceResult.SecondOnly">
            <summary>
            Fields present in second record only.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Client.RecordState">
            <summary>
            State of the <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RecordState.ParseServerAnswer(System.String)">
            <summary>
            Parse server answer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Client.RecordState.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Client.RecordState.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Client.RecordState.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Client.RecordState.Id">
            <summary>
            Identifier for LiteDB.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RecordState.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RecordState.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Client.RecordState.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="T:ManagedIrbis.FieldComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldComparer.ByTag">
            <summary>
            Compare <inheritdoc cref="T:ManagedIrbis.RecordField"/> by
            <see cref="P:ManagedIrbis.RecordField.Tag"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.FieldComparer.ByTagComparer.Compare(ManagedIrbis.RecordField,ManagedIrbis.RecordField)">
            <inheritdoc cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)"/>
        </member>
        <member name="T:ManagedIrbis.RecordGuard">
            <summary>
            Ensures that the record(s) will be saved.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.#ctor(ManagedIrbis.Client.IrbisProvider,ManagedIrbis.MarcRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.#ctor(ManagedIrbis.Client.IrbisProvider,ManagedIrbis.MarcRecord[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.AddRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Add the record to the guard.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.Commit">
            <summary>
            Commit changes if any.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.RemoveRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Remove the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.RecordGuard.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.RecordGuard.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordGuard.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordGuard.Records">
            <summary>
            Records to guard.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.BandCollection`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.#ctor(ManagedIrbis.Reports.IrbisReport,ManagedIrbis.Reports.ReportBand)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add range of <see cref="T:ManagedIrbis.RecordField"/>s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.Clone">
            <summary>
            Создание клона коллекции.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.Find(System.Predicate{ManagedIrbis.Reports.ReportBand})">
            <summary>
            Find first occurrence of the field with given predicate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.FindAll(System.Predicate{ManagedIrbis.Reports.ReportBand})">
            <summary>
            Find all occurrences of the field
            with given predicate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.Render(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Render bands.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.ClearItems">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.ClearItems"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.InsertItem(System.Int32,`0)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.RemoveItem(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.SetItem(System.Int32,`0)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.AsReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.AsReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.SetReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.SetReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.ThrowIfReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.ThrowIfReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.BandCollection`1.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Reports.BandCollection`1.Parent">
            <summary>
            Parent band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.BandCollection`1.Report">
            <summary>
            Record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.BandCollection`1.ReadOnly">
            <inheritdoc cref="P:AM.IReadOnly`1.ReadOnly"/>
        </member>
        <member name="T:ManagedIrbis.Reports.CompositeBand">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportBand">
            <summary>
            Generic (non-repeating) band.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.#ctor">
            <summary>
            Construction.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.OnAfterRendering(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Called after <see cref="M:ManagedIrbis.Reports.ReportBand.Render(ManagedIrbis.Reports.ReportContext)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.OnBeforeRendering(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Called before <see cref="M:ManagedIrbis.Reports.ReportBand.Render(ManagedIrbis.Reports.ReportContext)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.Clone">
            <summary>
            Clone the band.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.Render(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Render the band.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.RenderOnce(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Pft.PftFormatter)">
            <summary>
            Render the band once (ignore records).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.RenderOnce(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Render the band once (ignore records).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.RenderAllRecords(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Pft.PftFormatter)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.RenderAllRecords(ManagedIrbis.Reports.ReportContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.RenderRecord(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Pft.PftFormatter,System.Int32)">
            <summary>
            Render given index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.RenderRecord(ManagedIrbis.Reports.ReportContext,System.Int32)">
            <summary>
            Render given index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.ShouldSerializeAttributes">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Reports.ReportBand.Attributes"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportBand.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="E:ManagedIrbis.Reports.ReportBand.AfterRendering">
            <summary>
            Raised after rendering.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Reports.ReportBand.BeforeRendering">
            <summary>
            Raised before rendering.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportBand.Attributes">
            <summary>
            Attributes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportBand.Cells">
            <summary>
            Cells.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportBand.Report">
            <summary>
            Report.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportBand.Parent">
            <summary>
            Parent band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportBand.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CompositeBand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CompositeBand.RenderOnce(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Pft.PftFormatter)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportBand.RenderOnce(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Pft.PftFormatter)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CompositeBand.RenderAllRecords(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Pft.PftFormatter)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportBand.RenderAllRecords(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Pft.PftFormatter)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CompositeBand.ShouldSerializeCells">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.Reports.ReportBand.Cells"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CompositeBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportBand.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CompositeBand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CompositeBand.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Reports.CompositeBand.Body">
            <summary>
            Body bands.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.CompositeBand.Footer">
            <summary>
            Footer band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.CompositeBand.Header">
            <summary>
            Header band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.CompositeBand.Report">
            <inheritdoc cref="P:ManagedIrbis.Reports.ReportBand.Report"/>
        </member>
        <member name="T:ManagedIrbis.Reports.ConditionalBand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ConditionalBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportBand.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.ConditionalBand.ConditionalExpression">
            <summary>
            Conditional expression (PFT).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.DetailsBand">
            <summary>
            Details (repeating) band.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.DetailsBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Reports.DynamicBand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.DynamicBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc />
        </member>
        <member name="E:ManagedIrbis.Reports.DynamicBand.Rendering">
            <summary>
            Raised on band rendering.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.FilterBand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.FilterBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.FilterBand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.FilterBand.FilterExpression">
            <summary>
            Filter expression.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.FreeBand">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.FreeBand.DataSource">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.GroupBand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.GroupBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.GroupBand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.GroupBand.GroupExpression">
            <summary>
            Sort expression.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.HeaderBand">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.NewPageBand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.NewPageBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportBand.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="T:ManagedIrbis.Reports.ParagraphBand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ParagraphBand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ParagraphBand.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ParagraphBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportBand.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.ParagraphBand.StyleSpecification">
            <summary>
            Style name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.SortBand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.SortBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.SortBand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.SortBand.SortExpression">
            <summary>
            Sort expression.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.TableBand">
            <summary>
            Table band.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.TableBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.CompositeBand.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="T:ManagedIrbis.Reports.TotalBand">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.CellCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.Reports.ReportCell})">
            <summary>
            Add range of <see cref="T:ManagedIrbis.RecordField"/>s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.Clone">
            <summary>
            Создание клона коллекции.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.Find(System.Predicate{ManagedIrbis.Reports.ReportCell})">
            <summary>
            Find first occurrence of the field with given predicate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.FindAll(System.Predicate{ManagedIrbis.Reports.ReportCell})">
            <summary>
            Find all occurrences of the field
            with given predicate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.ClearItems">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.ClearItems"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.InsertItem(System.Int32,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.RemoveItem(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.SetItem(System.Int32,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.AsReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.AsReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.SetReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.SetReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.ThrowIfReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.ThrowIfReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.CellCollection.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Reports.CellCollection.Band">
            <summary>
            Band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.CellCollection.Report">
            <summary>
            Record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.CellCollection.ReadOnly">
            <inheritdoc cref="P:AM.IReadOnly`1.ReadOnly"/>
        </member>
        <member name="T:ManagedIrbis.Reports.SectionBand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.SectionBand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.SectionBand.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportBand.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.SectionBand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.SectionBand.Body">
            <summary>
            Body bands.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.SectionBand.Footer">
            <summary>
            Footer band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.SectionBand.Header">
            <summary>
            Header band.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.DataCell">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportCell.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportCell.OnAfterCompute(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Called after <see cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportCell.OnBeforeCompute(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Called before <see cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportCell.Clone">
            <summary>
            Clone the cell.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Compute value of the cell.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Render the cell.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportCell.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportCell.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="E:ManagedIrbis.Reports.ReportCell.AfterCompute">
            <summary>
            Raised after <see cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Reports.ReportCell.BeforeCompute">
            <summary>
            Raised before <see cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportCell.Attributes">
            <summary>
            Attributes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportCell.Band">
            <summary>
            Band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportCell.Report">
            <summary>
            Report.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportCell.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.DataCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.DataCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.DataCell.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.DynamicCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.DynamicCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.DynamicCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="E:ManagedIrbis.Reports.DynamicCell.Computation">
            <summary>
            Raised on cell computation.
            </summary>
        </member>
        <member name="E:ManagedIrbis.Reports.DynamicCell.Rendering">
            <summary>
            Raised on cell rendering.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.HeaderCell">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.IndexCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IndexCell.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IndexCell.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IndexCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.IndexCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.IndexCell.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.PftCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.PftCell.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.PftCell.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.PftCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.PftCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.PftCell.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Reports.PftCell.Text">
            <summary>
            Script text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.RawPftCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RawPftCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="T:ManagedIrbis.Reports.RawTextCell">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.TextCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.TextCell.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.TextCell.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.TextCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.TextCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.TextCell.Text">
            <summary>
            Static text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RawTextCell.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RawTextCell.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RawTextCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.RawTextCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="T:ManagedIrbis.Reports.SimpleTextCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.SimpleTextCell.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.SimpleTextCell.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.SimpleTextCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.SimpleTextCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="T:ManagedIrbis.Reports.TotalCell">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.TotalCell.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.TotalCell.#ctor(System.Int32,System.Int32,ManagedIrbis.Reports.TotalFunction)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.TotalCell.#ctor(System.Int32,System.Int32,ManagedIrbis.Reports.TotalFunction,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.TotalCell.Compute(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Compute(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.TotalCell.Render(ManagedIrbis.Reports.ReportContext)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportCell.Render(ManagedIrbis.Reports.ReportContext)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.TotalCell.BandIndex">
            <summary>
            Band index.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.TotalCell.CellIndex">
            <summary>
            Cell index.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.TotalCell.Function">
            <summary>
            Function.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.TotalCell.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.TotalFunction">
            <summary>
            Function for <see cref="T:ManagedIrbis.Reports.TotalCell"/>.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.Count">
            <summary>
            Cell count.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.CountNonEmpty">
            <summary>
            Count of non-empty cells.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.CountUnique">
            <summary>
            Count of unique cells.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.Sum">
            <summary>
            Sum.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.Average">
            <summary>
            Average.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.Maximum">
            <summary>
            Maximum.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.Minimum">
            <summary>
            Minimum.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.StandardDeviation">
            <summary>
            Standard deviation.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.TotalFunction.Variation">
            <summary>
            Variation.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.CsvDriver">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportDriver">
            <summary>
            Abstract report driver.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <summary>
            Begin cell.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.BeginDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <summary>
            Begin document.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.BeginParagraph(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <summary>
            Begin row.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.BeginRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <summary>
            Begin row.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.BeginSection(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <summary>
            Begin section.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.BeginTable(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <summary>
            Begin table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.EndCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <summary>
            End cell.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.EndDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <summary>
            End document.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.EndParagraph(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <summary>
            End row.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <summary>
            End row.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.EndSection(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <summary>
            End section.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.EndTable(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <summary>
            End table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.NewPage(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <summary>
            Start new page.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.SetPrologue(System.String)">
            <summary>
            Set the document prologue.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)">
            <summary>
            Write the text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.WriteServiceText(ManagedIrbis.Reports.ReportContext,System.String)">
            <summary>
            Write service (specific) text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportDriver.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportDriver.Capabilities">
            <summary>
            Driver capabilities.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportDriver.Prologue">
            <summary>
            Prologue.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.CsvDriver.Separator">
            <summary>
            Field separator.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.CsvDriver.Quotes">
            <summary>
            Quotes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.CsvDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.CsvDriver.EndCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.CsvDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.CsvDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Reports.DatasetDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.DatasetDriver.BeginDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.DatasetDriver.BeginRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.DatasetDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.DatasetDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.DatasetDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.DatasetDriver.DataSet">
            <summary>
            Dataset.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.DriverCapability">
            <summary>
            Capabilities of the <see cref="T:ManagedIrbis.Reports.ReportDriver"/>.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.FontFace">
            <summary>
            Arial, Times, Courier etc.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.FontSize">
            <summary>
            Font size.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.FontDecoration">
            <summary>
            Bold, Italic, Underline.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.FontColor">
            <summary>
            Red, Green, Blue.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.ParagraphAlignment">
            <summary>
            Left, Right, Center, Justify.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.Image">
            <summary>
            Pictures.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.Table">
            <summary>
            Table.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.Section">
            <summary>
            Section.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.CellBorders">
            <summary>
            Cell borders.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverCapability.CellSpan">
            <summary>
            Cell span.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.DriverManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverManager.Csv">
            <summary>
            CSV driver.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverManager.Dataset">
            <summary>
            Dataset driver.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverManager.Html">
            <summary>
            HTML driver.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverManager.Latex">
            <summary>
            LaTex driver.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverManager.Markdown">
            <summary>
            Markdown driver.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverManager.PlainText">
            <summary>
            Plain text driver.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.DriverManager.Rtf">
            <summary>
            RTf driver.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.DriverManager.GetDriver(System.String,System.Boolean)">
            <summary>
            Get <see cref="T:ManagedIrbis.Reports.ReportDriver"/> by name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.DriverManager.Registry">
            <summary>
            Registry.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.HtmlDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.HtmlDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.HtmlDriver.BeginDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.HtmlDriver.BeginRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.HtmlDriver.EndCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.HtmlDriver.EndDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.HtmlDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Reports.HtmlDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Reports.HtmlDriver.Borders">
            <summary>
            Table borders visible?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.LatexDriver">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.LoggingDriver">
            <summary>
            Logging driver for report debugging.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.LoggingDriver.#ctor(ManagedIrbis.Reports.ReportDriver)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.LoggingDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.LoggingDriver.BeginDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.LoggingDriver.BeginRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.LoggingDriver.EndCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.EndCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.LoggingDriver.EndDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.EndDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.LoggingDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.LoggingDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.LoggingDriver.InnerDriver">
            <summary>
            Inner driver.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.MarkdownDriver">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.PlainTextDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.PlainTextDriver.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.PlainTextDriver.BeginParagraph(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginParagraph(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.PlainTextDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.PlainTextDriver.EndCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.EndCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.PlainTextDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.PlainTextDriver.CellDelimiter">
            <summary>
            Cell delimiter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.PlainTextDriver.RowDelimiter">
            <summary>
            Row delimiter.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.RtfDriver">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RtfDriver.BeginDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.RtfDriver.BeginParagraph(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginParagraph(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.RtfDriver.EndDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.EndDocument(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.IrbisReport)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.RtfDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.BeginCell(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportCell)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.RtfDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.EndRow(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.RtfDriver.NewPage(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.NewPage(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Reports.ReportBand)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.RtfDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.Write(ManagedIrbis.Reports.ReportContext,System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.RtfDriver.WriteServiceText(ManagedIrbis.Reports.ReportContext,System.String)">
            <inheritdoc cref="M:ManagedIrbis.Reports.ReportDriver.WriteServiceText(ManagedIrbis.Reports.ReportContext,System.String)"/>
        </member>
        <member name="T:ManagedIrbis.Reports.IReportRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IReportRenderer.RenderCell(ManagedIrbis.Reports.ReportCell)">
            <summary>
            Render the cell.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.IrbisReport">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IrbisReport.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IrbisReport.Render(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Render the report.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IrbisReport.LoadJsonFile(System.String)">
            <summary>
            Load report from the JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IrbisReport.LoadShortJson(System.String)">
            <summary>
            Load report from the JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IrbisReport.SaveJson(System.String)">
            <summary>
            Save the report to specified file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IrbisReport.SaveShortJson(System.String)">
            <summary>
            Save the report to specified file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.IrbisReport.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.IrbisReport.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Reports.IrbisReport.Attributes">
            <summary>
            Attributes.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.IrbisReport.Body">
            <summary>
            Report body band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.IrbisReport.Footer">
            <summary>
            Footer band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.IrbisReport.Header">
            <summary>
            Header band.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.IrbisReport.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.RecordFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordFilter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordFilter.#ctor(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordFilter.#ctor(ManagedIrbis.Client.IrbisProvider,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordFilter.CheckRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Check the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordFilter.CheckResult(System.String)">
            <summary>
            Check text result.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordFilter.FilterRecords(System.Collections.Generic.IEnumerable{ManagedIrbis.MarcRecord})">
            <summary>
            Filter records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordFilter.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Reports.RecordFilter.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.RecordFilter.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.RecordSorter">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordSorter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordSorter.#ctor(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordSorter.#ctor(ManagedIrbis.Client.IrbisProvider,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordSorter.SortRecords(System.Collections.Generic.IEnumerable{ManagedIrbis.MarcRecord})">
            <summary>
            Sort records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.RecordSorter.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Reports.RecordSorter.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.RecordSorter.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.BackColor">
            <summary>
            Background color.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Black">
            <summary>
            Black color.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Blue">
            <summary>
            Blue color.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Bold">
            <summary>
            Bold.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Borders">
            <summary>
            Borders.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Column">
            <summary>
            Column offset.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.FontName">
            <summary>
            Font name (family).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.FontSize">
            <summary>
            Font size.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.ForeColor">
            <summary>
            Foreground color.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Gray">
            <summary>
            Gray color.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Green">
            <summary>
            Green color.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.HorizontalAlign">
            <summary>
            Horizontal alignment.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Italic">
            <summary>
            Italic.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Left">
            <summary>
            Left justify.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Red">
            <summary>
            Red color.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Row">
            <summary>
            Row offset.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Right">
            <summary>
            Right justify.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Span">
            <summary>
            Cell merge.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Underline">
            <summary>
            Underline.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.VerticalAlign">
            <summary>
            Vertical alignment.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.Width">
            <summary>
            Width.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportAttribute.WrapText">
            <summary>
            Text wrapping.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportAttributes">
            <summary>
            Attributes for cell, band, report.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportAttributes.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportComputeEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportComputeEventArgs.#ctor(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportComputeEventArgs.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportComputeEventArgs.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportContext.#ctor(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportContext.OnRendering">
            <summary>
            Raise <see cref="E:ManagedIrbis.Reports.ReportContext.Rendering"/> event.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportContext.Clone">
            <summary>
            Clone the context.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportContext.Clone(System.Collections.Generic.IEnumerable{ManagedIrbis.MarcRecord})">
            <summary>
            Clone the context with new record list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportContext.Push">
            <summary>
            Push the context.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportContext.SetDriver(ManagedIrbis.Reports.ReportDriver)">
            <summary>
            Set text driver for the context.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportContext.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportContext.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="E:ManagedIrbis.Reports.ReportContext.Rendering">
            <summary>
            Raised on rendering bands.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportContext.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportContext.CurrentRecord">
            <summary>
            Current record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportContext.Driver">
            <summary>
            Text driver.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportContext.Index">
            <summary>
            Record index.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportContext.Records">
            <summary>
            Records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportContext.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportContext.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportContext.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportRenderingEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportRenderingEventArgs.#ctor(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportRenderingEventArgs.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportEventArgs.#ctor(ManagedIrbis.Reports.ReportContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportEventArgs.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportOutput">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportOutput.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportOutput.Clear">
            <summary>
            Clear the output.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportOutput.TrimEnd">
            <summary>
            Trim end of text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportOutput.Write(System.String)">
            <summary>
            Write text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportOutput.Text">
            <summary>
            Result text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportRunner">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportRunner.RunReport(ManagedIrbis.Reports.IrbisReport,ManagedIrbis.Reports.ReportSettings)">
            <summary>
            Run the report.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportSettings.LoadFromFile(System.String)">
            <summary>
            Load <see cref="T:ManagedIrbis.Reports.ReportSettings"/>
            from specified file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportSettings.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.Assemblies">
            <summary>
            Assemblies to load.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.DriverName">
            <summary>
            Name of the <see cref="T:ManagedIrbis.Reports.ReportDriver"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.DriverSettings">
            <summary>
            Settings for driver.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.Filter">
            <summary>
            Record filter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.OutputFile">
            <summary>
            Output file name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.PageSettings">
            <summary>
            Page settings.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.PrinterName">
            <summary>
            Printer to send report to.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.ProviderName">
            <summary>
            Name of <see cref="T:ManagedIrbis.Client.IrbisProvider"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.ProviderSettings">
            <summary>
            Settings for provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.RegisterDriver">
            <summary>
            Register <see cref="T:ManagedIrbis.Reports.ReportDriver"/>
            before report building.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportSettings.RegisterProvider">
            <summary>
            <see cref="T:ManagedIrbis.Client.IrbisProvider"/> to register
            before report building.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportUtility.GetFormatter(ManagedIrbis.Reports.ReportContext,System.String)">
            <summary>
            Get PFT formatter for the report context.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportUtility.ListBandTypes">
            <summary>
            List band types.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportUtility.ListCellTypes">
            <summary>
            List cell types.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportUtility.SetHeight(ManagedIrbis.Reports.IAttributable,System.Int32)">
            <summary>
            Set height of the object.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportUtility.SetWidth(ManagedIrbis.Reports.IAttributable,System.Int32)">
            <summary>
            Set width of the object.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportUtility.SetVariables(ManagedIrbis.Reports.ReportContext,ManagedIrbis.Pft.PftFormatter)">
            <summary>
            Set variables for <see cref="T:ManagedIrbis.Pft.PftFormatter"/>.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportVariable">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariable.#ctor(System.String,System.Object)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariable.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariable.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Reports.ReportVariable.Name">
            <summary>
            Name of the variable.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportVariable.Value">
            <summary>
            Value of the variable.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportVariableManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariableManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariableManager.DumpVariables(System.IO.TextWriter)">
            <summary>
            Dump all the variables.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariableManager.GetAllVariables">
            <summary>
            Get all variables.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariableManager.GetExistingVariable(System.String)">
            <summary>
            Get existing variable with the specified name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariableManager.GetOrCreateVariable(System.String)">
            <summary>
            Get existing or create new variable with given name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariableManager.SetVariable(System.String,System.Object)">
            <summary>
            Set the variable value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportVariableManager.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportVariableManager.Registry">
            <summary>
            Variable registry.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportTest">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportTest.DescriptionFileName">
            <summary>
            Description file name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportTest.ExpectedFileName">
            <summary>
            Expected result file name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportTest.InputFileName">
            <summary>
            Input file name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Reports.ReportTest.RecordFileName">
            <summary>
            Record file name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTest.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTest.IsDirectoryContainsTest(System.String)">
            <summary>
            Whether the directory contains test?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTest.Run(System.String)">
            <summary>
            Run the test.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTest.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTest.Folder">
            <summary>
            Folder name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportTester">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTester.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTester.DiscoverTests">
            <summary>
            Discover tests.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTester.RunTest(ManagedIrbis.Reports.ReportTest)">
            <summary>
            Run the test.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTester.RunTests">
            <summary>
            Run the tests.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTester.SetEnvironment(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Set environment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Reports.ReportTester.WriteResults(System.String)">
            <summary>
            Write test results to the file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTester.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTester.Folder">
            <summary>
            Folder name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTester.Tests">
            <summary>
            Tests.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTester.Results">
            <summary>
            Results.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Reports.ReportTestResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.Duration">
            <summary>
            Duration.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.Failed">
            <summary>
            Test failed?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.FinishTime">
            <summary>
            Finish time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.Name">
            <summary>
            Name of the test.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.StartTime">
            <summary>
            Start time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.Tokens">
            <summary>
            Tokens.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.Expected">
            <summary>
            Output text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.Output">
            <summary>
            Output text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Reports.ReportTestResult.Exception">
            <summary>
            Exception text (if any).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Requests.RequestStatus">
            <summary>
            Commonly used request statuses.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestStatus.Unfulfilled">
            <summary>
            Unfulfilled request.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestStatus.Fulfilled">
            <summary>
            Fulfilled request.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestStatus.Reserved">
            <summary>
            Reserved request.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestStatus.Rejected">
            <summary>
            Rejected request.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.FoundLine">
            <summary>
            Line in list of found documents.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Materialized">
            <summary>
            Whether the line is materialized?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.SerialNumber">
            <summary>
            Serial number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Icon">
            <summary>
            Icon.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Selected">
            <summary>
            Selected by user.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.Sort">
            <summary>
            For list sorting.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundLine.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.ISearchTree">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)">
            <summary>
            Find records for the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ISearchTree.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)">
            <summary>
            Replace specified child to another.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Parent">
            <summary>
            Parent node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Children">
            <summary>
            Children of the node.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Value">
            <summary>
            Value of the node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.AddItem(`0)">
            <summary>
            Add item.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.IsComplex">
            <summary>
            Is complex expression?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.Separator">
            <summary>
            Item separator.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.Items">
            <summary>
            Items.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.Parent">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Parent"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.Children">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Children"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.ComplexLevel`1.Value">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Value"/>
        </member>
        <member name="T:ManagedIrbis.Search.SearchContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchContext.#ctor(ManagedIrbis.Search.SearchManager,ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchContext.Manager">
            <summary>
            Search manager.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchContext.Provider">
            <summary>
            Providr.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchQueryLexer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryLexer.Tokenize(System.String)">
            <summary>
            Tokenize the text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchQueryUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryUtility.RequireSyntax(System.String,System.String)">
            <summary>
            Require syntax element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryUtility.ExtractTerms(ManagedIrbis.Search.Infrastructure.SearchProgram)">
            <summary>
            Extract search terms from the query.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchTerm">
            <summary>
            Leaf node of AST.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTerm.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTerm.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTerm.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Parent">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Parent"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Term">
            <summary>
            K=keyword
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Tail">
            <summary>
            $ or @
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Context">
            <summary>
            /(tag,tag,tag)
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Children">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Children"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTerm.Value">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Value"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel1">
            <summary>
            level0 . level0
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel1.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel2">
            <summary>
            level1 (F) level1
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel2.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel2.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel3">
            <summary>
            level2 (G) level2
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel3.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel3.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel4">
            <summary>
            level3 * level3
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel4.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel4.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel5">
            <summary>
            level4 ^ level4
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel5.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel5.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel6">
            <summary>
            level5 + level5
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel6.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel6.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel7">
            <summary>
            ( level6 )
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel7.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel7.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel7.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchReference">
            <summary>
            #N
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchReference.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchReference.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchReference.Parent">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Parent"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchReference.Number">
            <summary>
            Number.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchProgram">
            <summary>
            Root of the syntax tree.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchProgram.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchProgram.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchProgram.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchProgram.Parent">
            <summary>
            No parent.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchProgram.EntryPoint">
            <summary>
            Program entry point - root of syntax tree.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchProgram.ManagedIrbis#Search#Infrastructure#ISearchTree#Children">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Children"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchProgram.ManagedIrbis#Search#Infrastructure#ISearchTree#Value">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Value"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchToken">
            <summary>
            Token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchToken.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchToken.#ctor(ManagedIrbis.Search.Infrastructure.SearchTokenKind,System.Int32,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchToken.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchToken.Kind">
            <summary>
            Token kind.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchToken.Position">
            <summary>
            Token position.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchToken.Text">
            <summary>
            Token text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchTokenKind">
            <summary>
            Token kind.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.None">
            <summary>
            No tokens.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Term">
            <summary>
            K=word
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.LeftParenthesis">
            <summary>
            (
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Comma">
            <summary>
            ,
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.RightParenthesis">
            <summary>
            )
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Hash">
            <summary>
            #
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Plus">
            <summary>
            +
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Star">
            <summary>
            *
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Hat">
            <summary>
            ^
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.G">
            <summary>
            (G)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.F">
            <summary>
            (F)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Dot">
            <summary>
            .
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.Infrastructure.SearchTokenKind.Slash">
            <summary>
            /
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchTokenList">
            <summary>
            List of tokens.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.#ctor(System.Collections.Generic.IEnumerable{ManagedIrbis.Search.Infrastructure.SearchToken})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.MoveNext">
            <summary>
            Move to next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.RequireNext">
            <summary>
            Require next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.RequireNext(ManagedIrbis.Search.Infrastructure.SearchTokenKind)">
            <summary>
            Require next token.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchTokenList.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTokenList.Current">
            <summary>
            Current token.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTokenList.IsEof">
            <summary>
            EOF reached?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchTokenList.Length">
            <summary>
            How many tokens?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchLevel0">
            <summary>
            Term, reference or parenthesis.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel0.Find(ManagedIrbis.Search.SearchContext)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.Find(ManagedIrbis.Search.SearchContext)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel0.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)">
            <inheritdoc cref="M:ManagedIrbis.Search.Infrastructure.ISearchTree.ReplaceChild(ManagedIrbis.Search.Infrastructure.ISearchTree,ManagedIrbis.Search.Infrastructure.ISearchTree)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchLevel0.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Parent">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Parent"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Term">
            <summary>
            Term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Reference">
            <summary>
            Reference.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Parenthesis">
            <summary>
            Parenthesis.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Children">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Children"/>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchLevel0.Value">
            <inheritdoc cref="P:ManagedIrbis.Search.Infrastructure.ISearchTree.Value"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.TermLinkComparer">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByMfn">
            <summary>
            Compares two <see cref="T:ManagedIrbis.Search.TermLink"/>s by MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByMfn.Equals(ManagedIrbis.Search.TermLink,ManagedIrbis.Search.TermLink)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByMfn.GetHashCode(ManagedIrbis.Search.TermLink)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByTag">
            <summary>
            Compares two <see cref="T:ManagedIrbis.Search.TermLink"/>s by MFN
            and field tag.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByTag.Equals(ManagedIrbis.Search.TermLink,ManagedIrbis.Search.TermLink)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByTag.GetHashCode(ManagedIrbis.Search.TermLink)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByOccurrence">
            <summary>
            Compares two <see cref="T:ManagedIrbis.Search.TermLink"/>s by MFN,
            field tag and occurrence.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByOccurrence.Equals(ManagedIrbis.Search.TermLink,ManagedIrbis.Search.TermLink)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByOccurrence.GetHashCode(ManagedIrbis.Search.TermLink)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)"/>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByIndex">
            <summary>
            Compares two <see cref="T:ManagedIrbis.Search.TermLink"/>s by MFN,
            field tag, occurrence and index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByIndex.Equals(ManagedIrbis.Search.TermLink,ManagedIrbis.Search.TermLink)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)"/>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.TermLinkComparer.ByIndex.GetHashCode(ManagedIrbis.Search.TermLink)">
            <inheritdoc cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)"/>
        </member>
        <member name="T:ManagedIrbis.Search.KeywordPermutator">
            <summary>
            Permutates keywords in search query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.KeywordPermutator.#ctor(ManagedIrbis.IrbisAlphabetTable,ManagedIrbis.IrbisStopWords)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.KeywordPermutator.PermutateWords(System.String)">
            <summary>
            Permutate words from text
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.KeywordPermutator.AlphabetTable">
            <summary>
            Alphabet table.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.KeywordPermutator.StopWords">
            <summary>
            Stopword list.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.PostingParameters">
            <summary>
            Signature for <see cref="T:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.PostingParameters.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.PostingParameters.Clone">
            <summary>
            Clone the parameters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.PostingParameters.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.FirstPosting">
            <summary>
            First posting to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.NumberOfPostings">
            <summary>
            Number of postings to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.Term">
            <summary>
            Term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.PostingParameters.ListOfTerms">
            <summary>
            List of terms.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchManager.#ctor(ManagedIrbis.Client.IrbisProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchManager.LoadSearchScenarios(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Load search scenarios.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchManager.Search(System.String,System.String,System.String)">
            <summary>
            Search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchManager.Provider">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchManager.SearchHistory">
            <summary>
            Search history.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchParameters">
            <summary>
            Signature for <see cref="T:ManagedIrbis.Infrastructure.Commands.SearchCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.Clone">
            <summary>
            Clone the parameters.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.SearchParameters.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.FirstRecord">
            <summary>
            First record offset.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.FormatSpecification">
            <summary>
            Format specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.NumberOfRecords">
            <summary>
            Number of records.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.SearchExpression">
            <summary>
            Search query expression.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.SequentialSpecification">
            <summary>
            Specification of sequential search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.FilterSpecification">
            <summary>
            Specification for local filter.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchParameters.UtfFormat">
            <summary>
            Use UTF8 encoding for
            <see cref="P:ManagedIrbis.Search.SearchParameters.FormatSpecification"/>?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.Infrastructure.SearchQueryParser">
            <summary>
            Parse IRBIS query expression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.#ctor(ManagedIrbis.Search.Infrastructure.SearchTokenList)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseTerm">
            <summary>
            Leaf node.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel0">
            <summary>
            Term, Reference or Parenthesis
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel``2(System.Func{``1},ManagedIrbis.Search.Infrastructure.SearchTokenKind)">
            <summary>
            item separator item
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel1">
            <summary>
            level0 . level0
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel2">
            <summary>
            level1 (F) level1
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel3">
            <summary>
            level2 (G) level2
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel4">
            <summary>
            level3 * level3
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel5">
            <summary>
            level4 ^ level4
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel6">
            <summary>
            level5 + level5
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.ParseLevel7">
            <summary>
            ( tokens )
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.Infrastructure.SearchQueryParser.Parse">
            <summary>
            Parse the token list.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.Infrastructure.SearchQueryParser.Tokens">
            <summary>
            Tokens.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchResult">
            <summary>
            Search result.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchResult.FoundCount">
            <summary>
            Count of records found.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchResult.Query">
            <summary>
            Search query text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchSyntaxException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchSyntaxException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchSyntaxException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchSyntaxException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchUtility">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchUtility.MaxTermLength">
            <summary>
            Maximal term length (bytes, not characters!).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchUtility.SpecialSymbols">
            <summary>
            Special symbols.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchUtility.ConcatTerms(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Concatenate some terms together.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchUtility.EscapeQuotation(System.String)">
            <summary>
            Escape quotation mark for Web-IRBIS.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchUtility.TrimTerm(System.String)">
            <summary>
            Trim the term (if exceeds <see cref="F:ManagedIrbis.Search.SearchUtility.MaxTermLength"/>
            bytes).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchUtility.UnescapeQuotation(System.String)">
            <summary>
            Unescape quotation mark for Web-IRBIS.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchUtility.WrapTerm(System.String)">
            <summary>
            Wrap the term if needed.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.TermInfoEx">
            <summary>
            Extended search term info.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.TermInfo">
            <summary>
            Search term info
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.TermInfo"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.TrimPrefix(ManagedIrbis.Search.TermInfo[],System.String)">
            <summary>
            Trim prefix from terms.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfo.Count">
            <summary>
            Количество ссылок.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfo.Text">
            <summary>
            Поисковый термин.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfoEx.ParseEx(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfoEx.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfoEx.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Search.TermInfoEx.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Mfn">
            <summary>
            MFN записи с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Tag">
            <summary>
            Тег поля с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Occurrence">
            <summary>
            Повторение поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Index">
            <summary>
            Смещение от начала поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermInfoEx.Formatted">
            <summary>
            Расформатированная запись
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.TermParameters">
            <summary>
            Signature for <see cref="T:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermParameters.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.TermParameters"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermParameters.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.TermParameters.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Search.TermParameters.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.NumberOfTerms">
            <summary>
            Number of terms to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.ReverseOrder">
            <summary>
            Reverse order?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.StartTerm">
            <summary>
            Start term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermParameters.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ServerStat">
            <summary>
            IRBIS server stat
            </summary>
        </member>
        <member name="M:ManagedIrbis.ServerStat.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ServerStat.RunningClients">
            <summary>
            List of running client.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ServerStat.Unknown1">
            <summary>
            Unknown field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ServerStat.Unknown2">
            <summary>
            Unknown field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.ServerStat.TotalCommandCount">
            <summary>
            Total commands executed since server start.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Server.Commands.ServerCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.Commands.ServerCommand.#ctor(ManagedIrbis.Server.ServerContext)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.Commands.ServerCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.Commands.ServerCommand.Context">
            <summary>
            Context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Server.IrbisServerSocket">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.IrbisServerSocket.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
            Construction.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.IrbisServerSocket.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Server.IrbisServerSocket.Client">
            <summary>
            Client.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Server.IrbisServerWorker">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.IrbisServerWorker.#ctor(ManagedIrbis.Server.IrbisSocketServer,ManagedIrbis.Server.IrbisServerSocket)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.IrbisServerWorker.DoWork">
            <summary>
            Do the work.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.IrbisServerWorker.Server">
            <summary>
            Server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.IrbisServerWorker.Socket">
            <summary>
            Socket.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.IrbisServerWorker.Task">
            <summary>
            Task.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Server.ServerConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerConfiguration.FromIniFile(ManagedIrbis.Server.ServerIniFile)">
            <summary>
            Create server configuration from INI-file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerConfiguration.FromIniFile(System.String)">
            <summary>
            Create server configuration from INI file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerConfiguration.FromPath(System.String)">
            <summary>
            Create server configuration from path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerConfiguration.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Server.ServerConfiguration.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Server.ServerConfiguration.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Server.ServerConfiguration.AlphabetTablePath">
            <summary>
            Path for AlphabetTable (without extension).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerConfiguration.DataPath">
            <summary>
            Data path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerConfiguration.SystemPath">
            <summary>
            System path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerConfiguration.UpperCaseTable">
            <summary>
            Path for UpperCaseTable (without extension).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Server.ServerContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerContext.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Server.ServerContext.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Server.ServerContext.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.Address">
            <summary>
            Address.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.CommandCount">
            <summary>
            Command count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.Connected">
            <summary>
            Connection established time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.Id">
            <summary>
            Context identifier.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.LastActivity">
            <summary>
            Last activity time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.Server">
            <summary>
            Server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerContext.Workstation">
            <summary>
            Workstation.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Server.ServerIniFile">
            <summary>
            irbis_server.ini
            </summary>
        </member>
        <member name="F:ManagedIrbis.Server.ServerIniFile.Main">
            <summary>
            Main section name.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Server.ServerIniFile.Redirect">
            <summary>
            REDIRECT section name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.#ctor(AM.IO.IniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.GetValue(System.String,System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.GetValue(System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.GetValue``1(System.String,``0)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.GetValue``1(System.String)">
            <summary>
            Get value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.SetValue(System.String,System.String)">
            <summary>
            Set value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.SetValue``1(System.String,``0)">
            <summary>
            Set value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerIniFile.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.AlphabetTablePath">
            <summary>
            Путь на таблицу isisacw.
            </summary>
            <remarks>
            C:\IRBIS64\isisacw
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ClientList">
            <summary>
            Имя файла со списком клиентов с паролями для доступа к серверу.
            </summary>
            <remarks>
            client_m.mnu
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ClientTimeLive">
            <summary>
            Время жизни клиента без подтверждения (в мин.).
            По умочанию 0 – режим отключен.
            </summary>
            <remarks>
            30
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.DataPath">
            <summary>
            Путь к системным меню и параметрическим файлам БД.
            </summary>
            <remarks>
            C:\IRBIS64\DATAI\
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.EncryptPasswords">
            <summary>
            Шифровать профили клиентов.
            </summary>
            <remarks>
            0
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.FormatsCacheable">
            <summary>
            Включение кэширования при форматировании.
            Значение по умолчанию – 1.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.Ini">
            <summary>
            INI-file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.IPAddress">
            <summary>
            IP адрес сервера используется только для показа в таблице описателей.
            </summary>
            <remarks>
            127.0.0.1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.IPPort">
            <summary>
            IP порт сервера.
            </summary>
            <remarks>
            6666
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.KeepProcessAlive">
            <summary>
            Флаг разрешает серверу использовать процесс обработки многократно.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.LocalIPPort">
            <summary>
            Cигнал окончания процесса обработки посылается
            через TCP на порт 7778, а не как сообщение Windows.
            В этом случае RegisterWindowMessage игнорируется.
            </summary>
            <remarks>
            7778
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.MaxLogFileSize">
            <summary>
            Размер log-файла, байты.
            </summary>
            <remarks>
            1000000
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.MaxProcessCount">
            <summary>
            Максимально возможное число процессов обработки,
            если превышено - возвращается ошибка SERVER_OVERLOAD.
            По умолчанию = 20.
            </summary>
            <remarks>
            100
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.MaxProcessRequests">
            <summary>
            Максимально возможное число запросов
            к долгоживущему процессу обработки,
            после чего процесс автоматически прерывается.
            По умолчанию = 100.
            </summary>
            <remarks>
            1000
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.MaxServers">
            <summary>
            Максимальное число процессов обработки,
            которые сервер использует многократно
            (только если KEEP_PROCESS_ALIVE = 1).
            </summary>
            <remarks>
            30
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ProcessThreadsMonitor">
            <summary>
            Время мониторинга в сек. процессов и потоков
            на соответствие друг другу. Если 0 – режим отключен.
            10 сек по умолчанию.
            </summary>
            <remarks>
            60
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ProcessTimeLive">
            <summary>
            Максимальное время обработки запроса (в мин.)
            По умочанию 0 – режим отключен.
            </summary>
            <remarks>
            15
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.RecognizeClientAddress">
            <summary>
            Разрешать (определять) адрес машины клиента при регистрации.
            </summary>
            <remarks>
            0
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.RegisterWindowsMessage">
            <summary>
            Сигнал обмена сообщениями между сервером и процессами обработки
            регистрируется в системе WINDOWS и получает уникальный идентификатор.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ServiceName">
            <summary>
            (Не используется) Имя запускаемого сервисом WINDOWS
            сервера ИРБИС64. Это либо irbis_server.exe,
            либо server_64_console.exe.
            </summary>
            <remarks>
            irbis_server.exe
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.SuppressExceptions">
            <summary>
            Не выводить windows-сообщения о непредвиденных ошибках
            в процессах обработки server_64.exe. Этот параметр рекомендуется
            использовать, если во время эксплуатации сервера выводятся
            сообщения об ошибках в server_64.exe.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.SystemPath">
            <summary>
            Путь к системным INI-файлам.
            </summary>
            <remarks>
            C:\IRBIS64\
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ThreadsAvailable">
            <summary>
            Сервер может работать в режиме параллельной обработки
            чтения-записи запросов клиентов в многопотоковом режиме.
            Режим включается данным параметром.
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ThreadsAvailableRead">
            <summary>
            Читать запрос от клиента в потоке (по умолчанию 0).
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.ThreadsAvailableWrite">
            <summary>
            Послать ответ клиенту в потоке (по умолчанию 0).
            </summary>
            <remarks>
            1
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.UpperCaseTable">
            <summary>
            Путь и имя таблицы для перевода в верхний регистр.
            Значение по умолчанию – isisucw.
            </summary>
            <remarks>
            C:\IRBIS64\isisucw
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Server.ServerIniFile.WorkDir">
            <summary>
            Директория для сохранения временных файлов,
            используемых для межпроцессорного взаимодействия
            сервера и процессов обработки.
            </summary>
            <remarks>
            C:\IRBIS64\workdir
            Если на сервере установить флаг ОТЛАДКА, временные файлы
            не уничтожаются (следите за объемом физической памяти
            на диске и количеством файлов в директории).
            </remarks>
        </member>
        <member name="T:ManagedIrbis.Server.IrbisSocketServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.IrbisSocketServer.#ctor(ManagedIrbis.Server.ServerIniFile)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.IrbisSocketServer.ProcessLoop">
            <summary>
            Process loop.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.IrbisSocketServer.WaitForWorkers">
            <summary>
            Wait for workers (if any).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.IrbisSocketServer.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Server.IrbisSocketServer.IniFile">
            <summary>
            Ini file.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.IrbisSocketServer.Listener">
            <summary>
            TCP listener.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.IrbisSocketServer.StopSignal">
            <summary>
            Stop signal.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Server.IrbisSocketServer.Workers">
            <summary>
            Workers.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Server.ServerUtility">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.Server.ServerUtility.InclusionStart">
            <summary>
            Inclusion begin sign.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Server.ServerUtility.InclusionEnd">
            <summary>
            Inclusion end sign.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Server.ServerUtility.ExpandInclusion(System.String,System.String,System.String[])">
            <summary>
            Expand inclusion.
            </summary>
        </member>
        <member name="T:ManagedIrbis.StatDefinition">
            <summary>
            Signature for Stat command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Items">
            <summary>
            Items.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.SearchQuery">
            <summary>
            Search query specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.SequentialQuery">
            <summary>
            Optional query for sequential search.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.MfnList">
            <summary>
            List of MFN.
            </summary>
        </member>
        <member name="T:ManagedIrbis.StatDefinition.SortMethod">
            <summary>
            Sort method.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StatDefinition.SortMethod.None">
            <summary>
            Don't sort.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StatDefinition.SortMethod.Ascending">
            <summary>
            Ascending sort.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StatDefinition.SortMethod.Descending">
            <summary>
            Descending sort.
            </summary>
        </member>
        <member name="T:ManagedIrbis.StatDefinition.Item">
            <summary>
            Stat item.
            </summary>
        </member>
        <member name="M:ManagedIrbis.StatDefinition.Item.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Item.Field">
            <summary>
            Field (possibly with subfield) specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Item.Length">
            <summary>
            Maximum length of the value (truncation).
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Item.Count">
            <summary>
            Count of items to take.
            </summary>
        </member>
        <member name="P:ManagedIrbis.StatDefinition.Item.Sort">
            <summary>
            How to sort result.
            </summary>
        </member>
        <member name="T:ManagedIrbis.TableDefinition">
            <summary>
            Signature for Table command.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.DatabaseName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.Table">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.Headers">
            <summary>
            Table headers.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.Mod">
            <summary>
            Mode.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.SearchQuery">
            <summary>
            Search query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.MinMfn">
            <summary>
            Minimal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.MaxMfn">
            <summary>
            Maximal MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.SequentialQuery">
            <summary>
            Optional sequential query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.TableDefinition.MfnList">
            <summary>
            List of MFN.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Tables.AcquisitionTable">
            <summary>
            Описание таблицы для комплектования в ИРБИС64.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Tables.AcquisitionTable.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Tables.AcquisitionTable.TableName">
            <summary>
            1-я строка - имя таблицы.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.AcquisitionTable.SelectionMethod">
            <summary>
            2-я строка - способ отбора записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.AcquisitionTable.Worksheet">
            <summary>
            3-я строка - имя опросного рабочего листа,
            в котором задаются параметры для отбора записей
            и для построения значения модельного поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.AcquisitionTable.Format">
            <summary>
            4-я строка - формат.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.AcquisitionTable.Filter">
            <summary>
            5-я строка – формат, который «фильтрует» отобранные записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.AcquisitionTable.ModelField">
            <summary>
            6-я – формат для определения значения
            модельного поля с меткой 991.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Tables.HdrFile">
            <summary>
            Файл заголовков табличной формы ИРБИС64.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Tables.KeyDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.KeyDefinition.Length">
            <summary>
            Length of the key.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.KeyDefinition.Multiple">
            <summary>
            Multiple values allowed?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.KeyDefinition.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Tables.SelTabPar64">
            <summary>
            Файл описания таблиц для ИРБИС64 в директории БД CMPL.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Tables.SelTabPar64.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Tables.SelTabPar64.ParseStream(System.IO.TextReader)">
            <summary>
            Parse the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Tables.SelTabPar64.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Tables.SelTabPar64.Tables">
            <summary>
            Tables.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Tables.SrwFile">
            <summary>
            Файл сортировки таблицы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Tables.SrwFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.SrwFile.Keys">
            <summary>
            Key definitions.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Tables.TbuFile">
            <summary>
            Файл описания формы ИРБИС64.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.TbuFile.Encoding">
            <summary>
            FormatCode section.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.TbuFile.Table">
            <summary>
            Table section.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Tables.TbuFile.Header">
            <summary>
            Header section.
            </summary>
        </member>
        <member name="T:ManagedIrbis.UserInfo">
            <summary>
            Информация о зарегистрированном пользователе системы
            (по данным client_m.mnu).
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.Encode">
            <summary>
            Encode.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.UserInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Number">
            <summary>
            Номер по порядку.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Name">
            <summary>
            Логин.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Password">
            <summary>
            Пароль.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Cataloger">
            <summary>
            Доступность АРМ Каталогизатор.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Reader">
            <summary>
            АРМ Читатель.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Circulation">
            <summary>
            АРМ Книговыдача.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Acquisitions">
            <summary>
            АРМ Комплектатор.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Provision">
            <summary>
            АРМ Книгообеспеченность.
            </summary>
        </member>
        <member name="P:ManagedIrbis.UserInfo.Administrator">
            <summary>
            АРМ Администратор.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUtility.EncodePercentString(System.Byte[])">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUtility.DecodePercentString(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.Example">
            <summary>
            Example.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Example.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Example.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Example.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.Example.Number">
            <summary>
            Number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.Example.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.FieldSchema">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.FieldSchema.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.FieldSchema.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse given XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.FieldSchema.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.FieldSchema.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Display">
            <summary>
            Display.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Examples">
            <summary>
            Examples.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Indicator1">
            <summary>
            First indicator.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Indicator2">
            <summary>
            Second indicator.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Mandatory">
            <summary>
            Mandatory?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.MandatoryText">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.RelatedFields">
            <summary>
            Related fields
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Repeatable">
            <summary>
            Repeatable?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.RepeatableText">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.SubFields">
            <summary>
            Subfields.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.FieldSchema.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.IndicatorSchema">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.IndicatorSchema.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.IndicatorSchema.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.IndicatorSchema.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.IndicatorSchema.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.IndicatorSchema.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.IndicatorSchema.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.IndicatorSchema.Options">
            <summary>
            Options.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.MarcSchema">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.ParseDocument(System.Xml.Linq.XDocument)">
            <summary>
            Parse given XML document.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.ParseLocalXml(System.String)">
            <summary>
            Parse local XML file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.MarcSchema.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.MarcSchema.Fields">
            <summary>
            Fields.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.Option">
            <summary>
            Option.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Option.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Option.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.Option.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.Option.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.Option.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.RelatedField">
            <summary>
            Related field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.RelatedField.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.RelatedField.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.RelatedField.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.RelatedField.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.RelatedField.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.RelatedField.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.RelatedField.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.SchemaUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeBoolean(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get attribute boolean value for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeBoolean(System.Xml.Linq.XElement,System.String,System.Boolean)">
            <summary>
            Get attribute boolean value for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeCharacter(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get first char of attribute value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeInt32(System.Xml.Linq.XElement,System.String,System.Int32)">
            <summary>
            Get integer value for given attribute.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeText(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get attribute text for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetAttributeText(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Get attribute text for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetElementText(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Get attribute text for element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetInnerXml(System.Xml.Linq.XElement)">
            <summary>
            Get inner XML for the element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.GetInnerXml(System.Xml.Linq.XElement,System.String)">
            <summary>
            Get inner XML for child element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.ToBoolean(System.Xml.Linq.XAttribute)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SchemaUtility.ToJson(ManagedIrbis.Marc.Schema.MarcSchema)">
            <summary>
            Convert schema to JSON.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.Schema.SubFieldSchema">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SubFieldSchema.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parse XML element.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SubFieldSchema.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore object state from the given stream
            </summary>
        </member>
        <member name="M:ManagedIrbis.Marc.Schema.SubFieldSchema.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object stat to the given stream
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Code">
            <summary>
            Code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.CodeString">
            <summary>
            For serialization.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Display">
            <summary>
            Display.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Mandatory">
            <summary>
            Mandatory?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.MandatoryText">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.Repeatable">
            <summary>
            Repeatable?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Marc.Schema.SubFieldSchema.RepeatableText">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuFile">
            <summary>
            MNU file handling.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Menus.MenuFile.StopMarker">
            <summary>
            End of menu marker.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.#ctor(AM.Collections.NonNullCollection{ManagedIrbis.Menus.MenuEntry})">
            <summary>
            Internal constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.Add(System.String,System.String)">
            <summary>
            Adds the specified code and comment.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.TrimCode(System.String)">
            <summary>
            Trims the code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.FindEntry(System.String)">
            <summary>
            Finds the entry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.FindEntrySensitive(System.String)">
            <summary>
            Finds the entry (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetEntry(System.String)">
            <summary>
            Finds the entry.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetEntrySensitive(System.String)">
            <summary>
            Finds the entry (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetString(System.String,System.String)">
            <summary>
            Finds comment by the code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetString(System.String)">
            <summary>
            Finds comment by the code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetStringSensitive(System.String,System.String)">
            <summary>
            Finds comment by the code (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.GetStringSensitive(System.String)">
            <summary>
            Finds comment by the code (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseStream(System.IO.TextReader)">
            <summary>
            Parses the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Parses the local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseLocalFile(System.String)">
            <summary>
            Parses the local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseServerResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ParseServerResponse(System.String)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ReadFromServer(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read <see cref="T:ManagedIrbis.Menus.MenuFile"/> from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.SortEntries(ManagedIrbis.Menus.MenuSort)">
            <summary>
            Sorts the entries.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ToText">
            <summary>
            Builds text representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuFile.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuFile.FileName">
            <summary>
            Name of menu file -- for identification
            purposes only.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Menus.MenuFile.Entries">
            <summary>
            Gets the entries.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Menus.MenuUtility">
            <summary>
            MNU file extended handling.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.Add``1(ManagedIrbis.Menus.MenuFile,System.String,``0)">
            <summary>
            Adds the typed value with specified code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.CollectStrings(ManagedIrbis.Menus.MenuFile,System.String)">
            <summary>
            Collects the comments for code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.GetValue``1(ManagedIrbis.Menus.MenuFile,System.String,``0)">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.GetValueSensitive``1(ManagedIrbis.Menus.MenuFile,System.String,``0)">
            <summary>
            Gets the value (case sensitive).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.ToJson(ManagedIrbis.Menus.MenuFile)">
            <summary>
            Converts the menu to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.FromJson(System.String)">
            <summary>
            Restores the menu from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.SaveLocalJsonFile(ManagedIrbis.Menus.MenuFile,System.String)">
            <summary>
            Saves the menu to local JSON file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.ParseLocalJsonFile(System.String)">
            <summary>
            Parses the local json file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.ToTree(ManagedIrbis.Menus.MenuFile)">
            <summary>
            Convert MNU to TRE.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Menus.MenuUtility.ToXml(ManagedIrbis.Menus.MenuFile)">
            <summary>
            Converts the menu to XML.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ConnectCommand">
            <summary>
            Connect to the IRBIS64 server.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Commands.ConnectCommand.ResponseSpecification">
            <summary>
            Response specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ConnectCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ConnectCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Configuration">
            <summary>
            Server configuration file content
            (on successful connection).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Password">
            <summary>
            User password. If not specified,
            connection password used.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.Username">
            <summary>
            User name. If not specified,
            connection name used.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.ServerVersion">
            <summary>
            Server version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ConnectCommand.RequireConnection">
            <summary>
            Doesn't require connection.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand">
            <summary>
            Create new database on the server.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Database">
            <summary>
            Name for new database.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Description">
            <summary>
            Description of the database.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.ReaderAccess">
            <summary>
            Will the database be visible to reader?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.CreateDatabaseCommand.Template">
            <summary>
            Template database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.FormatCommand">
            <summary>
            Format records on IRBIS-server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.GetFormatResult(ManagedIrbis.Infrastructure.ServerResponse,System.Int32)">
            <summary>
            Get format result from server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.FormatCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.FormatSpecification">
            <summary>
            Format specification.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.MfnList">
            <summary>
            List of MFNs to format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.VirtualRecord">
            <summary>
            Virtual record to format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.UtfFormat">
            <summary>
            Use UTF-8 for <see cref="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.FormatSpecification"/>.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.FormatCommand.FormatResult">
            <summary>
            Result of the command.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ListFilesCommand">
            <summary>
            List server files.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.Specifications">
            <summary>
            File specification (can contain wildcards).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ListFilesCommand.Files">
            <summary>
            List of found files.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand">
            <summary>
            Read binary file from the server.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.Preamble">
            <summary>
            Preamble for binary data.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.File">
            <summary>
            File to read.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadBinaryFileCommand.Content">
            <summary>
            File content.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadFileCommand">
            <summary>
            Read text file(s) from the server
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.GetFileText(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Get file text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.Files">
            <summary>
            File list.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadFileCommand.Result">
            <summary>
            Retrieved text files.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand">
            <summary>
            Read postings for given term.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.ApplyParameters(ManagedIrbis.Search.PostingParameters)">
            <summary>
            Apply <see cref="T:ManagedIrbis.Search.PostingParameters"/>
            to the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.GatherParameters">
            <summary>
            Gather <see cref="T:ManagedIrbis.Search.PostingParameters"/>
            from the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.FirstPosting">
            <summary>
            First posting to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.NumberOfPostings">
            <summary>
            Number of postings to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Term">
            <summary>
            Term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.ListOfTerms">
            <summary>
            List of terms.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.Postings">
            <summary>
            Postings.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadPostingsCommand.GoodReturnCodes">
            <inheritdoc cref="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.GoodReturnCodes"/>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand">
            <summary>
            Read one record from the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.ThrowOnEmptyRecord">
            <summary>
            Throw <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"/>
            when empty record received/decoded.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.ThrowOnVerify">
            <summary>
            Throw <see cref="T:AM.VerificationException"/>
            when bad record received/decoded.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Lock">
            <summary>
            Need lock?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.VersionNumber">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.Record">
            <summary>
            Readed record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadRecordCommand.GoodReturnCodes">
            <inheritdoc cref="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.GoodReturnCodes"/>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand">
            <summary>
            Read terms from the search index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.ApplyParameters(ManagedIrbis.Search.TermParameters)">
            <summary>
            Apply the <see cref="T:ManagedIrbis.Search.TermParameters"/>
            to the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.GatherParameters">
            <summary>
            Create <see cref="T:ManagedIrbis.Search.TermParameters"/>
            from the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.NumberOfTerms">
            <summary>
            Number of terms to return.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.ReverseOrder">
            <summary>
            Reverse order?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.StartTerm">
            <summary>
            Start term.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.Terms">
            <summary>
            Terms.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.ReadTermsCommand.GoodReturnCodes">
            <inheritdoc cref="P:ManagedIrbis.Infrastructure.Commands.AbstractCommand.GoodReturnCodes"/>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UniversalCommand">
            <summary>
            Command with unfixed functionality.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalCommand.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalCommand.#ctor(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalCommand.CheckResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Check the server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalCommand.AcceptAnyResponse">
            <summary>
            Accept any server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalCommand.Arguments">
            <summary>
            Arguments.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalCommand.CommandCode">
            <summary>
            Command code
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand">
            <summary>
            Universal command with text lines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.#ctor(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.#ctor(ManagedIrbis.IrbisConnection,System.String,System.String[],System.Text.Encoding)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.CommandCode">
            <summary>
            Command code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.UniversalTextCommand.TextLines">
            <summary>
            Lines.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.WriteFileCommand">
            <summary>
            Write text file(s) to the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.CreateQuery">
            <summary>
            Create client query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <summary>
            Execute the command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteFileCommand.Files">
            <summary>
            File list.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand">
            <summary>
            Create of update existing record in the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Actualize">
            <summary>
            Need actualize?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Lock">
            <summary>
            Need lock?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.MaxMfn">
            <summary>
            New max MFN (result of command execution).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.DontParseResponse">
            <summary>
            Don't parse server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordCommand.Record">
            <summary>
            Record to write.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand">
            <summary>
            Create or update many records simultaneously.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.CreateQuery">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.CreateQuery"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.Commands.AbstractCommand.Execute(ManagedIrbis.Infrastructure.ClientQuery)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.Actualize">
            <summary>
            Need actualize?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.Lock">
            <summary>
            Need lock?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.Commands.WriteRecordsCommand.References">
            <summary>
            Records to write.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.CommandCode">
            <summary>
            Command codes for protocol.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ExclusiveDatabaseLock">
            <summary>
            Получение признака монопольной блокировки базы данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.RecordList">
            <summary>
            Получение списка удаленных, неактуализированных
            и заблокированных записей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ServerInfo">
            <summary>
            Получение версии сервера.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.DatabaseStat">
            <summary>
            Получение статистики по базе данных.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.FormatIsoGroup">
            <summary>
            IRBIS_FORMAT_ISO_GROUP.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommand4">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GlobalCorrection">
            <summary>
            Глобальная корректировка.
            </summary>
            <remarks>IRBIS_GBL</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.SaveRecordGroup">
            <summary>
            Сохранение группы записей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.Print">
            <summary>
            Печать.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UpdateIniFile">
            <summary>
            Запись параметров в ini-файл, расположенный на сервере.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ImportIso">
            <summary>
            IRBIS_IMPORT_ISO.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.RegisterClient">
            <summary>
            Регистрация клиента на сервере.
            </summary>
            <remarks>IRBIS_REG</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnregisterClient">
            <summary>
            Разрегистрация клиента.
            </summary>
            <remarks>IRBIS_UNREG</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadRecord">
            <summary>
            Чтение записи, ее расформатирование.
            </summary>
            <remarks>IRBIS_READ</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UpdateRecord">
            <summary>
            Сохранение записи.
            </summary>
            <remarks>IRBIS_UPDATE</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnlockRecord">
            <summary>
            Разблокировка записи.
            </summary>
            <remarks>IRBIS_RUNLOCK</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ActualizeRecord">
            <summary>
            Актуализация записи.
            </summary>
            <remarks>IRBIS_RECIFUPDATE</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.FormatRecord">
            <summary>
            Форматирование записи или группы записей.
            </summary>
            <remarks>IRBIS_SVR_FORMAT</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadTerms">
            <summary>
            Получение терминов и ссылок словаря, форматирование записей
            </summary>
            <remarks>IRBIS_TRM_READ</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadPostings">
            <summary>
            Получение ссылок для термина (списка терминов).
            </summary>
            <remarks>IRBIS_POSTING</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.CorrectVirtualRecord">
            <summary>
            Глобальная корректировка виртуальной записи.
            </summary>
            <remarks>IRBIS_GBL_RECORD</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.Search">
            <summary>
            Поиск записей с опциональным форматированием
            (также последовательный поиск).
            </summary>
            <remarks>IRBIS_SEARCH</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadDocument">
            <summary>
            Получение/сохранение текстового файла, расположенного
            на сервере (группы текстовых файлов).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.Backup">
            <summary>
            IRBIS_BACKUP.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.Nop">
            <summary>
            Пустая операция. Периодическое подтверждение
            соединения с сервером.
            </summary>
            <remarks>IRBIS_NOOP</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetMaxMfn">
            <summary>
            Получение максимального MFN для базы данных.
            </summary>
            <remarks>IRBIS_MAXMFN</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReadTermsReverse">
            <summary>
            Получение терминов и ссылок словаря в обратном порядке.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnlockRecords">
            <summary>
            Разблокирование записей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.FullTextSearch">
            <summary>
            Полнотекстовый поиск.
            </summary>
            <remarks>IRBIS_FULLTEXT_SEARCH</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.EmptyDatabase">
            <summary>
            Опустошение базы данных.
            </summary>
            <remarks>IRBIS_DB_EMPTY</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.CreateDatabase">
            <summary>
            Создание базы данных.
            </summary>
            <remarks>IRBIS_DB_NEW</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnlockDatabase">
            <summary>
            Разблокирование базы данных.
            </summary>
            <remarks>IRBIS_DB_UNLOCK</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetRecordPostings">
            <summary>
            Чтение ссылок для заданного MFN.
            </summary>
            <remarks>IRBIS_MFN_POSTINGS</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.DeleteDatabase">
            <summary>
            Удаление базы данных.
            </summary>
            <remarks>IRBIS_DB_DELETE</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReloadMasterFile">
            <summary>
            Реорганизация мастер-файла.
            </summary>
            <remarks>IRBIS_RELOAD_MASTER</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ReloadDictionary">
            <summary>
            Реорганизация словаря.
            </summary>
            <remarks>IRBIS_RELOAD_DICT</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.CreateDictionary">
            <summary>
            Создание поискового словаря заново.
            </summary>
            <remarks>IRBIS_CREATE_DICT</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetServerStat">
            <summary>
            Получение статистики работы сервера.
            </summary>
            <remarks>IRBIS_STAT</remarks>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommandPlus2">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetProcessList">
            <summary>
            Получение списка запущенных процессов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommandPlus4">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommandPlus5">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.UnknownCommandPlus6">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.SetUserList">
            <summary>
            Сохранение списка пользователей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.RestartServer">
            <summary>
            Перезапуск сервера.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.GetUserList">
            <summary>
            Получение списка пользователей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.CommandCode.ListFiles">
            <summary>
            Получение списка файлов на сервере.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ClientQuery">
            <summary>
            Client network packet with query to the server.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.ClientQuery.Delimiter">
            <summary>
            Line delimiter in packet header.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.Add(System.Object)">
            <summary>
            Add arbitrary argument.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.AddAnsi(System.String)">
            <summary>
            Add ANSI text line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.AddUtf8(System.String)">
            <summary>
            Add UTF8 text line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.Clear">
            <summary>
            Clear argument list.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.Dump(System.IO.TextWriter)">
            <summary>
            Dump the query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.EncodePacket">
            <summary>
            Build the packet.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ClientQuery.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.CommandCode">
            <summary>
            Command code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.Workstation">
            <summary>
            Код АРМ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.ClientID">
            <summary>
            Client identifier.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.CommandNumber">
            <summary>
            Sequential command number.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.UserLogin">
            <summary>
            User login.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.UserPassword">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ClientQuery.Arguments">
            <summary>
            Command arguments.
            </summary>
            <remarks>List can be empty.</remarks>
        </member>
        <member name="T:ManagedIrbis.DatabaseInfo">
            <summary>
            Информация о базе данных ИРБИС
            </summary>
        </member>
        <member name="F:ManagedIrbis.DatabaseInfo.ItemDelimiter">
            <summary>
            Разделитель элементов
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.Describe">
            <summary>
            Describe the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ParseServerResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ParseMenu(System.String[])">
            <summary>
            Разбор файла меню
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ShouldSerializeMaxMfn">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.DatabaseInfo.MaxMfn"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ShouldSerializeLogicallyDeletedRecords">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.DatabaseInfo.LogicallyDeletedRecords"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ShouldSerializePhysicallyDeletedRecords">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.DatabaseInfo.PhysicallyDeletedRecords"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ShouldSerializeNonActualizedRecords">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.DatabaseInfo.NonActualizedRecords"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ShouldSerializeLockedRecords">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.DatabaseInfo.LockedRecords"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ShouldSerializeDatabaseLocked">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.DatabaseInfo.DatabaseLocked"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ShouldSerializeReadOnly">
            <summary>
            Should serialize <see cref="P:ManagedIrbis.DatabaseInfo.ReadOnly"/>?
            </summary>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.DatabaseInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.Name">
            <summary>
            Имя базы данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.Description">
            <summary>
            Описание базы данных
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.MaxMfn">
            <summary>
            Максимальный MFN.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.LogicallyDeletedRecords">
            <summary>
            Список логически удаленных записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.PhysicallyDeletedRecords">
            <summary>
            Список физически удаленных записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.NonActualizedRecords">
            <summary>
            Список неактуализированных записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.LockedRecords">
            <summary>
            Список заблокированных записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.DatabaseLocked">
            <summary>
            Флаг монопольной блокировки базы данных.
            </summary>
        </member>
        <member name="P:ManagedIrbis.DatabaseInfo.ReadOnly">
            <summary>
            База данных только для чтения.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisDate">
            <summary>
            Строка с ИРБИС-датой yyyyMMdd.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisDate.DefaultFormat">
            <summary>
            Формат конверсии по умолчанию.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisDate.ConversionFormat">
            <summary>
            Формат конверсии.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.#ctor">
            <summary>
            Конструктор.
            </summary>
            <remarks>
            Инициализирует сегодняшней датой.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.#ctor(System.DateTime)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.ConvertDateToString(System.DateTime)">
            <summary>
            Преобразование даты в строку.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.ConvertStringToDate(System.String)">
            <summary>
            Преобразование строки в дату.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.op_Implicit(System.String)~ManagedIrbis.IrbisDate">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.op_Implicit(System.DateTime)~ManagedIrbis.IrbisDate">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.op_Implicit(ManagedIrbis.IrbisDate)~System.String">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.op_Implicit(ManagedIrbis.IrbisDate)~System.DateTime">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisDate.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.IrbisDate.TodayText">
            <summary>
            Text representation of today date.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisDate.Text">
            <summary>
            В виде текста.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisDate.Date">
            <summary>
            В виде даты.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisEditMask">
            <summary>
            Маска ввода в ИРБИС (Delphi)
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.Match(System.String)">
            <summary>
            Сравнение текста с маской.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEditMask.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisEditMask.Mask">
            <summary>
            Маска
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisEncoding">
            <summary>
            Encoding used by IRBIS
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEncoding.ByName(System.String)">
            <summary>
            Get encoding by name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEncoding.FromConfig(System.String)">
            <summary>
            Get encoding from config file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEncoding.RelaxUtf8">
            <summary>
            Relax UTF-8 decoder, do not throw exceptions
            on invalid bytes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEncoding.SetAnsiEncoding(System.Text.Encoding)">
            <summary>
            Override default single-byte encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisEncoding.SetOemEncoding(System.Text.Encoding)">
            <summary>
            Override OEM encoding.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisEncoding.Ansi">
            <summary>
            Default single-byte encoding.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisEncoding.Oem">
            <summary>
            OEM encoding.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisEncoding.Utf8">
            <summary>
            UTF8 encoding.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisFormat">
            <summary>
            Common format related stuff.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.All">
            <summary>
            Format ALL.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.Brief">
            <summary>
            BRIEF format.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.Ibis">
            <summary>
            IBIS format.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.Informational">
            <summary>
            Informational format.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.Optimized">
            <summary>
            Optimized format.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisFormat.ForbiddenCharacters">
            <summary>
            Запрещенные символы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisFormat.RemoveComments(System.String)">
            <summary>
            Remove comments from the format.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisFormat.PrepareFormat(System.String)">
            <summary>
            Prepare the dynamic format string.
            </summary>
            <remarks>Dynamic format string
            mustn't contains comments and
            string delimiters (no matter
            real or IRBIS).
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisFormat.VerifyFormat(System.String,System.Boolean)">
            <summary>
            Verify format string.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Identifiers.Isbn">
            <summary>
            Всё, связанное с ISBN.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.Isbn.StandardHyphen">
            <summary>
            Стандартный знак дефис.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Isbn.CheckControlDigit(System.String,System.Char)">
            <summary>
            Проверяет контрольную цифру ISBN.
            </summary>
            <param name="isbn">Проверяемая строка.</param>
            <param name="hyphen">Символ дефиса.</param>
            <returns><c>true</c> если вычисленная и фактическая 
            контрольные цифры совпадают.</returns>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Isbn.CheckControlDigit(System.String)">
            <summary>
            Проверяем контрольную цифру.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Isbn.CheckHyphens(System.String,System.Char)">
            <summary>
            Проверяем дефисы.
            </summary>
            <param name="isbn">Проверяемая строка.</param>
            <param name="hyphen">Символ дефиса.</param>
            <returns><c>true</c> если дефисы расставлены правильно.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Isbn.CheckHyphens(System.String)">
            <summary>
            Проверяет дефисы.
            </summary>
            <param name="isbn">Проверяемая строка.</param>
            <returns><c>true</c> если дефисы расставлены правильно.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Isbn.Validate(System.String,System.Boolean)">
            <summary>
            Проверяет ISBN.
            </summary>
            <returns><c>true</c> если ISBN написан правильно.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Isbn.ToEan13(System.String)">
            <summary>
            Конвертирует ISBN в штрих-код EAN13.
            </summary>
            <param name="isbn">ISBN.</param>
            <returns>Штрих-код.</returns>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Isbn.FromEan13(System.String)">
            <summary>
            Получает (суррогатный) ISBN из штрих-кода EAN13.
            </summary>
            <param name="ean">штрих-код.</param>
            <returns>Суррогатный ISBN.</returns>
        </member>
        <member name="T:ManagedIrbis.Identifiers.Issn">
            <summary>
            Всё, связанное с ISSN.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Identifiers.Issn.Coefficients">
            <summary>
            Coefficients for control digit calculation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Issn.ComputeCheckDigit(System.Char[])">
            <summary>
            Compute check digit.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Issn.CheckControlDigit(System.Char[])">
            <summary>
            Check control digit.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Identifiers.Issn.CheckControlDigit(System.String)">
            <summary>
            Check control digit.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.FileSpecification">
            <summary>
            Irbis file name.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.#ctor(ManagedIrbis.IrbisPath,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.#ctor(ManagedIrbis.IrbisPath,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.Equals(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Compare with other <see cref="T:ManagedIrbis.Infrastructure.FileSpecification"/>
            instance.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.FileSpecification.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.BinaryFile">
            <summary>
            Is the file binary or text?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.Path">
            <summary>
            Path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.FileSpecification.Contents">
            <summary>
            File contents (when we want write the file).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.NetworkDebugger">
            <summary>
            Debugger for network protocol.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.NetworkDebugger.Break(System.Byte[],System.Byte[])">
            <summary>
            Break point.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.NetworkDebugger.DumpResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Dump server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.NetworkDebugger.Log(System.String)">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.NetworkDebugger.Log(System.String[])">
            <summary>
            Write line.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.NetworkDebugger.Active">
            <summary>
            Active?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.IrbisNetworkException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkException.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"/> class.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"/>
            class with a specified error message.
            </summary>
            <param name="message">
            A message that describes the error.</param>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"/> class
            with a specified error message and a reference
            to the inner exception that is the cause
            of this exception.
            </summary>
            <param name="message">The error message
            that explains the reason for the exception.</param>
            <param name="innerException">The exception
            that is the cause of the current exception.
            If the <paramref name="innerException"/> parameter
            is not a null reference, the current exception
            is raised in a catch block that handles
            the inner exception.</param>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.IrbisNetworkUtility">
            <summary>
            Вспомогательные методы для формирования сетевых
            пакетов и их парсинга.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.DumpBytes(System.Byte[],System.IO.TextWriter)">
            <summary>
            Dump bytes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.DumpBytes(System.Byte[])">
            <summary>
            Dump bytes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeAny(System.IO.Stream,System.Object)">
            <summary>
            Записываем любой объект (диспетчеризация).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeBoolean(System.IO.Stream,System.Boolean)">
            <summary>
            Записываем булево значение в виде 0/1.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeBytes(System.IO.Stream,System.Byte[])">
            <summary>
            Записываем буфер.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeDelimiter(System.IO.Stream)">
            <summary>
            Encode line delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeFileSpecification(System.IO.Stream,ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Encode <see cref="T:ManagedIrbis.Infrastructure.FileSpecification"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeInt32(System.IO.Stream,System.Int32)">
            <summary>
            Записываем целое.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeInt64(System.IO.Stream,System.Int64)">
            <summary>
            Записываем целое.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeObject(System.IO.Stream,System.Object)">
            <summary>
            Записываем произвольные объект.
            ToString + кодировка ANSI.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeRecord(System.IO.Stream,ManagedIrbis.MarcRecord)">
            <summary>
            Запись в кодировке UTF.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeRecordReference(System.IO.Stream,ManagedIrbis.RecordReference)">
            <summary>
            <see cref="T:ManagedIrbis.MarcRecord"/> with database prefix.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeString(System.IO.Stream,System.String)">
            <summary>
            Записываем строку в кодировке ANSI.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeTextWithEncoding(System.IO.Stream,AM.Text.TextWithEncoding)">
            <summary>
            Записываем строку в произвольной кодировке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.EncodeWorkstation(System.IO.Stream,ManagedIrbis.IrbisWorkstation)">
            <summary>
            Записываем код АРМ.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.IrbisNetworkUtility.ThrowIfEmptyRecord(ManagedIrbis.MarcRecord,ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Throw <see cref="T:ManagedIrbis.Infrastructure.IrbisNetworkException"/>
            if the record is empty.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.ServerResponse">
            <summary>
            Server response network packet.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.ServerResponse.Delimiter">
            <summary>
            Разделитель.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.#ctor(ManagedIrbis.IrbisConnection,System.Byte[],System.Byte[],System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnsiString">
            <summary>
            Get ANSI string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnsiStrings(System.Int32)">
            <summary>
            Get array of ANSI strings.
            </summary>
            <returns><c>null</c>if there is not enough lines in
            the server response.</returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnsiStringsPlus(System.Int32)">
            <summary>
            Get array of ANSI strings.
            </summary>
            <returns><c>null</c>if there is no lines in
            the server response, otherwise missing lines will
            be added (as empty lines).</returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetDump">
            <summary>
            Get dump.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetDumpAsString">
            <summary>
            Get dump as string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetEmptyResponse(ManagedIrbis.IrbisConnection)">
            <summary>
            Get empty response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetInt32(System.Int32)">
            <summary>
            Get 32-bit integer value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetReader(System.Text.Encoding)">
            <summary>
            Get <see cref="T:System.IO.TextReader"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetReaderCopy(System.Text.Encoding)">
            <summary>
            Get <see cref="T:System.IO.TextReader"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Get <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetReturnCode">
            <summary>
            Get return code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnswerCopy(System.Int32,System.Int32)">
            <summary>
            Get copy of the answer packet span.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetAnswerCopy">
            <summary>
            Get copy of the answer packet.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetStream">
            <summary>
            Get stream with current state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetStreamCopy">
            <summary>
            Get stream with current state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetStream(System.Int32,System.Int32)">
            <summary>
            Get stream from the specified point.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetUtfString">
            <summary>
            Get UTF-8 string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.GetUtfStrings(System.Int32)">
            <summary>
            Get array of UTF-8 strings.
            </summary>
            <returns><c>null</c>if there is not enough lines in
            the server response.</returns>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RefuseAnReturnCode">
            <summary>
            Refuse an return code (for commands that
            doesn't return any codes).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RemainingAnsiStrings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RemainingAnsiText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RemainingUtfStrings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RemainingUtfText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RequireAnsiString">
            <summary>
            Require ANSI string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RequireUtfString">
            <summary>
            Require UTF8 string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.RequireInt32">
            <summary>
            Require 32-bit integer.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.ServerResponse.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.CommandCode">
            <summary>
            Команда клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.Connection">
            <summary>
            Connection used.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.ClientID">
            <summary>
            Идентификатор клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.CommandNumber">
            <summary>
            Порядковый номер команды.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.AnswerSize">
            <summary>
            Размер ответа сервера в байтах.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.ServerVersion">
            <summary>
            Server version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.ReturnCode">
            <summary>
            Код возврата.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.RawAnswer">
            <summary>
            Raw server response.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.RawRequest">
            <summary>
            Raw client request.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.ServerResponse.Relaxed">
            <summary>
            Relax return code check.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.PacketInterpreter">
            <summary>
            Network packet interpreter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.#ctor(System.Byte[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.GetAnsiString">
            <summary>
            Get ANSI string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.GetObject(System.Char)">
            <summary>
            GetObject by code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.GetUtfString">
            <summary>
            Get Utf string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.GetInt32">
            <summary>
            Get 32-bit integer value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.Interpret(System.Byte[],System.String)">
            <summary>
            Interpret the packet.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RemainingAnsiStrings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RemainingAnsiText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RemainingUtfStrings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RemainingUtfText">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RequireAnsiString">
            <summary>
            Require ANSI string.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.PacketInterpreter.RequireInt32">
            <summary>
            Require 32-bit integer.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Infrastructure.PacketInterpreter.Stream">
            <summary>
            Stream.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.SimpleClientSocket">
            <summary>
            Naive client socket implementation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.SimpleClientSocket.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.SimpleClientSocket.AbortRequest">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.AbstractClientSocket.AbortRequest"/>
        </member>
        <member name="M:ManagedIrbis.Infrastructure.SimpleClientSocket.ExecuteRequest(System.Byte[])">
            <inheritdoc cref="M:ManagedIrbis.Infrastructure.AbstractClientSocket.ExecuteRequest(System.Byte[])"/>
        </member>
        <member name="T:ManagedIrbis.Pooling.IrbisConnectionPool">
            <summary>
            Пул соединений с сервером.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.#ctor(System.Int32,System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.AcquireConnection">
            <summary>
            Требование нового подключения к серверу.
            </summary>
            <remarks>Может подвесить поток на неопределённое время.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.Execute(System.Action{ManagedIrbis.IrbisConnection})">
            <summary>
            Исполнение некоторых действий на подключении из пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.Execute``1(System.Action{ManagedIrbis.IrbisConnection,``0},``0)">
            <summary>
            Исполнение некоторых действий на подключении из пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.Execute``2(System.Func{ManagedIrbis.IrbisConnection,``1,``0},``1)">
            <summary>
            Исполнение некоторых действий на подключении из пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.ReleaseConnection(ManagedIrbis.IrbisConnection)">
            <summary>
            Возвращение подключения в пул.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.ReleaseIdleConnections">
            <summary>
            Закрывает простаивающие соединения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.WaitForAllConnections">
            <summary>
            Ожидание закрытия всех активных подключений.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisConnectionPool.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisConnectionPool.DefaultConnectionString">
            <summary>
            Строка подключения по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisConnectionPool.DefaultCapacity">
            <summary>
            Количество одновременных подключений по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisConnectionPool.Capacity">
            <summary>
            Количество одновременных подключений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisConnectionPool.ConnectionString">
            <summary>
            Строка подключения к серверу.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pooling.IrbisPoolGuard">
            <summary>
            Следит за своевременным возвращением соединения в пул.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisPoolGuard.#ctor(ManagedIrbis.Pooling.IrbisConnectionPool)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisPoolGuard.op_Implicit(ManagedIrbis.Pooling.IrbisPoolGuard)~ManagedIrbis.IrbisConnection">
            <summary>
            Неявное преобразование.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.IrbisPoolGuard.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisPoolGuard.Connection">
            <summary>
            Отслеживаемое подключение.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Pooling.IrbisPoolGuard.Pool">
            <summary>
            Отслеживаемый пул подключений.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Pooling.PoolUtility">
            <summary>
            Утилиты для работы пулом соединений.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.PoolUtility.ReadRecord(ManagedIrbis.Pooling.IrbisConnectionPool,System.Int32)">
            <summary>
            Чтение записи с помощью пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.PoolUtility.Search(ManagedIrbis.Pooling.IrbisConnectionPool,System.String,System.Object[])">
            <summary>
            Поиск в каталоге с помощью пула.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Pooling.PoolUtility.WriteRecord(ManagedIrbis.Pooling.IrbisConnectionPool,ManagedIrbis.MarcRecord)">
            <summary>
            Сохранение записей с помощью пула.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Quality.RuleUtility">
            <summary>
            Utility routines for quality rules.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleUtility.GetFieldBySpec(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Get field by specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleUtility.IsBadCharacter(System.Char)">
            <summary>
            Whether the character is bad?
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleUtility.BadCharacterPosition(System.String)">
            <summary>
            Индекс первого найденного плохого символа в строке
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleUtility.RenumberFields(ManagedIrbis.MarcRecord)">
            <summary>
            Renumber fields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RuleUtility.RenumberFields(ManagedIrbis.MarcRecord,System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Renumber fields.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RuleUtility.BadCharacters">
            <summary>
            Плохие символы, которые не должны встречаться в записях.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.DictionaryType">
            <summary>
            Тип словаря для соответствующего поиска
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.DictionaryType.Standard">
            <summary>
            Стандартный словарь, содержащий алфавитный
            список терминов с указанием количества ссылок
            для каждого из них.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.DictionaryType.Explanatory">
            <summary>
            Словарь, дополнительно к стандартным данным содержащий
            пояснения (раскодировку) для каждого термина; применяется
            для терминов, которые представляют собой кодированную
            информацию (например, "Страна издания") и для которых
            имеется соответствующий справочник (файл с расширением
            MNU - например, STR.MNU для кодов стран); в этом случае
            соответствующий справочник указывается
            в параметре ItemMenuNN.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.DictionaryType.Rubricator">
            <summary>
            Специальный вид компоненты "Словарь" для
            Тематического рубрикатора.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.FoundItem">
            <summary>
            Found item.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.FoundItem.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ConvertToMfn(System.Collections.Generic.List{ManagedIrbis.Search.FoundItem})">
            <summary>
            Convert to MFN array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ConvertToText(System.Collections.Generic.List{ManagedIrbis.Search.FoundItem})">
            <summary>
            Convert to string array.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ParseLine(System.String)">
            <summary>
            Parse text line.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ParseServerResponse(ManagedIrbis.Infrastructure.ServerResponse,System.Int32)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Restore the object state from the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save the object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.Verify(System.Boolean)">
            <summary>
            Verify the object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.FoundItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundItem.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.FoundItem.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchLogicType">
            <summary>
            Какие логические операторы могут использоваться
            для данного вида поиска.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.Or">
            <summary>
            только логика ИЛИ
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.OrAnd">
            <summary>
            логика ИЛИ и И
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.OrAndNot">
            <summary>
            логика ИЛИ, И, НЕТ (по умолчанию)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.OrAndNotField">
            <summary>
            логика ИЛИ, И, НЕТ, И (в поле)
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.SearchLogicType.OrAndNotPhrase">
            <summary>
            логика ИЛИ, И, НЕТ, И (в поле), И (фраза)
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.SearchScenario">
            <summary>
            Search scenario
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.SearchScenario"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.ParseIniFile(AM.IO.IniFile)">
            <summary>
            Parse INI file for scenarios.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Search.SearchScenario.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Name">
            <summary>
            Название поиска.
            </summary>
            <remarks>Например: ItemName5=Заглавие</remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Prefix">
            <summary>
            Префикс для соответствующих терминов в словаре.
            </summary>
            <remarks>Например: ItemPref5=Т=</remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.DictionaryType">
            <summary>
            Тип словаря для соответствующего поиска.
            </summary>
            <remarks>Например: ItemDictionType8=1</remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.MenuName">
            <summary>
            Имя файла справочника.
            </summary>
            <remarks>Например: ItemMenu8=str.mnu</remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.OldFormat">
            <summary>
            Имя формата (без расширения).
            </summary>
            <remarks>Параметр  служит для указания имени формата
            (без расширения), который используется при показе
            термина словаря полностью (Приложение 4 п.13).
            Используется только в ИРБИС32, т.е. в ИРБИС64
            не используется.
            Используется для длинных терминов (больше 30 символов).
            Например: ItemF8For5=!F8TIT.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Correction">
            <summary>
            Способ Корректировки по словарю.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Truncation">
            <summary>
            Исходное положение переключателя "Усечение".
            </summary>
            <remarks>Параметр  определяет исходное положение
            переключателя "Усечение" для данного вида поиска
            (0 - нет; 1 - да) - действует только в АРМе "Каталогизатор".
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Hint">
            <summary>
            Текст подсказки/предупреждения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.ModByDicAuto">
            <summary>
            Параметр пока не задействован.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Logic">
            <summary>
            Логические операторы.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Advance">
            <summary>
            Правила автоматического расширения поиска
            на основе авторитетного файла или тезауруса.
            </summary>
            <remarks>Параметр имеет следующую структуру:
            Dbname,Prefix,Format.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Search.SearchScenario.Format">
            <summary>
            Имя формата показа документов.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.TermPosting">
            <summary>
            Ссылка на терм.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.TermPosting.EmptyArray">
            <summary>
            Empty array of the <see cref="T:ManagedIrbis.Search.TermPosting"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.TermPosting"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Save object state to the specified stream.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.Verify(System.Boolean)">
            <summary>
            Verify object state.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermPosting.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Mfn">
            <summary>
            MFN записи с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Tag">
            <summary>
            Тег поля с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Occurrence">
            <summary>
            Повторение поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Count">
            <summary>
            Количество повторений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermPosting.Text">
            <summary>
            Результат форматирования.
            </summary>
        </member>
        <member name="T:ManagedIrbis.StandardDatabases">
            <summary>
            Стандартные базы данных, входящие
            в дистрибутив ИРБИС64.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StandardDatabases.ElectronicCatalog">
            <summary>
            Электронный каталог.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StandardDatabases.Acquisition">
            <summary>
            Комплектование.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StandardDatabases.Readers">
            <summary>
            Читатели.
            </summary>
        </member>
        <member name="F:ManagedIrbis.StandardDatabases.Requests">
            <summary>
            Заказы на литературу.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Testing.AbstractTest">
            <summary>
            Abstract test.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Testing.AbstractTest.Write(System.String)">
            <summary>
            Write some text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Testing.AbstractTest.Write(System.String,System.Object[])">
            <summary>
            Write some formatted text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Testing.AbstractTest.Write(System.Object)">
            <summary>
            Write some object.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Testing.AbstractTest.WriteError(System.String)">
            <summary>
            Write some error text.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Testing.AbstractTest.WriteError(System.String,System.Object[])">
            <summary>
            Write some formatted error text.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.AbstractTest.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.AbstractTest.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.AbstractTest.DataPath">
            <summary>
            Path to test data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.AbstractTest.Context">
            <summary>
            Test execution context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Testing.TestClassAttribute">
            <summary>
            Attribute to mark test classes.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Testing.TestMethodAttribute">
            <summary>
            Attribute to mark test methods.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Testing.TestContext">
            <summary>
            Context of <see cref="T:ManagedIrbis.Testing.AbstractTest"/> execution.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Testing.TestContext.#ctor(AM.Text.Output.AbstractOutput)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.TestContext.Duration">
            <summary>
            Duration.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.TestContext.Failed">
            <summary>
            Test failed?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.TestContext.FinishTime">
            <summary>
            Finish time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.TestContext.Name">
            <summary>
            Name of the test.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.TestContext.Output">
            <summary>
            Output channel.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.TestContext.StartTime">
            <summary>
            Start time.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Testing.TestContext.Text">
            <summary>
            Output text.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Transform.RecordTransformContext">
            <summary>
            Context of <see cref="T:ManagedIrbis.MarcRecord"/> transformation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Transform.RecordTransformContext.#ctor(ManagedIrbis.MarcRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Transform.RecordTransformContext.Source">
            <summary>
            Source record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Transform.RecordTransformContext.Target">
            <summary>
            Target record.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.EditContext">
            <summary>
            Context for field/subfield editor.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Provider">
            <summary>
            Provider.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Record">
            <summary>
            Record to be edited.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Tag">
            <summary>
            Tag of the field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Code">
            <summary>
            Code of the subfield (if present).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Repeat">
            <summary>
            Repeat (0 = all/unknown).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Item">
            <summary>
            Worksheet item.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Source">
            <summary>
            Source lines (at least one).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Result">
            <summary>
            Result lines (at least one).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.Accept">
            <summary>
            Whether user accepted result.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.EditContext.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.EditMode">
            <summary>
            Field/subfield edit mode.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Default">
            <summary>
            Ввод без дополнительной обработки.
            Простая строка ввода
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Menu">
            <summary>
            Ввод через простое (не иерархическое)
            меню (справочник).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Dictionary">
            <summary>
            Ввод через поисковый словарь.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Rubricator">
            <summary>
            Ввод через рубрикатор ГРНТИ.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Multiline">
            <summary>
            Ввод через оконный редактор
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.SubSheet">
            <summary>
            Ввод через вложенный рабочий лист.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Tree">
            <summary>
            Ввод через иерархический справочник
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Switch">
            <summary>
            Ввод с использованием переключателей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.ExternalProgram">
            <summary>
            Ввод с использованием внешней программы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Template">
            <summary>
            Ввод на основе маски (шаблона).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.AuthorityFile">
            <summary>
            Ввод через авторитетный файл.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Thesaurus">
            <summary>
            Ввод через тезаурус.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.ExternalFile">
            <summary>
            Ввод через обращение к внешнему файлу.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.Navigator">
            <summary>
            Ввод на основе ИРБИС-Навигатора.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.ExternalDll">
            <summary>
            Ввод с помощью режима (функции) пользователя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.DynamicMenu">
            <summary>
            Ввод с помощью динамического справочника.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.ServerResource">
            <summary>
            Ввод с помощью файловых ресурсов системы ИРБИС.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Worksheet.EditMode.TableMode">
            <summary>
            Table mode (F3).
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisOpt">
            <summary>
            OPT files handling
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisOpt.Wildcard">
            <summary>
            Подстановочный символ.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.CompareChar(System.Char,System.Char)">
            <summary>
            Сравнение символов с учётом подстановочного
            знака '+'.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.CompareString(System.String,System.String)">
            <summary>
            Сравнение строк с учётом подстановочного знака '+'.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.GetWorksheet(ManagedIrbis.MarcRecord)">
            <summary>
            Получаем рабочий лист для указанной записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.LoadFromOptFile(System.String)">
            <summary>
            Загружаем из OPT-файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.ParseText(System.IO.TextReader)">
            <summary>
            Разбор текста.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.SelectWorksheet(System.String)">
            <summary>
            Выбор рабочего листа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.WriteOptFile(System.String)">
            <summary>
            Создание OPT-файла по описанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.WriteOptFile(System.IO.TextWriter)">
            <summary>
            Создание OPT-файла по описанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.SetWorksheetLength(System.Int32)">
            <summary>
            Установка длины названия рабочего листа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.SetWorksheetTag(System.String)">
            <summary>
            Установка поля для рабочего листа.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Validate(System.Boolean)">
            <summary>
            Проверка на валидность. OPT должен содержать
            одну строку с плюсами. Она должна быть последней.
            OPT не должен быть пустым. Длина ключей в элементах
            не должна превышать <see cref="P:ManagedIrbis.IrbisOpt.WorksheetLength"/>.
            Не должно быть одинаковых ключей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.Items">
            <summary>
            Элементы списка.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.WorksheetLength">
            <summary>
            Length of worksheet.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.WorksheetTag">
            <summary>
            Tag that identifies worksheet.
            Common used: 920
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisOpt.Item">
            <summary>
            Элемент словаря.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.Compare(System.String)">
            <summary>
            Сравнение строки с ключом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.Parse(System.String)">
            <summary>
            Разбор строки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.IrbisOpt.Item.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.Item.Key">
            <summary>
            Ключ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisOpt.Item.Value">
            <summary>
            Значение.
            </summary>
        </member>
        <member name="T:ManagedIrbis.ParFile">
            <summary>
            PAR files handling
            </summary>
        </member>
        <member name="F:ManagedIrbis.ParFile.Extension">
            <summary>
            Standard extension for PAR files.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.ReadDictionary(System.IO.TextReader)">
            <summary>
            Разбор PAR-файла на строчки вида 1=.\datai\ibis.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.ParseFile(System.String)">
            <summary>
            Разбор файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.ParseText(System.IO.TextReader)">
            <summary>
            Разбор текста.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.ToDictionary">
            <summary>
            Преобразование в словарь.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.WriteFile(System.String)">
            <summary>
            Запись в файл
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.WriteText(System.IO.TextWriter)">
            <summary>
            Запись в поток.
            </summary>
        </member>
        <member name="M:ManagedIrbis.ParFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.ParFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.ParFile.Verify(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.ParFile.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.ParFile.XrfPath">
            <summary>
            Путь к файлу XRF
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.MstPath">
            <summary>
            Путь к файлу MST
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.CntPath">
            <summary>
            Путь к файлу CNT
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.N01Path">
            <summary>
            Путь к файлу N01
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.N02Path">
            <summary>
            Путь к файлу N02
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.L01Path">
            <summary>
            Путь к файлу L01
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.L02Path">
            <summary>
            Путь к файлу L02
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.IfpPath">
            <summary>
            Путь к файлу IFP
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.AnyPath">
            <summary>
            Путь к файлу ANY
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.PftPath">
            <summary>
            Путь к файлам PFT
            </summary>
        </member>
        <member name="P:ManagedIrbis.ParFile.ExtPath">
            <summary>
            Расположение внешних объектов (поле 951)
            </summary>
            <remarks>Параметр появился в версии 2012</remarks>
        </member>
        <member name="T:ManagedIrbis.IrbisPath">
            <summary>
            Задает путь к файлам Ирбис
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.System">
            <summary>
            Общесистемный путь
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.Data">
            <summary>
            путь размещения сведений о базах данных сервера ИРБИС64
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.MasterFile">
            <summary>
            путь на мастер-файл базы данных
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.InvertedFile">
            <summary>
            путь на словарь базы данных
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.ParameterFile">
            <summary>
            путь на параметрию базы данных
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.FullText">
            <summary>
            Полный текст
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisPath.InternalResource">
            <summary>
            Внутренний ресурс
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisProcessInfo">
            <summary>
            Информация о запущенном на сервере процессе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisProcessInfo.Parse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisProcessInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.IrbisProcessInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.IrbisProcessInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.Number">
            <summary>
            Просто порядковый номер процесса.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.IPAddress">
            <summary>
            С каким клиентом взаимодействует.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.Name">
            <summary>
            Логин оператора.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.ClientID">
            <summary>
            Идентификатор клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.Workstation">
            <summary>
            Тип АРМ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.Started">
            <summary>
            Время запуска.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.LastCommand">
            <summary>
            Последняя выполненная (или выполняемая) команда.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.CommandNumber">
            <summary>
            Порядковый номер последней команды.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.ProcessID">
            <summary>
            Идентификатор процесса.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisProcessInfo.State">
            <summary>
            Состояние.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisSearchQuery">
            <summary>
            IRBIS search query.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisSearchQuery.ForbiddenCharacters">
            <summary>
            Запрещенные символы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisSearchQuery.PrepareQuery(System.String)">
            <summary>
            Подготавливает строку запроса,
            заменяя запрещённые символы на пробелы.
            </summary>
        </member>
        <member name="T:ManagedIrbis.MarcRecord">
            <summary>
            MARC record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.#ctor(ManagedIrbis.MarcRecord)">
            <summary>
            Конструктор для клонирования.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.Clone">
            <summary>
            Создание "глубокой" копии записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.Compare(ManagedIrbis.MarcRecord,ManagedIrbis.MarcRecord)">
            <summary>
            Compares two records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FM(System.String)">
            <summary>
            Получить текст поля до разделителей подполей
            первого повторения поля с указанной меткой.
            </summary>
            <param name="tag">Метка поля.</param>
            <returns>Значение поля или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FMA(System.String)">
            <summary>
            Текст всех полей с указанным тегом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FM(System.String,System.Char)">
            <summary>
            Текст первого подполя с указанным тегом и кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FMA(System.String,System.Char)">
            <summary>
            Текст всех подполей с указанным тегом и кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.FR(System.String)">
            <summary>
            Internal formatting the record/field/subfield.
            </summary>
            <remarks>
            Do not use external resources!
            </remarks>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetDatabase(System.String)">
            <summary>
            Assign database name to the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetMfn(System.Int32)">
            <summary>
            Assign MFN to the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetStatus(ManagedIrbis.RecordStatus)">
            <summary>
            Change status of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetVersion(System.Int32)">
            <summary>
            Assign version number to the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeDatabase">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeHostName">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeMfn">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeStatus">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ShouldSerializeVersion">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.AsReadOnly">
            <summary>
            Creates read-only clone of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.SetReadOnly">
            <summary>
            Marks the record as read-only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ThrowIfReadOnly">
            <summary>
            Throws if read only.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.MarcRecord.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.HostName">
            <summary>
            Hostname of IRBIS-server.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Database">
            <summary>
            Name of database that the records belongs to.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Mfn">
            <summary>
            MFN записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Status">
            <summary>
            Статус записи: удалена, блокирована и т.д.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Version">
            <summary>
            Версия записи. Нумеруется с нуля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.PreviousOffset">
            <summary>
            Смещение предыдущей версии записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Fields">
            <summary>
            Поля записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Deleted">
            <summary>
            Признак удалённой записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.SortKey">
            <summary>
            Используется при сортировке записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Index">
            <summary>
            Индекс документа.
            Используется для идентификации записей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.Modified">
            <summary>
            Whether the record was modified?
            </summary>
        </member>
        <member name="P:ManagedIrbis.MarcRecord.ReadOnly">
            <summary>
            Whether the record read-only?
            </summary>
        </member>
        <member name="T:ManagedIrbis.MarcRecordUtility">
            <summary>
            Extension methods for <see cref="T:ManagedIrbis.MarcRecord"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.BeginUpdate(ManagedIrbis.MarcRecord)">
            <summary>
            Begin update the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.BeginUpdate(ManagedIrbis.MarcRecord,System.Int32)">
            <summary>
            Begin update the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.EndUpdate(ManagedIrbis.MarcRecord)">
            <summary>
            End of the record update.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.HaveField(ManagedIrbis.MarcRecord,System.String[])">
            <summary>
            Есть хотя бы одно поле с указанными тегами?
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.HaveNotField(ManagedIrbis.MarcRecord,System.String[])">
            <summary>
            Нет ни одного поля с указанными тегами?
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.ParseAllFormat(System.String,ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse ALL-formatted records in server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.ParseAllFormat(System.String,ManagedIrbis.IrbisConnection,System.String[])">
            <summary>
            Parse ALL-formatted records in server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.SetField(ManagedIrbis.MarcRecord,System.String,System.String)">
            <summary>
            Sets the field.
            </summary>
            <returns></returns>
            <remarks>Устанавливает значение только для
            первого повторения поля (если в записи их несколько)!
            </remarks>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.SetField(ManagedIrbis.MarcRecord,System.String,System.Int32,System.String)">
            <summary>
            Установка поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.SetSubField(ManagedIrbis.MarcRecord,System.String,System.Char,System.String)">
            <summary>
            Установка подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.SetSubField(ManagedIrbis.MarcRecord,System.String,System.Int32,System.Char,System.Int32,System.String)">
            <summary>
            Установка подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.ToJson(ManagedIrbis.MarcRecord)">
            <summary>
            Convert the <see cref="T:ManagedIrbis.MarcRecord"/> to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.MarcRecordUtility.ToYaml(ManagedIrbis.MarcRecord)">
            <summary>
            Convert the <see cref="T:ManagedIrbis.MarcRecord"/> to YAML.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Infrastructure.IrbisReturnCode">
            <summary>
            Коды возвратов из Irbis64.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.NoError">
            <summary>
            Успешное завершение, нет ошибки.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.Zero">
            <summary>
            Успешное завершение, нет ошибки.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.UserError">
            <summary>
            Прервано пользователем или общая ошибка.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.Busy">
            <summary>
            Не завершена обработка предыдущего запроса.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.Unknown">
            <summary>
            Неизвестная ошибка.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.BadBufferSize">
            <summary>
            Выходной буфер мал.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.WrongMfn">
            <summary>
            Заданный MFN вне пределов БД.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.TermNotExist">
            <summary>
            Нет запрошенного значения в поисковом индексе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.LastTermInList">
            <summary>
            Была считана последняя запись в поисковом индексе.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.FirstTermInList">
            <summary>
            Возвращена первая подходящая запись в поисковом
            индексе вместо запрошенного значения.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.DatabaseLocked">
            <summary>
            Монопольная блокировка БД.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.RecordLocked">
            <summary>
            Запись заблокирована на ввод.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.RecordDeleted">
            <summary>
            Запись логически удалена.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.PhysicallyDeleted">
            <summary>
            Запись физически удалена.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.VersionError">
            <summary>
            При записи обнаружено несоответствие версий.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientFormatError">
            <summary>
            Ошибка в клиентском файле формата.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ServerExecutionError">
            <summary>
            Ошибка выполнения на сервере.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.AnswerLengthError">
            <summary>
            Несоответствие полученной и реальной длины.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.WrongProtocol">
            <summary>
            Неверный протокол.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientNotInList">
            <summary>
            Незарегистрированный клиент.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientNotInUse">
            <summary>
            Клиент не выполнил регистрацию.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.WrongClientIdentifier">
            <summary>
            Неправльный идентификатор клиента.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientListOverload">
            <summary>
            Зарегистрировано максимально допустимое 
            количество клиентов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientAlreadyExist">
            <summary>
            Клиент уже зарегистрирован.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ClientNotAllowed">
            <summary>
            Нет доступа к командам АРМ.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.WrongPassword">
            <summary>
            Неверный пароль.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.FileNotExist">
            <summary>
            Файл не существует.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ServerOverload">
            <summary>
            Сервер перегружен: достигнуто максимальное число
            потоков обработки.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.ProcessError">
            <summary>
            Не удалось запустить или прервать поток или процесс.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Infrastructure.IrbisReturnCode.GlobalError">
            <summary>
            Обрушение при выполнении глобальной корректировки.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisUpperCaseTable">
            <summary>
            Table for uppercase character conversion.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisUpperCaseTable.FileName">
            <summary>
            Имя файла таблицы по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.#ctor(System.Text.Encoding,System.Byte[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.GetInstance(ManagedIrbis.IrbisConnection)">
            <summary>
            Get global instance of the
            <see cref="T:ManagedIrbis.IrbisUpperCaseTable"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.FromServer(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Load the table from specified server file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.ParseLocalFile(System.String)">
            <summary>
            Парсим локальный файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.ParseText(System.Text.Encoding,System.String)">
            <summary>
            Parse text and build upper-case table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.ResetInstance">
            <summary>
            Free global instance of
            <see cref="T:ManagedIrbis.IrbisUpperCaseTable"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.ToSourceCode(System.IO.TextWriter)">
            <summary>
            Формируем исходный код с определением таблицы.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.ToUpper(System.Char)">
            <summary>
            Converts specified character to uppercase.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.ToUpper(System.String)">
            <summary>
            Converts specified string to uppercase.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.WriteLocalFile(System.String)">
            <summary>
            Записываемся в файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.WriteTable(System.IO.TextWriter)">
            <summary>
            Записываемся в поток.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.IrbisUpperCaseTable.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="P:ManagedIrbis.IrbisUpperCaseTable.Mapping">
            <summary>
            Собственно таблица.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisVersion">
            <summary>
            Информация о версии ИРБИС-сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.ParseServerResponse(ManagedIrbis.Infrastructure.ServerResponse)">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.ParseServerResponse(System.Collections.Generic.List{System.String})">
            <summary>
            Parse server response.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisVersion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.IrbisVersion.Organization">
            <summary>
            На кого приобретен.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisVersion.Version">
            <summary>
            Собственно версия.
            </summary>
            <remarks>Например, 64.2008.1</remarks>
        </member>
        <member name="P:ManagedIrbis.IrbisVersion.MaxClients">
            <summary>
            Максимальное количество подключений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisVersion.ConnectedClients">
            <summary>
            Текущее количество подключений.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisWorkstation">
            <summary>
            Коды АРМов ИРБИС.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Administrator">
            <summary>
            Администратор
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Cataloger">
            <summary>
            Каталогизатор
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Acquisitions">
            <summary>
            Комплектатор
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Reader">
            <summary>
            Читатель
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Circulation">
            <summary>
            Книговыдача
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Bookland">
            <summary>
            Тоже книговыдача
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.Provision">
            <summary>
            Книгообеспеченность
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisWorkstation.None">
            <summary>
            Не задан
            </summary>
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineArticleInfo">
            <summary>
            Информация о статье из журнала/сборника.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineArticleInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineArticleInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля (330 или 922).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineArticleInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineArticleInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineCumulation">
            <summary>
            Данные о кумуляции номеров. Поле 909.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Magazines.MagazineCumulation.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineCumulation.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Year">
            <summary>
            Год. Подполе Q.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Volume">
            <summary>
            Том. Подполе F.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Place">
            <summary>
            Место хранения. Подполе D.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Numbers">
            <summary>
            Кумулированные номера. Подполе H.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineCumulation.Set">
            <summary>
            Номер комплекта. Подполе K.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Magazines.MagazineIssueInfo">
            <summary>
            Сведения о номере журнала
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.CompareNumbers(ManagedIrbis.Magazines.MagazineIssueInfo,ManagedIrbis.Magazines.MagazineIssueInfo)">
            <summary>
            Сравнение двух выпусков
            (с целью сортировки по возрастанию номеров).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Magazines.MagazineIssueInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.DocumentCode">
            <summary>
            Шифр документа в базе. Поле 903.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.MagazineCode">
            <summary>
            Шифр журнала. Поле 933.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Year">
            <summary>
            Год. Поле 934.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Volume">
            <summary>
            Том. Поле 935.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Number">
            <summary>
            Номер, часть. Поле 936.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.NumberForSorting">
            <summary>
            Номер для нужд сортировки. Поля нет.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Supplement">
            <summary>
            Дополнение к номеру. Поле 931^c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Worksheet">
            <summary>
            Рабочий лист. Поле 920.
            (чтобы отличать подшивки от выпусков журналов)
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Articles">
            <summary>
            Расписанное оглавление. Поле 922.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.Exemplars">
            <summary>
            Экземпляры. Поле 910.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.LoanCount">
            <summary>
            Loan count.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Magazines.MagazineIssueInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisConnection">
            <summary>
            Client for IRBIS-server.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConnection.DefaultTimeout">
            <summary>
            Таймаут получения ответа от сервера по умолчанию.
            </summary>
        </member>
        <member name="F:ManagedIrbis.IrbisConnection.ClientVersion">
            <summary>
            Версия клиента.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.#ctor">
            <summary>
            Конструктор по умолчанию
            </summary>
            <remarks>
            Обратите внимание, деструктор не нужен!
            Он помешает сохранению состояния клиента
            при сериализации и последующему восстановлению,
            т. к. попытается закрыть уже установленное
            соединение. Восстановленная копия клиента
            ломанётся в закрытое соедиение, и выйдет облом.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.#ctor(System.String)">
            <summary>
            Конструктор с подключением.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ActualizeRecord(System.String,System.Int32)">
            <summary>
            Actualize given record (if not yet).
            </summary>
            <remarks>If MFN=0, then all non actualized
            records in the database will be actualized.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Clone">
            <summary>
            Clone the connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Clone(System.Boolean)">
            <summary>
            Clone the connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Connect">
            <summary>
            Establish connection (if not yet).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.CorrectVirtualRecord(System.String,ManagedIrbis.MarcRecord,ManagedIrbis.Gbl.GblStatement[])">
            <summary>
            GBL for virtual record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.CorrectVirtualRecord(System.String,ManagedIrbis.MarcRecord,System.String)">
            <summary>
            GBL for virtual record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.CreateDatabase(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Create the database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.CreateDictionary(System.String)">
            <summary>
            Create dictionary index for specified database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.DeleteDatabase(System.String)">
            <summary>
            Delete the database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ExecuteCommand(ManagedIrbis.Infrastructure.Commands.AbstractCommand)">
            <summary>
            Execute any command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ExecuteCommand(System.String,System.Object[])">
            <summary>
            Execute command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.FormatRecord(System.String,System.Int32)">
            <summary>
            Format specified record using ANSI encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.FormatRecord(System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Format specified record using ANSI encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.FormatRecords(System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Format specified records using ANSI encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetDatabaseInfo(System.String)">
            <summary>
            Получение информации о базе данных.
            </summary>
            <returns>Cписок логически удаленных, физически удаленных, 
            неактуализированных и заблокированных записей.</returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetDatabaseStat(ManagedIrbis.StatDefinition)">
            <summary>
            Get stat for the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetMaxMfn">
            <summary>
            Get next mfn for current database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetMaxMfn(System.String)">
            <summary>
            Get next mfn for given database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetServerStat">
            <summary>
            Get server stat.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GetServerVersion">
            <summary>
            Get server version.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.GlobalCorrection(ManagedIrbis.Gbl.GblSettings)">
            <summary>
            Global correction.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ListFiles(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            List server files by the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ListFiles(ManagedIrbis.Infrastructure.FileSpecification[])">
            <summary>
            List server files by the specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ListProcesses">
            <summary>
            List server processes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ListUsers">
            <summary>
            List users.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.NoOp">
            <summary>
            No operation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ParseConnectionString(System.String)">
            <summary>
            Парсинг строки подключения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.PopDatabase">
            <summary>
            Возврат к предыдущей базе данных.
            </summary>
            <returns>Текущая база данных.</returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.PrintTable(ManagedIrbis.TableDefinition)">
            <summary>
            Print table.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.PushDatabase(System.String)">
            <summary>
            Временное переключение на другую базу данных.
            </summary>
            <returns>Предыдущая база данных.</returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadBinaryFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read binary file from server file system.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadPostings(ManagedIrbis.Search.PostingParameters)">
            <summary>
            Read term postings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadRecord(System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Чтение, блокирование и расформатирование записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadRecord(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Чтение указанной версии и расформатирование записи.
            </summary>
            <remarks><c>null</c>означает, что затребованной
            версии записи нет.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadTerms(ManagedIrbis.Search.TermParameters)">
            <summary>
            Read search terms from index.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadTextFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read text file from the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReadTextFiles(ManagedIrbis.Infrastructure.FileSpecification[])">
            <summary>
            Чтение текстовых файлов с сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Reconnect">
            <summary>
            Reconnect to the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReloadDictionary(System.String)">
            <summary>
            Reload dictionary index for specified database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.ReloadMasterFile(System.String)">
            <summary>
            Reload master file for specified database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.RestartServer">
            <summary>
            Restart server.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Restore(System.String)">
            <summary>
            Restore previously suspended connection.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Search(System.String)">
            <summary>
            Поиск записей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SequentialSearch(ManagedIrbis.Search.SearchParameters)">
            <summary>
            Sequential search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetCommandFactory(ManagedIrbis.Infrastructure.CommandFactory)">
            <summary>
            Set new <see cref="P:ManagedIrbis.IrbisConnection.CommandFactory"/>.
            </summary>
            <returns>Previous <see cref="P:ManagedIrbis.IrbisConnection.CommandFactory"/>.
            </returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetCommandFactory(System.String)">
            <summary>
            Set new <see cref="P:ManagedIrbis.IrbisConnection.CommandFactory"/>.
            </summary>
            <returns>Previous <see cref="P:ManagedIrbis.IrbisConnection.CommandFactory"/>.
            </returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetEngine(ManagedIrbis.Infrastructure.AbstractEngine)">
            <summary>
            Set execution engine.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetEngine(System.String)">
            <summary>
            Set new <see cref="P:ManagedIrbis.IrbisConnection.Executive"/>.
            </summary>
            <returns>Previous <see cref="P:ManagedIrbis.IrbisConnection.Executive"/>.
            </returns>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetNetworkLogging(System.String)">
            <summary>
            Set logging socket, gather debug info to specified path.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetRetry(System.Int32,System.Func{System.Exception,System.Boolean})">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SetSocket(ManagedIrbis.Infrastructure.AbstractClientSocket)">
            <summary>
            Set
            <see cref="T:ManagedIrbis.Network.Sockets.AbstractClientSocket"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Suspend">
            <summary>
            Temporary "shutdown" the connection for some reason.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.TruncateDatabase(System.String)">
            <summary>
            Опустошение базы данных.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.UnlockDatabase(System.String)">
            <summary>
            Unlock the specified database.
            </summary>
            <remarks>For Administrator only.</remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.UnlockRecords(System.String,System.Int32[])">
            <summary>
            Unlock specified records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.UpdateIniFile(System.String[])">
            <summary>
            Update server INI-file for current client.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.UpdateUserList(ManagedIrbis.UserInfo[])">
            <summary>
            Update user list on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteRecord(ManagedIrbis.MarcRecord,System.Boolean,System.Boolean)">
            <summary>
            Create or update existing record in the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteRecord(ManagedIrbis.MarcRecord,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create or update existing record in the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteRecords(ManagedIrbis.MarcRecord[],System.Boolean,System.Boolean)">
            <summary>
            Create or update many records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteTextFile(ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Write text file to the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.WriteTextFiles(ManagedIrbis.Infrastructure.FileSpecification[])">
            <summary>
            Write text files to the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnection.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="E:ManagedIrbis.IrbisConnection.Disposing">
            <summary>
            Вызывается перед уничтожением объекта.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Busy">
            <summary>
            Признак занятости клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Host">
            <summary>
            Адрес сервера.
            </summary>
            <value>Адрес сервера в цифровом виде.</value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Port">
            <summary>
            Порт сервера.
            </summary>
            <value>Порт сервера (по умолчанию 6666).</value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Username">
            <summary>
            Имя пользователя.
            </summary>
            <value>Имя пользователя.</value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Password">
            <summary>
            Пароль пользователя.
            </summary>
            <value>Пароль пользователя.</value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Database">
            <summary>
            Имя базы данных.
            </summary>
            <value>Служебное имя базы данных (например, "IBIS").
            </value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Workstation">
            <summary>
            Тип АРМ.
            </summary>
            <value>По умолчанию
            <see cref="F:ManagedIrbis.IrbisWorkstation.Cataloger"/>.
            </value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.ClientID">
            <summary>
            Идентификатор клиента.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.QueryID">
            <summary>
            Номер команды.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Executive">
            <summary>
            Executive engine.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.CommandFactory">
            <summary>
            Command factory.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.IniFile">
            <summary>
            Remote INI-file for the client.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.ServerVersion">
            <summary>
            Server version.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Connected">
            <summary>
            Статус подключения к серверу.
            </summary>
            <value>Устанавливается в true при успешном выполнении
            <see cref="M:ManagedIrbis.IrbisConnection.Connect"/>, сбрасывается при выполнении
            <see cref="M:ManagedIrbis.IrbisConnection.Dispose"/>.
            </value>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Disposed">
            <summary>
            Флаг отключения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Timeout">
            <summary>
            Таймаут получения ответа от сервера в миллисекундах
            (для продвинутых функций).
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Interrupted">
            <summary>
            Признак: команда прервана.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.Socket">
            <summary>
            Socket.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.UserData">
            <summary>
            Arbitrary user data.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.RawClientRequest">
            <summary>
            Raw last client query.
            </summary>
        </member>
        <member name="P:ManagedIrbis.IrbisConnection.RawServerResponse">
            <summary>
            Raw last server response.
            </summary>
        </member>
        <member name="T:ManagedIrbis.IrbisConnectionUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ActualizeDatabase(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Актуализация всех неактуализированных записей
            в указанной базе данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.DeleteAnyFile(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Delete specified file on the server.
            </summary>
            <remarks>
            <para>Accepts wildcards.</para>
            <para>Requires server version 2010.1 or newer.</para>
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.DeleteRecord(ManagedIrbis.IrbisConnection,System.Int32)">
            <summary>
            Delete given record (mark as deleted on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.DeleteRecord(ManagedIrbis.IrbisConnection,System.Int32,System.Boolean)">
            <summary>
            Delete given record (mark as deleted on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.DeleteRecords(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Delete some records (mark as deleted on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ExecuteArbitraryCommand(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Execute arbitrary command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ExtendedSearch(ManagedIrbis.IrbisConnection,ManagedIrbis.Search.SearchParameters)">
            <summary>
            Sequential search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.FormatRecord(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32)">
            <summary>
            Format specified record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.FormatUtf8(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Format specified record using UTF8 encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.FormatUtf8(ManagedIrbis.IrbisConnection,System.String,ManagedIrbis.MarcRecord)">
            <summary>
            Format specified record using UTF8 encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.FormatUtf8(ManagedIrbis.IrbisConnection,System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Format specified records using UTF8 encoding.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.GetStandardConnectionString">
            <summary>
            Получаем строку подключения в app.settings.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.GetClientFromConfig">
            <summary>
            Получаем уже подключенного клиента.
            </summary>
            <exception cref="T:ManagedIrbis.IrbisException">
            Если строка подключения в app.settings не найдена.
            </exception>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ListDatabases(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Get list of the databases.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ListDatabases(ManagedIrbis.IrbisConnection)">
            <summary>
            Get list of the databases.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ListStandardConnectionStrings">
            <summary>
            Стандартные наименования для ключа строки подключения
            к серверу ИРБИС64.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.LockRecord(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Lock the record on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.LockRecords(ManagedIrbis.IrbisConnection,System.String,System.Int32[])">
            <summary>
            Lock some records on the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadAnyBinaryFile(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Read any binary file from the server.
            </summary>
            <remarks>
            Works with version 2010.1 and newer.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadAnyTextFile(ManagedIrbis.IrbisConnection,System.String,System.Text.Encoding)">
            <summary>
            Read (almost) any text file from the server.
            </summary>
            <remarks>
            Works with version 2010.1 and newer.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadAnyTextFile(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Read (almost) any text file from the server.
            </summary>
            <remarks>
            Uses ANSI encoding.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadIniFile(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Read INI-file from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadMenu(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read menu from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadMenu(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Read menu from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRawRecord(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Read server representation of record from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRawRecord(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Read server representation of record from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRawRecord(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Read server representation of record from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRawRecords(ManagedIrbis.IrbisConnection,System.String,System.Int32[])">
            <summary>
            Read server representation of record from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRecords(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Read multiple records.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadSearchScenario(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Read search scenario from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.RemoveLogging(ManagedIrbis.IrbisConnection)">
            <summary>
            Remove logging from socket.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.RecordHistory(ManagedIrbis.IrbisConnection,System.String,System.Int32,System.String)">
            <summary>
            Retrieve history for given record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadRecord(ManagedIrbis.IrbisConnection,System.Int32)">
            <summary>
            Чтение записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.ReadTextFile(ManagedIrbis.IrbisConnection,ManagedIrbis.IrbisPath,System.String)">
            <summary>
            Read text file from the server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.RequireClientVersion(ManagedIrbis.IrbisConnection,System.String,System.Boolean)">
            <summary>
            Require minimal client version.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.RequireServerVersion(ManagedIrbis.IrbisConnection,System.String,System.Boolean)">
            <summary>
            Require minimal server version.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.Search(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Search for records with formattable expression.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchCount(ManagedIrbis.IrbisConnection,System.String)">
            <summary>
            Определение количества записей, которые будут
            найдены по указанному выражению.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchFormat(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Поиск с одновременным расформатированием.
            Для формата используется кодировка ANSI.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchFormatUtf8(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Поиск с одновременным расформатированием.
            Для формата используется кодировка UTF-8.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchRaw(ManagedIrbis.IrbisConnection,ManagedIrbis.Search.SearchParameters)">
            <summary>
            Raw search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchRead(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Загрузка записей по результатам поиска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SearchReadOneRecord(ManagedIrbis.IrbisConnection,System.String,System.Object[])">
            <summary>
            Загрузка одной записи по результатам поиска.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.SequentialSearchRaw(ManagedIrbis.IrbisConnection,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Raw sequential search.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.UndeleteRecord(ManagedIrbis.IrbisConnection,System.Int32)">
            <summary>
            Undelete given record (mark as live on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.UndeleteRecords(ManagedIrbis.IrbisConnection,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Undelete some records (mark as live on the server).
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.UnlockRecordAlternative(ManagedIrbis.IrbisConnection,System.String,System.Int32)">
            <summary>
            Unlock record through E command.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.WriteRawRecord(ManagedIrbis.IrbisConnection,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Write record in raw representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.WriteRawRecords(ManagedIrbis.IrbisConnection,System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            Write record in raw representation.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.WriteRecord(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord)">
            <summary>
            Create or update existing record in the database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.IrbisConnectionUtility.WriteRecord(ManagedIrbis.IrbisConnection,ManagedIrbis.MarcRecord,System.Boolean)">
            <summary>
            Create or update existing record in the database.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mapping.FieldAttribute">
            <summary>
            Задаёт отображение поля на свойство.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.FieldAttribute.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.FieldAttribute.#ctor(System.String,System.Int32)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.FieldAttribute.Tag">
            <summary>
            Тег.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.FieldAttribute.Occurrence">
            <summary>
            Повторение.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mapping.SubFieldAttribute">
            <summary>
            Задаёт отображение подполя на свойство.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldAttribute.#ctor(System.Char)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldAttribute.#ctor(System.Char,System.Int32)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldAttribute.Code">
            <summary>
            Код.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldAttribute.Occurrence">
            <summary>
            Повторение.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mapping.SubFieldInfo">
            <summary>
            Информация о маппинге.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldInfo.Code">
            <summary>
            Код подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldInfo.Occurrence">
            <summary>
            Повторение подполя
            </summary>
        </member>
        <member name="P:ManagedIrbis.Mapping.SubFieldInfo.Mapper">
            <summary>
            Метод-маппер.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Mapping.SubFieldMapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToBoolean(ManagedIrbis.SubField)">
            <summary>
            Преобразование в булево значение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToBoolean(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Преобразование в булево значение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToChar(ManagedIrbis.SubField)">
            <summary>
            Преобразование в символ.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToDateTime(ManagedIrbis.SubField)">
            <summary>
            Преобразование в дату.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToDateTime(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Преобразование в дату.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToDecimal(ManagedIrbis.SubField)">
            <summary>
            Преобразование в число с фиксированной точкой.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToDouble(ManagedIrbis.SubField)">
            <summary>
            Преобразование в число с плавающей точкой
            двойной точностью.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToSingle(ManagedIrbis.SubField)">
            <summary>
            Преобразование в число с плавающей точкой
            одинарной точности.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToInt16(ManagedIrbis.SubField)">
            <summary>
            Преобразование в 16-битное целое со знаком.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToInt32(ManagedIrbis.SubField)">
            <summary>
            Преобразование в 32-битное целое со знаком.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToInt32(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Преобразование в 32-битное целое со знаком.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToInt64(ManagedIrbis.SubField)">
            <summary>
            Преобразование в 64-битное целое со знаком.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToInt64(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Преобразование в 64-битное целое со знаком.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Mapping.SubFieldMapper.ToString(ManagedIrbis.SubField)">
            <summary>
            Преобразование в строку (тривиальное).
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcBibliographicalIndex">
            <summary>
            Библиографический указатель.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.PartOfMonograph">
            <summary>
            Часть монографии.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.PartOfSerialPrinting">
            <summary>
            Часть сериального издания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.Collection">
            <summary>
            Коллекция.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.PartOfCollection">
            <summary>
            Часть коллекции.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.Monograph">
            <summary>
            Монография (книга, рукопись, картина и т.д.).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalIndex.SerialPrinting">
            <summary>
            Сериальное издание, периодика.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcBibliographicalLevel">
            <summary>
            Уровень кодирования библиографического описания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.Full">
            <summary>
            Полный уровень описания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.FullNotChecked">
            <summary>
            Полный уровень, но запись не была проверена.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.NotComplete">
            <summary>
            Не окончательно созданная запись.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.Minimal">
            <summary>
            Минимальный уровень.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.Publisher">
            <summary>
            Запись сделана по тематическому плану издательства.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.Unknown">
            <summary>
            Уровень неизвестен.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcBibliographicalLevel.NotAvailable">
            <summary>
            Невозможно установить уровень записи.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcCatalogingRules">
            <summary>
            Код правил описания записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcCatalogingRules.NotConforming">
            <summary>
            Не соответствуте ISBD, AACR2
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcCatalogingRules.AACR2">
            <summary>
            Соответствует AACR2.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcCatalogingRules.ISBD">
            <summary>
            Соответствует ISBD.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcRecordStatus">
            <summary>
            Статус записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.LevelUp">
            <summary>
            При изменении записи увеличивается ее уровень.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.Changed">
            <summary>
            При изменении записи уровень остался прежним.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.Deleted">
            <summary>
            Запись удалена, но информация о ней сохраняется.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.New">
            <summary>
            Новая запись.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordStatus.Publisher">
            <summary>
            Запись изменилась после того, как была введена с плана издательства.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcRecordType">
            <summary>
            Тип записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.Text">
            <summary>
            Текстовый материал.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.ArchiveMaterial">
            <summary>
            Архивный материал, рукописи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.PrintedMusic">
            <summary>
            Печатные ноты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.HandwrittenMusic">
            <summary>
            Рукописные ноты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.PrintedMap">
            <summary>
            Печатные карты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.HandwrittenMap">
            <summary>
            Рукописные карты.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.Film">
            <summary>
            Фильмокопии, видеофильмы и проч.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.NonMusicRecord">
            <summary>
            Немузыкальные записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.MusicRecord">
            <summary>
            Музыкальные записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.Picture">
            <summary>
            Картины, фотографии и т.д. (двумерная графика).
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.ComputerFiles">
            <summary>
            Компьютерные файлы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.MixedMaterial">
            <summary>
            Смешанные материалы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRecordType.Sculpture">
            <summary>
            Скульптуры и другие трехмерные объекты.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Marc.MarcRelatedRecord">
            <summary>
            Необходимость связанной записи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRelatedRecord.NotRequired">
            <summary>
            Не требуется.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Marc.MarcRelatedRecord.Required">
            <summary>
            Требуется.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Metadata.AbstractMetadataFormat">
            <summary>
            Абстрактный формат метаданных.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Metadata.MarcMetadataFormat">
            <summary>
            Основанный на MARC формат метаданных.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Metadata.RusMarcMetadataFormat">
            <summary>
            Формат метаданных RusMarc.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Morphology.IrbisMorphologyProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedIrbis.Morphology.MorphologyProvider">
            <summary>
            Base morphology provider.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyProvider.Flatten(System.String,ManagedIrbis.Morphology.MorphologyEntry[])">
            <summary>
            Flatten the query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyProvider.FindWord(System.String)">
            <summary>
            Find the word in the morphology database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyProvider.RewriteQuery(System.String)">
            <summary>
            Rewrite the query using morphology.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.IrbisMorphologyProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.IrbisMorphologyProvider.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.IrbisMorphologyProvider.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.IrbisMorphologyProvider.#ctor(System.String,System.String,ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.IrbisMorphologyProvider.FindWord(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Morphology.MorphologyProvider.FindWord(System.String)"/>
        </member>
        <member name="M:ManagedIrbis.Morphology.IrbisMorphologyProvider.RewriteQuery(System.String)">
            <inheritdoc cref="M:ManagedIrbis.Morphology.MorphologyProvider.RewriteQuery(System.String)"/>
        </member>
        <member name="P:ManagedIrbis.Morphology.IrbisMorphologyProvider.Connection">
            <summary>
            Client connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.IrbisMorphologyProvider.Prefix">
            <summary>
            Search prefix.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.IrbisMorphologyProvider.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Morphology.MorphologyEngine">
            <summary>
            Morphology engine.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.#ctor(ManagedIrbis.IrbisConnection,ManagedIrbis.Morphology.MorphologyProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.#ctor(ManagedIrbis.IrbisConnection,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.#ctor(ManagedIrbis.Morphology.MorphologyProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.RewriteQuery(System.String)">
            <summary>
            Rewrite the query.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.Search(System.String,System.Object[])">
            <summary>
            Search with query rewritting.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.SearchRead(System.String,System.Object[])">
            <summary>
            Search and read records with query rewritting.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.SearchReadOneRecord(System.String,System.Object[])">
            <summary>
            Search and read first found record using query rewritting.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEngine.SearchFormat(System.String,System.String)">
            <summary>
            Search and format found records using query rewritting.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.MorphologyEngine.Connection">
            <summary>
            Client connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.MorphologyEngine.Provider">
            <summary>
            Morphology provider.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Morphology.MorphologyEntry">
            <summary>
            Entry of the morphology database.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEntry.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Parse the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEntry.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEntry.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEntry.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Morphology.MorphologyEntry.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Morphology.MorphologyEntry.MainTerm">
            <summary>
            Main term. Field 10.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.MorphologyEntry.Dictionary">
            <summary>
            Dictionary term. Field 11.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.MorphologyEntry.Language">
            <summary>
            Language name. Field 12.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Morphology.MorphologyEntry.Forms">
            <summary>
            Forms of the word. Repeatable field 20.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Quality.DefectList">
            <summary>
            Defect list for the field of the record.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.DefectList.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.DefectList.#ctor(System.Collections.Generic.IEnumerable{ManagedIrbis.Quality.FieldDefect})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.DefectList.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Quality.DefectList.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="T:ManagedIrbis.Quality.FieldDefect">
            <summary>
            Detected defect of the field/subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.FieldDefect.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Quality.FieldDefect.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Quality.FieldDefect.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Quality.FieldDefect.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Quality.FieldDefect.Field">
            <summary>
            Поле.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.FieldDefect.FieldRepeat">
            <summary>
            Повторение поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.FieldDefect.Subfield">
            <summary>
            Подполе (если есть).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.FieldDefect.Value">
            <summary>
            Значение поля/подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.FieldDefect.Message">
            <summary>
            Сообщение об ошибке.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.FieldDefect.Damage">
            <summary>
            Урон от дефекта.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Quality.RecordReport">
            <summary>
            Отчёт о проверке записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RecordReport.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RecordReport.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RecordReport.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Quality.RecordReport.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedIrbis.Quality.RecordReport.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RecordReport.Index">
            <summary>
            Шифр записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RecordReport.Description">
            <summary>
            Краткое БО.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RecordReport.Defects">
            <summary>
            Дефекты.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Quality.RecordReport.Gold">
            <summary>
            Формальная оценка качества.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.ChairInfo">
            <summary>
            Информация о кафедре обслуживания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ChairInfo.ChairMenu">
            <summary>
            Имя меню с кафедрами по умолчанию.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ChairInfo.PlacesMenu">
            <summary>
            Имя меню с местами хранения по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="code">Chair code.</param>
            <param name="title">Chair title.</param>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.Parse(System.String,System.Boolean)">
            <summary>
            Разбор текста меню-файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.Read(ManagedIrbis.IrbisConnection,System.String,System.Boolean)">
            <summary>
            Загрузка с сервера.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.Read(ManagedIrbis.IrbisConnection)">
            <summary>
            Загрузка с сервера.
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Readers.ChairInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Readers.ChairInfo.Code">
            <summary>
            Код.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ChairInfo.Title">
            <summary>
            Название.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.DebtorInfo">
            <summary>
            Информация о задолжнике
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorInfo.FromReader(ManagedIrbis.Readers.ReaderInfo,ManagedIrbis.Readers.VisitInfo[])">
            <summary>
            Формирование задолжника из читателя
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Name">
            <summary>
            Фамилия, имя, отчество
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.DateOfBirth">
            <summary>
            Дата рождения
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Ticket">
            <summary>
            Номер читательского билета
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Gender">
            <summary>
            Пол
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Category">
            <summary>
            Категория
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Address">
            <summary>
            Адрес
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.WorkPlace">
            <summary>
            Место работы
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Email">
            <summary>
            Электронная почта
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.HomePhone">
            <summary>
            Домашний телефон
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Age">
            <summary>
            Возраст
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Remarks">
            <summary>
            Примечания
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Mfn">
            <summary>
            MFN записи
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Description">
            <summary>
            Расформатированное описание
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.UserData">
            <summary>
            Произвольные данные
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorInfo.Debt">
            <summary>
            Задолженные экземпляры
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.DebtorManager">
            <summary>
            Работа с задолжниками.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.FillInfo(ManagedIrbis.Readers.VisitInfo,System.String)">
            <summary>
            Fill additional fields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.GetDebt(ManagedIrbis.Readers.ReaderInfo)">
            <summary>
            Get debt from the reader
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.GetDebtor(ManagedIrbis.Readers.ReaderInfo)">
            <summary>
            Get debtor from the reader.
            </summary>
            <returns><c>null</c> if reader is not debtor.
            </returns>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.GetDebtors">
            <summary>
            Получение списка задолжников.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.GetDebtors(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Получение списка задолжников.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.DebtorManager.SetupDates">
            <summary>
            Setup <see cref="P:ManagedIrbis.Readers.DebtorManager.FromDate"/> and
            <see cref="P:ManagedIrbis.Readers.DebtorManager.ToDate"/>.
            </summary>
            <returns><c>true</c> on success,
            <c>false</c> otherwise.</returns>
        </member>
        <member name="E:ManagedIrbis.Readers.DebtorManager.BatchRead">
            <summary>
            Fired on batch read.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.Connection">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.Database">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.Department">
            <summary>
            Кафедра обслуживания.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.FromDate">
            <summary>
            С какой даты задолженность?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.DebtorManager.ToDate">
            <summary>
            По какую дату задолженность.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.IriProfile">
            <summary>
            Профиль ИРИ
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.IriProfile.IriTag">
            <summary>
            Тег поля ИРИ.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.ParseField(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.ParseRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.LoadFromFile(System.String)">
            <summary>
            Считывание из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.SaveToFile(System.String,ManagedIrbis.Readers.IriProfile[])">
            <summary>
            Сохранение в файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Readers.IriProfile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Active">
            <summary>
            Подполе A
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.ID">
            <summary>
            Подполе B
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Title">
            <summary>
            Подполе C
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Query">
            <summary>
            Подполе D
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Periodicity">
            <summary>
            Подполе E
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.LastServed">
            <summary>
            Подполе F
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Database">
            <summary>
            Подполе I
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.IriProfile.Reader">
            <summary>
            Ссылка на читателя.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderAddress">
            <summary>
            Адрес читателя: поле 13 в базе RDR.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ReaderAddress.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderAddress.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Postcode">
            <summary>
            Почтовый индекс. Подполе A.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Country">
            <summary>
            Страна/республика. Подполе B.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.City">
            <summary>
            Город. Подполе C.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Street">
            <summary>
            Улица. Подполе D.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Building">
            <summary>
            Номер дома. Подполе E.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Entrance">
            <summary>
            Номер подъезда. Подполе G.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.Apartment">
            <summary>
            Номер квартиры. Подполе H.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.AdditionalData">
            <summary>
            Дополнительные данные. Подполе F.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderAddress.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderInfo">
            <summary>
            Информация о читателе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Parse the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.ReadFromFile(System.String)">
            <summary>
            Считывание из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.SaveToFile(System.String,ManagedIrbis.Readers.ReaderInfo[])">
            <summary>
            Сохранение в файле.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.ToRecord">
            <summary>
            Формирование записи по данным о читателе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Id">
            <summary>
            Identifier for LiteDB.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.FullName">
            <summary>
            ФИО. Комбинируется из полей 10, 11 и 12.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.FamilyName">
            <summary>
            Фамилия. Поле 10.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.FirstName">
            <summary>
            Имя. Поле 11.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Patronymic">
            <summary>
            Отчество. Поле 12.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.DateOfBirth">
            <summary>
            Дата рождения. Поле 21.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Ticket">
            <summary>
            Номер читательского. Поле 30.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Gender">
            <summary>
            Пол. Поле 23.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Category">
            <summary>
            Категория. Поле 50.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Address">
            <summary>
            Домашний адрес. Поле 13.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.WorkPlace">
            <summary>
            Место работы. Поле 15.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Education">
            <summary>
            Образование. Поле 20.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Email">
            <summary>
            Электронная почта. Поле 32.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.HomePhone">
            <summary>
            Домашний телефон. Поле 17.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.RegistrationDateString">
            <summary>
            Дата записи. Поле 51.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.RegistrationDate">
            <summary>
            Дата регистрации
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Enrollment">
            <summary>
            Запись/перерегистрация в библиотеку.
            Поле 51.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Registrations">
            <summary>
            Дата перерегистрации. Поле 52.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastRegistrationDate">
            <summary>
            Дата последней перерегистрации.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastRegistrationPlace">
            <summary>
            Последнее место регистрации.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.EnabledPlaces">
            <summary>
            Разрешенные места получения литературы. Поле 56.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.DisabledPlaces">
            <summary>
            Запрещенные места получения литературы. Поле 57.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Rights">
            <summary>
            Право пользования библиотекой. Поле 29.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Remarks">
            <summary>
            Примечания. Поле 33.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.PhotoFile">
            <summary>
            Фотография читателя. Поле 950.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Visits">
            <summary>
            Информация о посещениях.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Profiles">
            <summary>
            Профили обслуживания ИРИ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Age">
            <summary>
            Возраст, годы
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.AgeCategory">
            <summary>
            Возрастная категория.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.UserData">
            <summary>
            Произвольные данные, ассоциированные с читателем.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.FirstVisitDate">
            <summary>
            Дата первого посещения
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastVisitDate">
            <summary>
            Дата последнего посещения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastVisitPlace">
            <summary>
            Кафедра последнего посещения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.LastVisitResponsible">
            <summary>
            Последний обслуживавший библиотекарь.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Status">
            <summary>
            Reader status.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Description">
            <summary>
            Расформатированное описание.
            Не соответствует никакому полю.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderInfo.Marked">
            <summary>
            Flag for the reader info.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderManager">
            <summary>
            Основные операции с читателями.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ReaderManager.ReaderIdentifier">
            <summary>
            Стандартный префикс идентификатора читателя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedIrbis.Readers.ReaderManager"/> class.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderManager.GetAllReaders(System.String)">
            <summary>
            Получение массива всех (не удалённых) читателей из базы данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderManager.GetReaders(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Получение массива всех (не удалённых) читателей из базы данных.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderManager.GetReader(System.String)">
            <summary>
            Получение записи читателя по его идентификатору.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderManager.MergeReaders(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.ReaderInfo})">
            <summary>
            Merge readers (i. e. from some databases).
            </summary>
        </member>
        <member name="E:ManagedIrbis.Readers.ReaderManager.BatchRead">
            <summary>
            Fired on batch read.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderManager.Connection">
            <summary>
            Клиент, общающийся с сервером.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderManager.OmitDeletedRecords">
            <summary>
            Omit deleted records?
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderRegistration">
            <summary>
            Информация о регистрации/перерегистрации читателя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ReaderRegistration.RegistrationTag">
            <summary>
            Поле регистрация.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.ReaderRegistration.ReregistrationTag">
            <summary>
            Поле "перерегистрация".
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.Parse(ManagedIrbis.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.Parse(ManagedIrbis.MarcRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.ToField">
            <summary>
            Преобразование в поле.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderRegistration.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.DateString">
            <summary>
            Дата. Подполе *.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.Date">
            <summary>
            Дата.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.Chair">
            <summary>
            Место (кафедра обслуживания).
            Подполе c.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.OrderNumber">
            <summary>
            Номер приказа. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.Reason">
            <summary>
            Причина. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.ReaderRegistration.Reader">
            <summary>
            Ссылка на зарегистрированного читателя.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.ReaderUtility">
            <summary>
            Методы для работы с БД читателей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.MergeReaders(System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo})">
            <summary>
            Слияние записей о читателях из разных баз.
            </summary>
            <remarks>
            Слияние происходит на основе номера читательского билета.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.CountEvents(System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo},System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Подсчёт количества событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.CountEvents(System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo},System.DateTime,System.DateTime,System.String,System.Boolean)">
            <summary>
            Подсчёт количества событий
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(System.Collections.Generic.List{ManagedIrbis.Readers.ReaderInfo})">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(ManagedIrbis.Readers.VisitInfo[],System.String)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(ManagedIrbis.Readers.VisitInfo[],System.Boolean)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(ManagedIrbis.Readers.VisitInfo[],System.DateTime)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.ReaderUtility.GetEvents(ManagedIrbis.Readers.VisitInfo[],System.DateTime,System.DateTime)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.VisitInfo">
            <summary>
            Информация о посещении/выдаче.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Readers.VisitInfo.KnownCodes">
            <summary>
            Known codes.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.GetBookPrice(ManagedIrbis.MarcRecord)">
            <summary>
            Get price for the book.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.GetBookYear(ManagedIrbis.MarcRecord)">
            <summary>
            Get year of the book.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.Parse(ManagedIrbis.RecordField)">
            <summary>
            Parses the specified field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.ToField">
            <summary>
            Формирование поля 40 
            из данных о выдаче/посещении.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.SaveToStream(System.IO.BinaryWriter,ManagedIrbis.Readers.VisitInfo[])">
            <summary>
            Сохранение в поток.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.SaveToFile(System.String,ManagedIrbis.Readers.VisitInfo[])">
            <summary>
            Сохранение в файл.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.ReadFromFile(System.String)">
            <summary>
            Считывание из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfo.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Id">
            <summary>
            Identifier for LiteDB.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Database">
            <summary>
            подполе G, имя БД каталога.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Index">
            <summary>
            подполе A, шифр документа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Inventory">
            <summary>
            подполе B, инвентарный номер экземпляра
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Barcode">
            <summary>
            подполе H, штрих-код экземпляра.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Sigla">
            <summary>
            подполе K, место хранения экземпляра
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateGivenString">
            <summary>
            подполе D, дата выдачи
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Department">
            <summary>
            подполе V, место выдачи
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateExpectedString">
            <summary>
            подполе E, дата предполагаемого возврата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateReturnedString">
            <summary>
            подполе F, дата фактического возврата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateProlongString">
            <summary>
            подполе L, дата продления
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Lost">
            <summary>
            подполе U, признак утерянной книги
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Description">
            <summary>
            подполе C, краткое библиографическое описание
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Responsible">
            <summary>
            подполе I, ответственное лицо
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.TimeIn">
            <summary>
            подполе 1, время начала визита в библиотеку
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.TimeOut">
            <summary>
            подполе 2, время окончания визита в библиотеку
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Prolong">
            <summary>
            Счетчик продлений.
            </summary>
            <remarks>
            http://irbis.gpntb.ru/read.php?3,105310,108175#msg-108175
            </remarks>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.IsVisit">
            <summary>
            Не посещение ли?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.IsReturned">
            <summary>
            Возвращена ли книга?
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateGiven">
            <summary>
            Дата выдачи/посещения.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateReturned">
            <summary>
            Дата возврата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.DateExpected">
            <summary>
            Ожидаемая дата возврата
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.ProlongCount">
            <summary>
            Счетчик продлений.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Year">
            <summary>
            Год издания книги.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Price">
            <summary>
            Цена книги.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Field">
            <summary>
            Поле, в котором хранится посещение/выдача.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Readers.VisitInfo.Reader">
            <summary>
            Ссылка на читателя, сделавшего посещение.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Readers.VisitInfoUtility">
            <summary>
            Utility routines for <see cref="T:ManagedIrbis.Readers.VisitInfo"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.AllVisits(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.ReaderInfo})">
            <summary>
            Flatten visits from given readers.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetDebt(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo})">
            <summary>
            Get debt loans for all dates.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetDebt(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo},System.DateTime)">
            <summary>
            Get debt loans for given date.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetDebt(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo},System.String)">
            <summary>
            Get debt loans for given date.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetDebt(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo},System.String,System.String)">
            <summary>
            Get debt loans for given date.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetLoans(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo})">
            <summary>
            Get loans (not pure visits).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetPureVisits(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo})">
            <summary>
            Get pure visits (not loans).
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetVisits(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo},ManagedIrbis.Readers.ChairInfo)">
            <summary>
            Get visits for given chair.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetVisits(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo},System.DateTime,System.DateTime)">
            <summary>
            Get visits between given dates.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Readers.VisitInfoUtility.GetVisits(System.Collections.Generic.IEnumerable{ManagedIrbis.Readers.VisitInfo},System.DateTime)">
            <summary>
            Get visits for given date.
            </summary>
        </member>
        <member name="T:ManagedIrbis.RecordField">
            <summary>
            MARC record subfield.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.NoTag">
            <summary>
            Нет тега, т. е. тег ещё не присвоен.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.Delimiter">
            <summary>
            Разделитель подполей.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.IndicatorCount">
            <summary>
            Количество индикаторов поля.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.BreakOnValueContainDelimiters">
            <summary>
            Флаг: выбрасывать исключение, если свойству Value
            присваивается значение, содержащее разделитель.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.TrimValue">
            <summary>
            Флаг: удалять начальные и конечные пробелы в значении поля.
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordField.Repeat">
            <summary>
            Повторение поля.
            Настраивается перед передачей
            в скрипты.
            Не используется в большинстве сценариев.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(ManagedIrbis.RecordField)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.String)">
            <summary>
            Конструктор с присвоением тега поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.Int32,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.String,System.String)">
            <summary>
            Конструктор с присвоением тега и значения поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.String,System.String,System.Boolean,ManagedIrbis.MarcRecord)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.#ctor(System.String,ManagedIrbis.SubField[])">
            <summary>
            Конструктор с подполями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetSubFields(System.String)">
            <summary>
            Sets the sub fields.
            </summary>
            <param name="encodedText">The encoded text.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.AddSubField(System.Char,System.Object)">
            <summary>
            Добавление подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AddNonEmptySubField(System.Char,System.Object)">
            <summary>
            Добавление подполя, при условии,
            что у него не пустое значение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AddNonEmptySubField(System.Char,System.Boolean,System.String)">
            <summary>
            Добавление подполя, при условии,
            что у него значение не false.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AddNonEmptySubField(System.Char,System.Int32)">
            <summary>
            Добавление подполя, при условии,
            что у него значение не 0.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AddNonEmptySubField(System.Char,System.Int64)">
            <summary>
            Добавление подполя, при условии,
            что у него значение не 0.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AddNonEmptySubField(System.Char,System.Nullable{System.DateTime})">
            <summary>
            Добавление подполя, при условии,
            что у него не пустое значение.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.AssignFrom(ManagedIrbis.RecordField)">
            <summary>
            Assign the field from another.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.Clone">
            <summary>
            Создание "глубокой" копии поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.Compare(ManagedIrbis.RecordField,ManagedIrbis.RecordField)">
            <summary>
            Compares the specified fields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetSubField(System.Char)">
            <summary>
            Перечень подполей с указанным кодом.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <remarks>Сравнение кодов происходит без учета
            регистра символов.</remarks>
            <returns>Найденные подполя.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetSubField(System.Char,System.Int32)">
            <summary>
            Указанное повторение подполя с данным кодом.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <param name="occurrence">Номер повторения.
            Нумерация начинается с нуля.
            Отрицательные индексы отсчитываются с конца массива.</param>
            <returns>Найденное подполе или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetFirstSubField(System.Char)">
            <summary>
            Gets the first subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetSubFieldValue(System.Char,System.Int32)">
            <summary>
            Получение текста указанного подполя.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <param name="occurrence">Номер повторения.
            Нумерация начинается с нуля.
            Отрицательные индексы отсчитываются с конца массива.</param>
            <returns>Текст найденного подполя или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetFirstSubFieldValue(System.Char)">
            <summary>
            Получает значение первого появления подполя
            с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.GetValueOrFirstSubField">
            <summary>
            For * specification.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.HaveNotSubField(System.Char)">
            <summary>
            Нет ни одного вхождения подполя с указанным кодом?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.HaveNotSubField(System.Char[])">
            <summary>
            Нет ни одного вхождения подполя с одним из
            перечисленных кодов?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.HaveSubField(System.Char)">
            <summary>
            Есть ли хоть одно вхождение подполя с указанным кодом?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.HaveSubField(System.Char[])">
            <summary>
            Есть ли хоть одно вхождение подполя с одним из
            перечисленных кодов?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.NotModified">
            <summary>
            Mark the field as unmodified.
            </summary>
            <returns>Self.</returns>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetSubField(System.Char,System.Object)">
            <summary>
            Устанавливает значение подполя.
            Если подполя с указанным кодом нет,
            оно создаётся.
            </summary>
            <remarks>Устанавливает значение только первого
            подполя с указанным кодом (если в поле их несколько)!
            </remarks>
        </member>
        <member name="M:ManagedIrbis.RecordField.ShouldSerializeSubFields">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ShouldSerializeValue">
            <summary>
            For Newtonsoft.Json.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.Parse(System.String)">
            <summary>
            Парсинг строкового представления поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.Parse(System.String,System.String)">
            <summary>
            Парсинг текстового представления поля
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.RemoveSubField(System.Char)">
            <summary>
            Удаляет все повторения подполей
            с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ReplaceSubField(System.Char,System.String,System.Object)">
            <summary>
            Заменяет значение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetTag(System.String)">
            <summary>
            Sets the tag for the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetValue(System.String)">
            <summary>
            Sets the value for the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.ToText">
            <summary>
            Builds text representation of the field.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordField.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.RecordField.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.RecordField.AsReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.AsReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.RecordField.SetReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.SetReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.RecordField.ThrowIfReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.ThrowIfReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.RecordField.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.RecordField.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.RecordField.Tag">
            <summary>
            Метка поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Value">
            <summary>
            Значение поля до первого разделителя подполей.
            </summary>
            <remarks>
            Внимание! Если присваиваемое значение содержит
            разделитель, то происходит и присвоение подполей!
            Имеющиеся в SubFields значения при этом пропадают
            и замещаются на вновь присваиваемые!
            </remarks>
        </member>
        <member name="P:ManagedIrbis.RecordField.SubFields">
            <summary>
            Список подполей.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Modified">
            <summary>
            Whether the field is modified?
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Record">
            <summary>
            Ссылка на запись, владеющую
            данным полем. Настраивается
            перед передачей в скрипты.
            Всё остальное время неактуально.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.Path">
            <summary>
            Field path
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.IsFixed">
            <summary>
            Является ли поле фиксированным.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordField.ReadOnly">
            <inheritdoc cref="P:AM.IReadOnly`1.ReadOnly"/>
        </member>
        <member name="T:ManagedIrbis.RecordFieldCollection">
            <summary>
            Коллекция полей записи.
            Отличается тем, что принципиально
            не принимает значения <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.AddCapacity(System.Int32)">
            <summary>
            Add capacity to eliminate reallocations.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Add range of <see cref="T:ManagedIrbis.RecordField"/>s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.BeginUpdate">
            <summary>
            Begin record update.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.Clone">
            <summary>
            Создание клона коллекции.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.EndUpdate">
            <summary>
            End record update.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.EnsureCapacity(System.Int32)">
            <summary>
            Ensure the capacity.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.Find(System.Predicate{ManagedIrbis.RecordField})">
            <summary>
            Find first occurrence of the field with given predicate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.FindAll(System.Predicate{ManagedIrbis.RecordField})">
            <summary>
            Find all occurrences of the field
            with given predicate.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.ClearItems">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.ClearItems"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.InsertItem(System.Int32,ManagedIrbis.RecordField)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.RemoveItem(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.SetItem(System.Int32,ManagedIrbis.RecordField)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.AsReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.AsReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.SetReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.SetReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.ThrowIfReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.ThrowIfReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.RecordFieldCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.RecordFieldCollection.Record">
            <summary>
            Record.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordFieldCollection.ReadOnly">
            <inheritdoc cref="P:AM.IReadOnly`1.ReadOnly"/>
        </member>
        <member name="T:ManagedIrbis.RecordFieldUtility">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordFieldUtility.EmptyArray">
            <summary>
            Empty array of <see cref="T:ManagedIrbis.RecordField"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.AddNonEmptySubField(ManagedIrbis.RecordField,System.Char,System.String)">
            <summary>
            Добавление подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.AddSubField(ManagedIrbis.RecordField,System.Char,System.String)">
            <summary>
            Добавление подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.AllSubFields(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Все подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ApplySubField(ManagedIrbis.RecordField,System.Char,System.String)">
            <summary>
            Apply subfield value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FilterSubFields(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char[])">
            <summary>
            Отбор подполей с указанными кодами.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FilterSubFields(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Отбор подполей с указанными кодами.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(ManagedIrbis.RecordFieldCollection,System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(ManagedIrbis.RecordFieldCollection,System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[])">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(ManagedIrbis.RecordFieldCollection,System.String[])">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(ManagedIrbis.RecordFieldCollection,System.String[],System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Func{ManagedIrbis.RecordField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(ManagedIrbis.RecordFieldCollection,System.Func{ManagedIrbis.RecordField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Action{ManagedIrbis.RecordField})">
            <summary>
            Выполнение неких действий над полями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Action{ManagedIrbis.RecordField},System.Action{ManagedIrbis.SubField})">
            <summary>
            Выполнение неких действий над полями и подполями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Action{ManagedIrbis.SubField})">
            <summary>
            Выполнение неких действий над подполями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Func{ManagedIrbis.SubField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char[],System.Func{ManagedIrbis.SubField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char[],System.String[])">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char,System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[],System.String[])">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Func{ManagedIrbis.RecordField,System.Boolean},System.Func{ManagedIrbis.SubField,System.Boolean})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldCount(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Количество повторений поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldCount(ManagedIrbis.RecordFieldCollection,System.String)">
            <summary>
            Количество повторений поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[],System.String)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[],System.String,System.Int32)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Получение значения поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldValue(ManagedIrbis.RecordFieldCollection)">
            <summary>
            Получение значения поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldValue(ManagedIrbis.RecordField)">
            <summary>
            Получение значения поля.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Непустые значения полей с указанным тегом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Первое вхождение поля с указанным тегом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstField(ManagedIrbis.RecordFieldCollection,System.String)">
            <summary>
            Первое вхождение поля с указанным тегом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[])">
            <summary>
            Первое вхождение поля с любым из перечисленных тегов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstField(ManagedIrbis.RecordFieldCollection,System.String[])">
            <summary>
            Первое вхождение поля с любым из перечисленных тегов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String)">
            <summary>
            Значение первого поля с указанным тегом или <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstFieldValue(ManagedIrbis.RecordFieldCollection,System.String)">
            <summary>
            Значение первого поля с указанным тегом или <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Gets the first subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char)">
            <summary>
            Первое вхождение подполя, соответствующего указанным
            критериям.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubField(ManagedIrbis.RecordFieldCollection,System.String,System.Char)">
            <summary>
            Первое вхождение подполя, соответствующего указанным
            критериям.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubFieldValue(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Получение текста указанного подполя
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetFirstSubFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char)">
            <summary>
            Значение первого подполя с указанными тегом и кодом
            или <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Перечень подполей с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(ManagedIrbis.RecordField,System.Char,System.Int32)">
            <summary>
            Указанное повторение подполя с данным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char)">
            <summary>
            Получение подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Char[])">
            <summary>
            Получение подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char)">
            <summary>
            Получение подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(ManagedIrbis.RecordFieldCollection,System.String,System.Char)">
            <summary>
            Получение подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Int32,System.Char,System.Int32)">
            <summary>
            Получение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(ManagedIrbis.RecordFieldCollection,System.String,System.Int32,System.Char,System.Int32)">
            <summary>
            Получение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char,System.Int32)">
            <summary>
            Получение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubField(ManagedIrbis.RecordFieldCollection,System.String,System.Char,System.Int32)">
            <summary>
            Получение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubFieldValue(ManagedIrbis.RecordField,System.Char,System.Int32)">
            <summary>
            Получение текста указанного подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.GetSubFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String,System.Char)">
            <summary>
            Непустые значения подполей с указанными тегом и кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.HaveSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Есть хотя бы одно подполе с указанным кодом?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.HaveSubField(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Есть хотя бы одно поле с любым из указанных кодов?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.HaveNotSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Нет ни одного подполя с указанным кодом?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.HaveNotSubField(ManagedIrbis.RecordField,System.Char[])">
            <summary>
            Нет ни одного подполя с указанными кодами?
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.NotNullTag(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.NotNullValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.RemoveSubField(ManagedIrbis.RecordField,System.Char)">
            <summary>
            Удаляем подполе.
            </summary>
            <remarks>Удаляет все повторения подполей
            с указанным кодом.
            </remarks>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ReplaceSubField(ManagedIrbis.RecordField,System.Char,System.String,System.String)">
            <summary>
            Меняем значение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ReplaceSubField(ManagedIrbis.RecordField,System.Char,System.String,System.Boolean)">
            <summary>
            Меняем значение подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.SetSubField(ManagedIrbis.RecordField,System.Char,System.String)">
            <summary>
            Установка значения подполя.
            </summary>
            <remarks>Устанавливает значение только первого
            подполя с указанным кодом (если в поле их несколько)!
            Если соответствующего подполя нет, оно добавляется!
            </remarks>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ToJObject(ManagedIrbis.RecordField)">
            <summary>
            Convert the field to <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ToJson(ManagedIrbis.RecordField)">
            <summary>
            Convert the field to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FromJObject(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Restore field from <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FromJson(System.String)">
            <summary>
            Restore subfield from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.Parse(System.String,System.String)">
            <summary>
            Парсинг текстового представления поля
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.Parse(System.String)">
            <summary>
            Парсинг строкового представления поля.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.ToXml(ManagedIrbis.RecordField)">
            <summary>
            Converts the field to XML.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.FromXml(System.String)">
            <summary>
            Restore the field from XML.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.WithNullTag(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.WithNullValue(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.WithoutSubFields(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordFieldUtility.WithSubFields(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField})">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="T:ManagedIrbis.RecordReference">
            <summary>
            Ссылка на запись (например, для сохранения в "кармане").
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.#ctor(ManagedIrbis.MarcRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.LoadFromZipFile(System.String)">
            <summary>
            Load references from archive file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.ReadRecord(ManagedIrbis.IrbisConnection)">
            <summary>
            Load record according to the reference.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.ReadRecords(ManagedIrbis.IrbisConnection,System.Collections.Generic.IEnumerable{ManagedIrbis.RecordReference},System.Boolean)">
            <summary>
            Load records according to the references.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.SaveToZipFile(ManagedIrbis.RecordReference[],System.String)">
            <summary>
            Save references to the archive file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.RecordReference.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.RecordReference.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.RecordReference.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.RecordReference.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.RecordReference.HostName">
            <summary>
            Host of IRBIS-server, e. g. "127.0.0.1".
            <c>null</c> for default host.
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.Database">
            <summary>
            Database name, e. g. "IBIS".
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.Mfn">
            <summary>
            MFN of the record.
            <c>0</c> means "use <see cref="P:ManagedIrbis.RecordReference.Index"/> field".
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.Index">
            <summary>
            Index of the record, e. g. "81.432.1-42/P41-012833".
            </summary>
        </member>
        <member name="P:ManagedIrbis.RecordReference.Record">
            <summary>
            Record itself. Not written.
            Can be <c>null</c>.
            </summary>
        </member>
        <member name="T:ManagedIrbis.RecordStatus">
            <summary>
            MARC record status
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.LogicallyDeleted">
            <summary>
            Запись логически удалена
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.PhysicallyDeleted">
            <summary>
            Запись физически удалена
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.Absent">
            <summary>
            Запись отсутствует
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.NonActualized">
            <summary>
            Запись не актуализирована
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.Last">
            <summary>
            Последний экземпляр записи
            </summary>
        </member>
        <member name="F:ManagedIrbis.RecordStatus.Locked">
            <summary>
            Запись заблокирована
            </summary>
        </member>
        <member name="T:ManagedIrbis.Requests.BookRequest">
            <summary>
            Информация о читательском заказе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.Parse(ManagedIrbis.MarcRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.Encode">
            <summary>
            Кодируем запись.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="M:ManagedIrbis.Requests.BookRequest.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.Mfn">
            <summary>
            MFN записи с заказом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.BookDescription">
            <summary>
            Краткое описание заказанного издания.
            Поле 201.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.BookCode">
            <summary>
            Шифр заказанного издания.
            Поле 903.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.RequestDate">
            <summary>
            Дата создания заказа.
            Поле 40.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.FulfillmentDate">
            <summary>
            Дата выполнения заказа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.ReservationDate">
            <summary>
            Дата бронирования.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.ReaderID">
            <summary>
            Идентификатор читателя.
            Поле 30.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.ReaderDescription">
            <summary>
            Краткое описание читателя.
            Поле 31.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.Database">
            <summary>
            Имя БД электронного каталога.
            Поле 1.
            Как правило, IBIS.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.RejectInfo">
            <summary>
            Сведения об отказе.
            Поле 44.
            Подполе A: причина отказа.
            Подполе B: дата.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.Department">
            <summary>
            Место выдачи.
            Поле 102.
            Часто равно *.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.ResponsiblePerson">
            <summary>
            Ответственное лицо.
            Поле 50.
            Берется из логина.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.CanBeDeleted">
            <summary>
            Сведения о заказе можно удалять,
            т. к. он либо выполнен, либо отказан.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.BookRecord">
            <summary>
            Библиографическая запись о книге.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.Reader">
            <summary>
            Сведения о читателе.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.FreeNumbers">
            <summary>
            Свободные инвентарные номера.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.MyNumbers">
            <summary>
            Свободные номера, предназначенные для данного АРМ.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.BookRequest.RequestRecord">
            <summary>
            Запись, на осонове которой построен запрос
            </summary>
        </member>
        <member name="T:ManagedIrbis.Requests.RequestManager">
            <summary>
            Управление читательскими заказами.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.RequestManager.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.RequestManager.GetRequests(System.String)">
            <summary>
            Получение списка заказов согласно указанному условию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.RequestManager.GetAdditionalInfo(ManagedIrbis.Requests.BookRequest)">
            <summary>
            Get additional info.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.RequestManager.ReadCatalog(System.String,System.String)">
            <summary>
            Read info from catalog.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.RequestManager.WriteRequest(ManagedIrbis.Requests.BookRequest)">
            <summary>
            Write request.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.RequestManager.ReadReader(System.String)">
            <summary>
            Загрузка сведений о читателе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.RequestManager.FilterMyNumbers(System.String[])">
            <summary>
            Filter my numbers.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Requests.RequestManager.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Requests.RequestManager.Connection">
            <summary>
            ИРБИС-клиент
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.RequestManager.ReaderDatabase">
            <summary>
            Reader database name.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Requests.RequestManager.RequestDatabase">
            <summary>
            Request database name.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Requests.RequestPrefixes">
            <summary>
            Префиксы стандартных запросов к базе данных RDR.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Status">
            <summary>
            Статус заказа.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Unfulfilled">
            <summary>
            Невыполненные заказы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Fulfilled">
            <summary>
            Выполненные заказы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Reserved">
            <summary>
            Забронированные.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Refused">
            <summary>
            Отказы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.ReaderID">
            <summary>
            Идентификатор читателя.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.DocumentID">
            <summary>
            Идентификкатор издания.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Number">
            <summary>
            Инвентарный номер или штрих-код экземпляра.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.OrderDate">
            <summary>
            Дата заказа.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.LoanID">
            <summary>
            Шифр выданной литературы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Description">
            <summary>
            Описание выданной литературы.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.LoanDate">
            <summary>
            Дата выдачи.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.ReturnDate">
            <summary>
            Дата возврата.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Attendance">
            <summary>
            Посещаемость.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Lost">
            <summary>
            Утерянные экземпляры.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestPrefixes.Debtor">
            <summary>
            Читатели с отрицательным балансом.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Requests.RequestRefusals">
            <summary>
            Причины отказов.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Busy">
            <summary>
            Занято.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.OutOfStock">
            <summary>
            Нет на месте.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.OutOfStockAndTopo">
            <summary>
            Нет на месте и по топокаталогу.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Bound">
            <summary>
            В переплете.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.WrittenOff">
            <summary>
            Списано.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Lacuna">
            <summary>
            Лакуна.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Defect">
            <summary>
            Дефектный.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Decrepit">
            <summary>
            Ветхий.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Redirect">
            <summary>
            Перенаправление.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Requests.RequestRefusals.Other">
            <summary>
            Прочее.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Scripting.IrbisScript">
            <summary>
            Интерпретатор Lua-скриптов с учётом ИРБИС-специфики.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.#ctor">
            <summary>
            Конструктор по умолчанию
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.#ctor(ManagedIrbis.IrbisConnection)">
            <summary>
            Конструктор с заранее созданным клиентом.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript._Initialize">
            <summary>
            Внутренняя инициализация.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.CallFunction(System.String,System.Object[])">
            <summary>
            Вызов Lua-функции и получение результата.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.DoFile(System.String)">
            <summary>
            Исполнение Lua-скрипта из файла
            и получение результата.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.DoString(System.String)">
            <summary>
            Исполнение Lua-кода и получение результата.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.GetGlobal(System.String)">
            <summary>
            Получение значения глобальной переменной.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.RegisterIrbisTypes">
            <summary>
            Регистрация типов, помеченных в данной сборке атрибутом
            <see cref="T:MoonSharp.Interpreter.MoonSharpUserDataAttribute"/>
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.SetGlobal(System.String,System.Object)">
            <summary>
            Установка глобального значения.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.SetRecord(ManagedIrbis.MarcRecord)">
            <summary>
            Установка новой текущей записи.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Scripting.IrbisScript.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:ManagedIrbis.Scripting.IrbisScript.Connection">
            <summary>
            Клиент для доступа к серверу
            </summary>
        </member>
        <member name="P:ManagedIrbis.Scripting.IrbisScript.Engine">
            <summary>
            Скриптовый движок.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Scripting.IrbisScript.Record">
            <summary>
            Текущая запись
            </summary>
        </member>
        <member name="T:ManagedIrbis.SubField">
            <summary>
            MARC record subfield.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.NoCode">
            <summary>
            Нет кода подполя, т. е. код пока не задан.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.NoCodeString">
            <summary>
            Нет кода подполя, т. е. код пока не задан.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.Delimiter">
            <summary>
            Subfield delimiter.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.TrimValue">
            <summary>
            Флаг: удалять начальные и конечные пробелы в значении поля.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubField.Field">
            <summary>
            Ссылка на поле, владеющее
            данным подполем. Настраивается
            перед передачей в скрипты.
            Всё остальное время неактуально.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.#ctor(System.Char)">
            <summary>
            Конструктор с присвоением кода подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.#ctor(System.Char,System.String)">
            <summary>
            Конструктор с присвоением кода и значения подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.#ctor(System.Char,System.String,System.Boolean,ManagedIrbis.RecordField)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.Compare(ManagedIrbis.SubField,ManagedIrbis.SubField)">
            <summary>
            Compares the specified subfields.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.NotModified">
            <summary>
            Mark the subfield as unmodified.
            </summary>
            <returns>Self.</returns>
        </member>
        <member name="M:ManagedIrbis.SubField.SetCode(System.Char)">
            <summary>
            Sets the subfield code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.SetValue(System.String)">
            <summary>
            Sets the subfield value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubField.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.SubField.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.SubField.AsReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.AsReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.SubField.SetReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.SetReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.SubField.ThrowIfReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.ThrowIfReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.SubField.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.SubField.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.SubField.Code">
            <summary>
            Код подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.CodeString">
            <summary>
            Код подполя.
            </summary>
            <remarks>
            Для XML-сериализации.
            </remarks>
        </member>
        <member name="P:ManagedIrbis.SubField.Value">
            <summary>
            Значение подполя.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.Modified">
            <summary>
            Whether the subfield is modified?
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.Path">
            <summary>
            Subfield path.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubField.ReadOnly">
            <inheritdoc cref="P:AM.IReadOnly`1.ReadOnly"/>
        </member>
        <member name="T:ManagedIrbis.SubFieldCode">
            <summary>
            Subfield code related routines.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubFieldCode.DefaultFirstCode">
            <summary>
            Begin of valid codes range.
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubFieldCode.DefaultLastCode">
            <summary>
            End of valid codes range (including!).
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.IsValidCode(System.Char)">
            <summary>
            Whether the code valid.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.Normalize(System.Char)">
            <summary>
            Code normalization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.Verify(System.Char,System.Boolean)">
            <summary>
            Verify subfield code.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCode.Verify(System.Char)">
            <summary>
            Verify subfield code.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldCode.ThrowOnVerification">
            <summary>
            Throw exception on verification error.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldCode.ValidCodes">
            <summary>
            <see cref="T:AM.Collections.CharSet"/> of valid codes.
            </summary>
        </member>
        <member name="T:ManagedIrbis.SubFieldCollection">
            <summary>
            Коллекция подполей.
            Отличается тем, что принципиально не принимает
            значения <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.AddRange(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField})">
            <summary>
            Добавление в коллекцию нескольких подполей сразу
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.Assign(ManagedIrbis.SubFieldCollection)">
            <summary>
            Assign.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.AssignClone(ManagedIrbis.SubFieldCollection)">
            <summary>
            Assign clone.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.Clone">
            <summary>
            Создание "глубокой" копии коллекции.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.Find(System.Predicate{ManagedIrbis.SubField})">
            <summary>
            Поиск с помощью предиката.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.FindAll(System.Predicate{ManagedIrbis.SubField})">
            <summary>
            Отбор с помощью предиката.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.FromJson(System.String)">
            <summary>
            Restore the collection from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.ToJson">
            <summary>
            Convert the collection to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.ClearItems">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.ClearItems"/>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.InsertItem(System.Int32,ManagedIrbis.SubField)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.RemoveItem(System.Int32)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.SetItem(System.Int32,ManagedIrbis.SubField)">
            <inheritdoc cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)"/>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.AsReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.AsReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.ThrowIfReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.ThrowIfReadOnly"/>
        </member>
        <member name="M:ManagedIrbis.SubFieldCollection.SetReadOnly">
            <inheritdoc cref="M:AM.IReadOnly`1.SetReadOnly"/>
        </member>
        <member name="P:ManagedIrbis.SubFieldCollection.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldCollection.ReadOnly">
            <inheritdoc cref="P:AM.IReadOnly`1.ReadOnly"/>
        </member>
        <member name="T:ManagedIrbis.SubFieldValue">
            <summary>
            Subfield value related routines.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldValue.IsValidValue(System.String)">
            <summary>
            Whether the value valid.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldValue.Normalize(System.String)">
            <summary>
            SubField value normalization.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldValue.Verify(System.String)">
            <summary>
            Verify subfield value.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldValue.Verify(System.String,System.Boolean)">
            <summary>
            Verify subfield value.
            </summary>
        </member>
        <member name="P:ManagedIrbis.SubFieldValue.ThrowOnVerify">
            <summary>
            Throw exception on verification error.
            </summary>
        </member>
        <member name="T:ManagedIrbis.SubFieldUtility">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedIrbis.SubFieldUtility.EmptyArray">
            <summary>
            Empty array of <see cref="T:ManagedIrbis.SubField"/>'s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char)">
            <summary>
            Первое вхождение подполя с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(ManagedIrbis.SubFieldCollection,System.Char)">
            <summary>
            Первое вхождение подполя с указанным кодом.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char[])">
            <summary>
            Первое вхождение подполя с одним из указанных кодов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(ManagedIrbis.SubFieldCollection,System.Char[])">
            <summary>
            Первое вхождение подполя с одним из указанных кодов.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char,System.String)">
            <summary>
            Первое вхождение подполя с указанными кодом
            и значением (с учётом регистра символов).
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetFirstSubField(ManagedIrbis.SubFieldCollection,System.Char,System.String)">
            <summary>
            Первое вхождение подполя с указанными кодом
            и значением (с учётом регистра символов).
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char)">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(ManagedIrbis.SubFieldCollection,System.Char)">
            <summary>
            Фильтрация полей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char[])">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(ManagedIrbis.SubFieldCollection,System.Char[])">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Action{ManagedIrbis.SubField})">
            <summary>
            Выполнение неких действий над подполями.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.Func{ManagedIrbis.RecordField,System.Boolean},System.Func{ManagedIrbis.SubField,System.Boolean})">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubField(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[])">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.String)">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField},System.Char[],System.String)">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldRegex(System.Collections.Generic.IEnumerable{ManagedIrbis.RecordField},System.String[],System.Char[],System.String)">
            <summary>
            Фильтрация подполей.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldValue(ManagedIrbis.SubField)">
            <summary>
            Получение значения подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.GetSubFieldValue(System.Collections.Generic.IEnumerable{ManagedIrbis.SubField})">
            <summary>
            Получение значения подполя.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.ToJObject(ManagedIrbis.SubField)">
            <summary>
            Convert the subfield to <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.ToJson(ManagedIrbis.SubField)">
            <summary>
            Convert the subfield to JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.FromJObject(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Restore subfield from <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.FromJson(System.String)">
            <summary>
            Restore subfield from JSON.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.ToXml(ManagedIrbis.SubField)">
            <summary>
            Convert the subfield to XML.
            </summary>
        </member>
        <member name="M:ManagedIrbis.SubFieldUtility.FromXml(System.String)">
            <summary>
            Restore the subfield from XML.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Systematization.BbkException">
            <summary>
            Исключение, возникающее при работе с ББК.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkException.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkException.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Systematization.BbkIndex">
            <summary>
            Классификационный индекс ББК,
            разложенный по элементам.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkIndex.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkIndex.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkIndex.Parse(System.String)">
            <summary>
            Разбор текстовой строки.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkIndex.Dump(System.IO.TextWriter,System.String)">
            <summary>
            Дамп
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.MainIndex">
            <summary>
            Основной индекс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.TerritorialIndex">
            <summary>
            Территориальные типовые деления.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.SpecialIndex">
            <summary>
            Специальные типовые деления.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.SocialIndex">
            <summary>
            Код социальной системы.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.CombinedIndex">
            <summary>
            Комбинированный индекс.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.Qualifiers">
            <summary>
            Определители.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.Hren">
            <summary>
            Некая хрень.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkIndex.Comma">
            <summary>
            Запятая???
            </summary>
        </member>
        <member name="T:ManagedIrbis.Systematization.BbkRange">
            <summary>
            Интервал индексов ББК вроде такого:
            84.3/5
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkRange.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkRange.GetAllIndexes">
            <summary>
            Получение списка всех индексов из диапазона.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.BbkRange.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkRange.FirstIndex">
            <summary>
            Начальное значение индекса.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkRange.OriginalIndex">
            <summary>
            Оригинальное значение (со слешем).
            </summary>
        </member>
        <member name="P:ManagedIrbis.Systematization.BbkRange.LastIndex">
            <summary>
            Конечное значение индекса.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Systematization.UdkException">
            <summary>
            Исключение, возникающее при работе с УДК.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.UdkException.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.UdkException.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Systematization.UdkException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Search.TermLink">
            <summary>
            Term link.
            </summary>
        </member>
        <member name="F:ManagedIrbis.Search.TermLink.EmptyArray">
            <summary>
            Empty array of <see cref="T:ManagedIrbis.Search.TermLink"/>'s.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Clone">
            <summary>
            Clone the <see cref="T:ManagedIrbis.Search.TermLink"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Dump(System.Collections.Generic.IEnumerable{ManagedIrbis.Search.TermLink},System.IO.TextWriter)">
            <summary>
            Dump the links.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.FromPosting(ManagedIrbis.Search.TermPosting)">
            <summary>
            Convert <see cref="T:ManagedIrbis.Search.TermPosting"/>
            to <see cref="T:ManagedIrbis.Search.TermLink"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.FromPostings(ManagedIrbis.Search.TermPosting[])">
            <summary>
            Convert array of <see cref="T:ManagedIrbis.Search.TermPosting"/>
            to array of <see cref="T:ManagedIrbis.Search.TermLink"/>.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Read(System.IO.Stream)">
            <summary>
            Чтение ссылки из файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.ToMfn(ManagedIrbis.Search.TermLink[])">
            <summary>
            Convert array of <see cref="T:ManagedIrbis.Search.TermLink"/> into array of MFN.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.FromMfn(System.Int32[])">
            <summary>
            Convert array of MFN into array of <see cref="T:ManagedIrbis.Search.TermLink"/>s.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.RestoreFromStream(System.IO.BinaryReader)"/>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc cref="M:AM.Runtime.IHandmadeSerializable.SaveToStream(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Verify(System.Boolean)">
            <inheritdoc cref="M:AM.IVerifiable.Verify(System.Boolean)"/>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Equals(ManagedIrbis.Search.TermLink)">
            <summary>
            Compares this term link with another.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:ManagedIrbis.Search.TermLink.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="P:ManagedIrbis.Search.TermLink.Mfn">
            <summary>
            MFN записи с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermLink.Tag">
            <summary>
            Тег поля с искомым термом.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermLink.Occurrence">
            <summary>
            Повторение поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Search.TermLink.Index">
            <summary>
            Смещение от начала поля.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.FieldEditorRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.FieldEditorRepository.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.FieldEditorRepository.AddEditor(ManagedIrbis.Worksheet.EditMode,ManagedIrbis.Worksheet.IMarcEditor)">
            <summary>
            Add editor for specified mode.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.FieldEditorRepository.GetEditor(ManagedIrbis.Worksheet.EditMode)">
            <summary>
            Get editor for specified mode.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.FieldEditorRepository.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.IMarcEditor">
            <summary>
            Generic editor for field/subfield.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.IMarcEditor.PerformEdit(ManagedIrbis.Worksheet.EditContext)">
            <summary>
            Perform edit action using specified context.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.SubFieldEditorRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.SubFieldEditorRepository.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.SubFieldEditorRepository.AddEditor(ManagedIrbis.Worksheet.EditMode,ManagedIrbis.Worksheet.IMarcEditor)">
            <summary>
            Add editor for specified mode.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.SubFieldEditorRepository.GetEditor(ManagedIrbis.Worksheet.EditMode)">
            <summary>
            Get editor for specified mode.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.SubFieldEditorRepository.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.WorksheetItem">
            <summary>
            Одна строчка в рабочем листе.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetItem.ParseStream(System.IO.TextReader)">
            <summary>
            Разбор потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetItem.RestoreFromStream(System.IO.BinaryReader)">
            <summary>
            Просим объект восстановить свое состояние из потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetItem.SaveToStream(System.IO.BinaryWriter)">
            <summary>
            Просим объект сохранить себя в потоке.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetItem.ToString">
            <inheritdoc />
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Tag">
            <summary>
            Числовая метка поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Title">
            <summary>
            Наименование поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Repeatable">
            <summary>
            Повторяемость поля.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Help">
            <summary>
            Индекс контекстной помощи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.EditMode">
            <summary>
            Режим ввода.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.InputInfo">
            <summary>
            Дополнительная информация для расширенных
            средств ввода.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.FormalVerification">
            <summary>
            ФЛК.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Hint">
            <summary>
            Подсказка - текст помощи (инструкции),
            сопровождающий ввод в поле.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.DefaultValue">
            <summary>
            Знчение по умолчанию при создании 
            новой записи.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetItem.Reserved">
            <summary>
            Используется при определенных режимах ввода.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.WorksheetPage">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetPage.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetPage.ParseStream(System.IO.TextReader,System.String,System.Int32)">
            <summary>
            Разбор потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetPage.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetPage.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WorksheetPage.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetPage.Name">
            <summary>
            Имя страницы.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WorksheetPage.Items">
            <summary>
            Элементы страницы.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.WsFile">
            <summary>
            Рабочий лист.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.ParseStream(System.IO.TextReader)">
            <summary>
            Разбор потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.ReadFromServer(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.FixupLocalFile(System.String,System.Text.Encoding,ManagedIrbis.Worksheet.WsFile)">
            <summary>
            Fixup nested worksheets for local file.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.ReadLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Считывание из локального файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.ReadLocalFile(System.String)">
            <summary>
            Считывание из локального файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WsFile.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WsFile.Name">
            <summary>
            Имя рабочего листа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WsFile.Pages">
            <summary>
            Страницы рабочего листа.
            </summary>
        </member>
        <member name="T:ManagedIrbis.Worksheet.WssFile">
            <summary>
            Вложенный рабочий лист.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.ParseStream(System.IO.TextReader)">
            <summary>
            Разбор потока.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.ReadFromServer(ManagedIrbis.IrbisConnection,ManagedIrbis.Infrastructure.FileSpecification)">
            <summary>
            Read from server.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.ReadLocalFile(System.String,System.Text.Encoding)">
            <summary>
            Считывание из локального файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.ReadLocalFile(System.String)">
            <summary>
            Считывание из локального файла.
            </summary>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.RestoreFromStream(System.IO.BinaryReader)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.SaveToStream(System.IO.BinaryWriter)">
            <inheritdoc/>
        </member>
        <member name="M:ManagedIrbis.Worksheet.WssFile.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WssFile.Name">
            <summary>
            Имя рабочего листа.
            </summary>
        </member>
        <member name="P:ManagedIrbis.Worksheet.WssFile.Items">
            <summary>
            Элементы рабочего листа.
            </summary>
        </member>
    </members>
</doc>
